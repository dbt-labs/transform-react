schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

input AddUserRoleInput {
  role: Role!
  userId: Int!
}

type AddUserRoleOutput {
  userId: Int!
}

"""A wrapper for the response we get from Auth0's user profile API"""
type Auth0Profile {
  blocked: Boolean
  lastIp: String
  lastLogin: DateTime
  loginsCount: Int
  picture: String
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

input CreateApiKeyForUserInput {
  userId: Int!
}

type CreateApiKeyForUserOutput {
  created_key_full_string: String!
  created_key_prefix: String!
  revoked_key_prefixes: [String!]
}

type CreateApiKeyOutput {
  createdApiKey: api_keys
  created_key_full_string: String!
  created_key_prefix: String!
  revoked_key_prefixes: [String!]
}

input CreateUserForOrgInput {
  email: String!
  isOrgOwner: Boolean
  orgId: Int!
  userName: String!
}

type CreateUserForOrgOutput {
  userId: Int!
}

input CreateUserInput {
  email: String!
  isOrgOwner: Boolean
  userName: String!
}

type CreateUserOutput {
  user: users
  userId: Int!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input DeactivateUserInput {
  userId: Int!
}

type DeactivateUserOutput {
  userId: Int!
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

type LogMQLLogs {
  ok: Boolean
}

"""
This is the externally-facing Graphene object representing the available MQL server download.

TODO: There's likely a simple way to merge these two objects together
"""
type MQLServerVersion {
  downloadUrl: String
  version: String
  versionHash: String
}

"""Base mutation object exposed by GraphQL."""
type Mutation {
  logMqlLog(level: String, message: String, tags: [String!]): LogMQLLogs
}

"""
Base Query object exposed by GraphQL.

Each field defined below is accessible by the API, by calling the equivalent resolver.
"""
type Query {
  auth0Profile(auth0Id: String!): Auth0Profile
  latestMqlServer: MQLServerVersion
  mqlServerUrl: String
}

input ReactivateUserInput {
  userId: Int!
}

type ReactivateUserOutput {
  userId: Int!
}

input RemoveUserRoleInput {
  role: Role!
  userId: Int!
}

type RemoveUserRoleOutput {
  userId: Int!
}

enum Role {
  admin
  org_admin
  service_user
  user
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

input UpdateMyEmailInput {
  email: String!
}

type UpdateMyEmailOutput {
  userId: Int!
}

input UpdateUserEmailForOrgInput {
  email: String!
  orgId: Int!
  userId: Int!
}

type UpdateUserEmailForOrgOutput {
  userId: Int!
}

"""
Annotations are a great mechanism for memorializing outliers in your data.


columns and relationships of "annotations"

"""
type annotations {
  """An object relationship"""
  author: users!
  authorId: Int!

  """Timestamp indicating when the `Annotation` was created"""
  createdAt: timestamptz

  """Last date when the `Annotation`  applies"""
  dateEndedAt: date

  """Date when the `Annotation` first applies"""
  dateStartedAt: date
  date_end: String
  date_start: String

  """
  Soft delete mechanism for an Annotation. Rows with non-null values are omitted from list results.
  """
  deletedAt: timestamptz

  """
  A qualitative assessment of the expected impact helps contextualize the annotation for future consumers.
  """
  expectedImpact: String!

  """ID field to identify an Annotation"""
  id: Int!

  """An array relationship"""
  metricAnnotations(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): [metric_annotations!]!

  """An aggregated array relationship"""
  metricAnnotations_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): metric_annotations_aggregate!
  notified_at: timestamptz

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  priority: priorities_enum

  """
  The full description of an annotation with the complete context needed to understand what took place.
  """
  text: String!
  timestamp_created: Int

  """A short title to identify the annotation in a list view or tooltip"""
  title: String!

  """Timestamp indicating when the `Annotation` was last updated."""
  updatedAt: timestamptz
}

"""
aggregated selection of "annotations"
"""
type annotations_aggregate {
  aggregate: annotations_aggregate_fields
  nodes: [annotations!]!
}

"""
aggregate fields of "annotations"
"""
type annotations_aggregate_fields {
  avg: annotations_avg_fields
  count(columns: [annotations_select_column!], distinct: Boolean): Int
  max: annotations_max_fields
  min: annotations_min_fields
  stddev: annotations_stddev_fields
  stddev_pop: annotations_stddev_pop_fields
  stddev_samp: annotations_stddev_samp_fields
  sum: annotations_sum_fields
  var_pop: annotations_var_pop_fields
  var_samp: annotations_var_samp_fields
  variance: annotations_variance_fields
}

"""
order by aggregate values of table "annotations"
"""
input annotations_aggregate_order_by {
  avg: annotations_avg_order_by
  count: order_by
  max: annotations_max_order_by
  min: annotations_min_order_by
  stddev: annotations_stddev_order_by
  stddev_pop: annotations_stddev_pop_order_by
  stddev_samp: annotations_stddev_samp_order_by
  sum: annotations_sum_order_by
  var_pop: annotations_var_pop_order_by
  var_samp: annotations_var_samp_order_by
  variance: annotations_variance_order_by
}

"""
input type for inserting array relation for remote table "annotations"
"""
input annotations_arr_rel_insert_input {
  data: [annotations_insert_input!]!
  on_conflict: annotations_on_conflict
}

"""aggregate avg on columns"""
type annotations_avg_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by avg() on columns of table "annotations"
"""
input annotations_avg_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""
Boolean expression to filter rows from the table "annotations". All fields are combined with a logical 'AND'.
"""
input annotations_bool_exp {
  _and: [annotations_bool_exp]
  _not: annotations_bool_exp
  _or: [annotations_bool_exp]
  author: users_bool_exp
  authorId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  dateEndedAt: date_comparison_exp
  dateStartedAt: date_comparison_exp
  date_end: String_comparison_exp
  date_start: String_comparison_exp
  deletedAt: timestamptz_comparison_exp
  expectedImpact: String_comparison_exp
  id: Int_comparison_exp
  metricAnnotations: metric_annotations_bool_exp
  notified_at: timestamptz_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  priority: priorities_enum_comparison_exp
  text: String_comparison_exp
  timestamp_created: Int_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "annotations"
"""
enum annotations_constraint {
  """unique or primary key constraint"""
  annotations_pkey
}

"""
input type for incrementing integer column in table "annotations"
"""
input annotations_inc_input {
  authorId: Int
  id: Int
  organizationId: Int
  timestamp_created: Int
}

"""
input type for inserting data into table "annotations"
"""
input annotations_insert_input {
  author: users_obj_rel_insert_input
  authorId: Int
  createdAt: timestamptz
  dateEndedAt: date
  dateStartedAt: date
  date_end: String
  date_start: String
  deletedAt: timestamptz
  expectedImpact: String
  id: Int
  metricAnnotations: metric_annotations_arr_rel_insert_input
  notified_at: timestamptz
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  priority: priorities_enum
  text: String
  timestamp_created: Int
  title: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type annotations_max_fields {
  authorId: Int
  createdAt: timestamptz
  dateEndedAt: date
  dateStartedAt: date
  date_end: String
  date_start: String
  deletedAt: timestamptz
  expectedImpact: String
  id: Int
  notified_at: timestamptz
  organizationId: Int
  text: String
  timestamp_created: Int
  title: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "annotations"
"""
input annotations_max_order_by {
  authorId: order_by
  createdAt: order_by
  dateEndedAt: order_by
  dateStartedAt: order_by
  date_end: order_by
  date_start: order_by
  deletedAt: order_by
  expectedImpact: order_by
  id: order_by
  notified_at: order_by
  organizationId: order_by
  text: order_by
  timestamp_created: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type annotations_min_fields {
  authorId: Int
  createdAt: timestamptz
  dateEndedAt: date
  dateStartedAt: date
  date_end: String
  date_start: String
  deletedAt: timestamptz
  expectedImpact: String
  id: Int
  notified_at: timestamptz
  organizationId: Int
  text: String
  timestamp_created: Int
  title: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "annotations"
"""
input annotations_min_order_by {
  authorId: order_by
  createdAt: order_by
  dateEndedAt: order_by
  dateStartedAt: order_by
  date_end: order_by
  date_start: order_by
  deletedAt: order_by
  expectedImpact: order_by
  id: order_by
  notified_at: order_by
  organizationId: order_by
  text: order_by
  timestamp_created: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "annotations"
"""
type annotations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [annotations!]!
}

"""
input type for inserting object relation for remote table "annotations"
"""
input annotations_obj_rel_insert_input {
  data: annotations_insert_input!
  on_conflict: annotations_on_conflict
}

"""
on conflict condition type for table "annotations"
"""
input annotations_on_conflict {
  constraint: annotations_constraint!
  update_columns: [annotations_update_column!]!
  where: annotations_bool_exp
}

"""
ordering options when selecting data from "annotations"
"""
input annotations_order_by {
  author: users_order_by
  authorId: order_by
  createdAt: order_by
  dateEndedAt: order_by
  dateStartedAt: order_by
  date_end: order_by
  date_start: order_by
  deletedAt: order_by
  expectedImpact: order_by
  id: order_by
  metricAnnotations_aggregate: metric_annotations_aggregate_order_by
  notified_at: order_by
  organization: organizations_order_by
  organizationId: order_by
  priority: order_by
  text: order_by
  timestamp_created: order_by
  title: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "annotations"
"""
input annotations_pk_columns_input {
  """ID field to identify an Annotation"""
  id: Int!
}

"""
select columns of table "annotations"
"""
enum annotations_select_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  dateEndedAt

  """column name"""
  dateStartedAt

  """column name"""
  date_end

  """column name"""
  date_start

  """column name"""
  deletedAt

  """column name"""
  expectedImpact

  """column name"""
  id

  """column name"""
  notified_at

  """column name"""
  organizationId

  """column name"""
  priority

  """column name"""
  text

  """column name"""
  timestamp_created

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
input type for updating data in table "annotations"
"""
input annotations_set_input {
  authorId: Int
  createdAt: timestamptz
  dateEndedAt: date
  dateStartedAt: date
  date_end: String
  date_start: String
  deletedAt: timestamptz
  expectedImpact: String
  id: Int
  notified_at: timestamptz
  organizationId: Int
  priority: priorities_enum
  text: String
  timestamp_created: Int
  title: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type annotations_stddev_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by stddev() on columns of table "annotations"
"""
input annotations_stddev_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""aggregate stddev_pop on columns"""
type annotations_stddev_pop_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by stddev_pop() on columns of table "annotations"
"""
input annotations_stddev_pop_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""aggregate stddev_samp on columns"""
type annotations_stddev_samp_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by stddev_samp() on columns of table "annotations"
"""
input annotations_stddev_samp_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""aggregate sum on columns"""
type annotations_sum_fields {
  authorId: Int
  id: Int
  organizationId: Int
  timestamp_created: Int
}

"""
order by sum() on columns of table "annotations"
"""
input annotations_sum_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""
update columns of table "annotations"
"""
enum annotations_update_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  dateEndedAt

  """column name"""
  dateStartedAt

  """column name"""
  date_end

  """column name"""
  date_start

  """column name"""
  deletedAt

  """column name"""
  expectedImpact

  """column name"""
  id

  """column name"""
  notified_at

  """column name"""
  organizationId

  """column name"""
  priority

  """column name"""
  text

  """column name"""
  timestamp_created

  """column name"""
  title

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type annotations_var_pop_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by var_pop() on columns of table "annotations"
"""
input annotations_var_pop_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""aggregate var_samp on columns"""
type annotations_var_samp_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by var_samp() on columns of table "annotations"
"""
input annotations_var_samp_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""aggregate variance on columns"""
type annotations_variance_fields {
  authorId: Float
  id: Float
  organizationId: Float
  timestamp_created: Float
}

"""
order by variance() on columns of table "annotations"
"""
input annotations_variance_order_by {
  authorId: order_by
  id: order_by
  organizationId: order_by
  timestamp_created: order_by
}

"""
API Keys are an alternative to JWTs. They do not expire, but they can be revoked. They carry the same roles and User/Org mappings as JWTs.


columns and relationships of "api_keys"

"""
type api_keys {
  """A timestamp for when the `APIKey` was created"""
  createdAt: timestamptz
  date_create: Int
  date_revoked: Int

  """A timestamp for the last time the `ApiKey` was used."""
  lastUsedAt: timestamptz
  last_used_ts: Int

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """
  The first few characters of the `ApiKey`. Useful for identifying the key without revealing it entirely.
  """
  prefix: String!

  """
  If the `ApiKey` has been revoked (soft deleted), this is the timestamp for when it was revoked.
  """
  revokedAt: timestamptz

  """An object relationship"""
  revoker: users
  revokerId: Int
  scope: String
  secretHash: String!
  type: String!

  """A timestamp for the last time the `ApiKey` was used."""
  updatedAt: timestamptz

  """An object relationship"""
  user: users!
  userId: Int!
}

"""
aggregated selection of "api_keys"
"""
type api_keys_aggregate {
  aggregate: api_keys_aggregate_fields
  nodes: [api_keys!]!
}

"""
aggregate fields of "api_keys"
"""
type api_keys_aggregate_fields {
  avg: api_keys_avg_fields
  count(columns: [api_keys_select_column!], distinct: Boolean): Int
  max: api_keys_max_fields
  min: api_keys_min_fields
  stddev: api_keys_stddev_fields
  stddev_pop: api_keys_stddev_pop_fields
  stddev_samp: api_keys_stddev_samp_fields
  sum: api_keys_sum_fields
  var_pop: api_keys_var_pop_fields
  var_samp: api_keys_var_samp_fields
  variance: api_keys_variance_fields
}

"""
order by aggregate values of table "api_keys"
"""
input api_keys_aggregate_order_by {
  avg: api_keys_avg_order_by
  count: order_by
  max: api_keys_max_order_by
  min: api_keys_min_order_by
  stddev: api_keys_stddev_order_by
  stddev_pop: api_keys_stddev_pop_order_by
  stddev_samp: api_keys_stddev_samp_order_by
  sum: api_keys_sum_order_by
  var_pop: api_keys_var_pop_order_by
  var_samp: api_keys_var_samp_order_by
  variance: api_keys_variance_order_by
}

"""
input type for inserting array relation for remote table "api_keys"
"""
input api_keys_arr_rel_insert_input {
  data: [api_keys_insert_input!]!
  on_conflict: api_keys_on_conflict
}

"""aggregate avg on columns"""
type api_keys_avg_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by avg() on columns of table "api_keys"
"""
input api_keys_avg_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "api_keys". All fields are combined with a logical 'AND'.
"""
input api_keys_bool_exp {
  _and: [api_keys_bool_exp]
  _not: api_keys_bool_exp
  _or: [api_keys_bool_exp]
  createdAt: timestamptz_comparison_exp
  date_create: Int_comparison_exp
  date_revoked: Int_comparison_exp
  lastUsedAt: timestamptz_comparison_exp
  last_used_ts: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  prefix: String_comparison_exp
  revokedAt: timestamptz_comparison_exp
  revoker: users_bool_exp
  revokerId: Int_comparison_exp
  scope: String_comparison_exp
  secretHash: String_comparison_exp
  type: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "api_keys"
"""
enum api_keys_constraint {
  """unique or primary key constraint"""
  api_keys_pkey
}

"""
input type for incrementing integer column in table "api_keys"
"""
input api_keys_inc_input {
  date_create: Int
  date_revoked: Int
  last_used_ts: Int
  organizationId: Int
  revokerId: Int
  userId: Int
}

"""
input type for inserting data into table "api_keys"
"""
input api_keys_insert_input {
  createdAt: timestamptz
  date_create: Int
  date_revoked: Int
  lastUsedAt: timestamptz
  last_used_ts: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  prefix: String
  revokedAt: timestamptz
  revoker: users_obj_rel_insert_input
  revokerId: Int
  scope: String
  secretHash: String
  type: String
  updatedAt: timestamptz
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type api_keys_max_fields {
  createdAt: timestamptz
  date_create: Int
  date_revoked: Int
  lastUsedAt: timestamptz
  last_used_ts: Int
  organizationId: Int
  prefix: String
  revokedAt: timestamptz
  revokerId: Int
  scope: String
  secretHash: String
  type: String
  updatedAt: timestamptz
  userId: Int
}

"""
order by max() on columns of table "api_keys"
"""
input api_keys_max_order_by {
  createdAt: order_by
  date_create: order_by
  date_revoked: order_by
  lastUsedAt: order_by
  last_used_ts: order_by
  organizationId: order_by
  prefix: order_by
  revokedAt: order_by
  revokerId: order_by
  scope: order_by
  secretHash: order_by
  type: order_by
  updatedAt: order_by
  userId: order_by
}

"""aggregate min on columns"""
type api_keys_min_fields {
  createdAt: timestamptz
  date_create: Int
  date_revoked: Int
  lastUsedAt: timestamptz
  last_used_ts: Int
  organizationId: Int
  prefix: String
  revokedAt: timestamptz
  revokerId: Int
  scope: String
  secretHash: String
  type: String
  updatedAt: timestamptz
  userId: Int
}

"""
order by min() on columns of table "api_keys"
"""
input api_keys_min_order_by {
  createdAt: order_by
  date_create: order_by
  date_revoked: order_by
  lastUsedAt: order_by
  last_used_ts: order_by
  organizationId: order_by
  prefix: order_by
  revokedAt: order_by
  revokerId: order_by
  scope: order_by
  secretHash: order_by
  type: order_by
  updatedAt: order_by
  userId: order_by
}

"""
response of any mutation on the table "api_keys"
"""
type api_keys_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [api_keys!]!
}

"""
input type for inserting object relation for remote table "api_keys"
"""
input api_keys_obj_rel_insert_input {
  data: api_keys_insert_input!
  on_conflict: api_keys_on_conflict
}

"""
on conflict condition type for table "api_keys"
"""
input api_keys_on_conflict {
  constraint: api_keys_constraint!
  update_columns: [api_keys_update_column!]!
  where: api_keys_bool_exp
}

"""
ordering options when selecting data from "api_keys"
"""
input api_keys_order_by {
  createdAt: order_by
  date_create: order_by
  date_revoked: order_by
  lastUsedAt: order_by
  last_used_ts: order_by
  organization: organizations_order_by
  organizationId: order_by
  prefix: order_by
  revokedAt: order_by
  revoker: users_order_by
  revokerId: order_by
  scope: order_by
  secretHash: order_by
  type: order_by
  updatedAt: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "api_keys"
"""
input api_keys_pk_columns_input {
  """
  The first few characters of the `ApiKey`. Useful for identifying the key without revealing it entirely.
  """
  prefix: String!
}

"""
select columns of table "api_keys"
"""
enum api_keys_select_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_revoked

  """column name"""
  lastUsedAt

  """column name"""
  last_used_ts

  """column name"""
  organizationId

  """column name"""
  prefix

  """column name"""
  revokedAt

  """column name"""
  revokerId

  """column name"""
  scope

  """column name"""
  secretHash

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""
input type for updating data in table "api_keys"
"""
input api_keys_set_input {
  createdAt: timestamptz
  date_create: Int
  date_revoked: Int
  lastUsedAt: timestamptz
  last_used_ts: Int
  organizationId: Int
  prefix: String
  revokedAt: timestamptz
  revokerId: Int
  scope: String
  secretHash: String
  type: String
  updatedAt: timestamptz
  userId: Int
}

"""aggregate stddev on columns"""
type api_keys_stddev_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by stddev() on columns of table "api_keys"
"""
input api_keys_stddev_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type api_keys_stddev_pop_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "api_keys"
"""
input api_keys_stddev_pop_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type api_keys_stddev_samp_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "api_keys"
"""
input api_keys_stddev_samp_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type api_keys_sum_fields {
  date_create: Int
  date_revoked: Int
  last_used_ts: Int
  organizationId: Int
  revokerId: Int
  userId: Int
}

"""
order by sum() on columns of table "api_keys"
"""
input api_keys_sum_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""
update columns of table "api_keys"
"""
enum api_keys_update_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_revoked

  """column name"""
  lastUsedAt

  """column name"""
  last_used_ts

  """column name"""
  organizationId

  """column name"""
  prefix

  """column name"""
  revokedAt

  """column name"""
  revokerId

  """column name"""
  scope

  """column name"""
  secretHash

  """column name"""
  type

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type api_keys_var_pop_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "api_keys"
"""
input api_keys_var_pop_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type api_keys_var_samp_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "api_keys"
"""
input api_keys_var_samp_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type api_keys_variance_fields {
  date_create: Float
  date_revoked: Float
  last_used_ts: Float
  organizationId: Float
  revokerId: Float
  userId: Float
}

"""
order by variance() on columns of table "api_keys"
"""
input api_keys_variance_order_by {
  date_create: order_by
  date_revoked: order_by
  last_used_ts: order_by
  organizationId: order_by
  revokerId: order_by
  userId: order_by
}

scalar bigint

"""
expression to compare columns of type bigint. All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
columns and relationships of "branch_metadatas"
"""
type branch_metadatas {
  commit: String!
  id: Int!
  model_key: String!
  timestamp: Int!
}

"""
aggregated selection of "branch_metadatas"
"""
type branch_metadatas_aggregate {
  aggregate: branch_metadatas_aggregate_fields
  nodes: [branch_metadatas!]!
}

"""
aggregate fields of "branch_metadatas"
"""
type branch_metadatas_aggregate_fields {
  avg: branch_metadatas_avg_fields
  count(columns: [branch_metadatas_select_column!], distinct: Boolean): Int
  max: branch_metadatas_max_fields
  min: branch_metadatas_min_fields
  stddev: branch_metadatas_stddev_fields
  stddev_pop: branch_metadatas_stddev_pop_fields
  stddev_samp: branch_metadatas_stddev_samp_fields
  sum: branch_metadatas_sum_fields
  var_pop: branch_metadatas_var_pop_fields
  var_samp: branch_metadatas_var_samp_fields
  variance: branch_metadatas_variance_fields
}

"""
order by aggregate values of table "branch_metadatas"
"""
input branch_metadatas_aggregate_order_by {
  avg: branch_metadatas_avg_order_by
  count: order_by
  max: branch_metadatas_max_order_by
  min: branch_metadatas_min_order_by
  stddev: branch_metadatas_stddev_order_by
  stddev_pop: branch_metadatas_stddev_pop_order_by
  stddev_samp: branch_metadatas_stddev_samp_order_by
  sum: branch_metadatas_sum_order_by
  var_pop: branch_metadatas_var_pop_order_by
  var_samp: branch_metadatas_var_samp_order_by
  variance: branch_metadatas_variance_order_by
}

"""
input type for inserting array relation for remote table "branch_metadatas"
"""
input branch_metadatas_arr_rel_insert_input {
  data: [branch_metadatas_insert_input!]!
  on_conflict: branch_metadatas_on_conflict
}

"""aggregate avg on columns"""
type branch_metadatas_avg_fields {
  id: Float
  timestamp: Float
}

"""
order by avg() on columns of table "branch_metadatas"
"""
input branch_metadatas_avg_order_by {
  id: order_by
  timestamp: order_by
}

"""
Boolean expression to filter rows from the table "branch_metadatas". All fields are combined with a logical 'AND'.
"""
input branch_metadatas_bool_exp {
  _and: [branch_metadatas_bool_exp]
  _not: branch_metadatas_bool_exp
  _or: [branch_metadatas_bool_exp]
  commit: String_comparison_exp
  id: Int_comparison_exp
  model_key: String_comparison_exp
  timestamp: Int_comparison_exp
}

"""
unique or primary key constraints on table "branch_metadatas"
"""
enum branch_metadatas_constraint {
  """unique or primary key constraint"""
  branch_metadatas_pkey

  """unique or primary key constraint"""
  ix_branch_metadatas_model_key
}

"""
input type for incrementing integer column in table "branch_metadatas"
"""
input branch_metadatas_inc_input {
  id: Int
  timestamp: Int
}

"""
input type for inserting data into table "branch_metadatas"
"""
input branch_metadatas_insert_input {
  commit: String
  id: Int
  model_key: String
  timestamp: Int
}

"""aggregate max on columns"""
type branch_metadatas_max_fields {
  commit: String
  id: Int
  model_key: String
  timestamp: Int
}

"""
order by max() on columns of table "branch_metadatas"
"""
input branch_metadatas_max_order_by {
  commit: order_by
  id: order_by
  model_key: order_by
  timestamp: order_by
}

"""aggregate min on columns"""
type branch_metadatas_min_fields {
  commit: String
  id: Int
  model_key: String
  timestamp: Int
}

"""
order by min() on columns of table "branch_metadatas"
"""
input branch_metadatas_min_order_by {
  commit: order_by
  id: order_by
  model_key: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "branch_metadatas"
"""
type branch_metadatas_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [branch_metadatas!]!
}

"""
input type for inserting object relation for remote table "branch_metadatas"
"""
input branch_metadatas_obj_rel_insert_input {
  data: branch_metadatas_insert_input!
  on_conflict: branch_metadatas_on_conflict
}

"""
on conflict condition type for table "branch_metadatas"
"""
input branch_metadatas_on_conflict {
  constraint: branch_metadatas_constraint!
  update_columns: [branch_metadatas_update_column!]!
  where: branch_metadatas_bool_exp
}

"""
ordering options when selecting data from "branch_metadatas"
"""
input branch_metadatas_order_by {
  commit: order_by
  id: order_by
  model_key: order_by
  timestamp: order_by
}

"""
primary key columns input for table: "branch_metadatas"
"""
input branch_metadatas_pk_columns_input {
  id: Int!
}

"""
select columns of table "branch_metadatas"
"""
enum branch_metadatas_select_column {
  """column name"""
  commit

  """column name"""
  id

  """column name"""
  model_key

  """column name"""
  timestamp
}

"""
input type for updating data in table "branch_metadatas"
"""
input branch_metadatas_set_input {
  commit: String
  id: Int
  model_key: String
  timestamp: Int
}

"""aggregate stddev on columns"""
type branch_metadatas_stddev_fields {
  id: Float
  timestamp: Float
}

"""
order by stddev() on columns of table "branch_metadatas"
"""
input branch_metadatas_stddev_order_by {
  id: order_by
  timestamp: order_by
}

"""aggregate stddev_pop on columns"""
type branch_metadatas_stddev_pop_fields {
  id: Float
  timestamp: Float
}

"""
order by stddev_pop() on columns of table "branch_metadatas"
"""
input branch_metadatas_stddev_pop_order_by {
  id: order_by
  timestamp: order_by
}

"""aggregate stddev_samp on columns"""
type branch_metadatas_stddev_samp_fields {
  id: Float
  timestamp: Float
}

"""
order by stddev_samp() on columns of table "branch_metadatas"
"""
input branch_metadatas_stddev_samp_order_by {
  id: order_by
  timestamp: order_by
}

"""aggregate sum on columns"""
type branch_metadatas_sum_fields {
  id: Int
  timestamp: Int
}

"""
order by sum() on columns of table "branch_metadatas"
"""
input branch_metadatas_sum_order_by {
  id: order_by
  timestamp: order_by
}

"""
update columns of table "branch_metadatas"
"""
enum branch_metadatas_update_column {
  """column name"""
  commit

  """column name"""
  id

  """column name"""
  model_key

  """column name"""
  timestamp
}

"""aggregate var_pop on columns"""
type branch_metadatas_var_pop_fields {
  id: Float
  timestamp: Float
}

"""
order by var_pop() on columns of table "branch_metadatas"
"""
input branch_metadatas_var_pop_order_by {
  id: order_by
  timestamp: order_by
}

"""aggregate var_samp on columns"""
type branch_metadatas_var_samp_fields {
  id: Float
  timestamp: Float
}

"""
order by var_samp() on columns of table "branch_metadatas"
"""
input branch_metadatas_var_samp_order_by {
  id: order_by
  timestamp: order_by
}

"""aggregate variance on columns"""
type branch_metadatas_variance_fields {
  id: Float
  timestamp: Float
}

"""
order by variance() on columns of table "branch_metadatas"
"""
input branch_metadatas_variance_order_by {
  id: order_by
  timestamp: order_by
}

"""
Dashboard Item Configs are the inputs that configure a DashboardItem.


columns and relationships of "dashboard_item_configs"

"""
type dashboard_item_configs {
  dashboardRenderableType: dashboard_renderable_types_enum!

  """An object relationship"""
  dashboardSection: dashboard_sections!
  dashboardSectionId: Int!
  id: Int!

  """An object relationship"""
  metricCollection: metric_collections
  metricCollectionId: Int
  metricId: Int
  position: Int
  subtitle: String

  """An object relationship"""
  team: teams
  teamId: Int
  title: String

  """An object relationship"""
  user: users
  userId: Int
}

"""
aggregated selection of "dashboard_item_configs"
"""
type dashboard_item_configs_aggregate {
  aggregate: dashboard_item_configs_aggregate_fields
  nodes: [dashboard_item_configs!]!
}

"""
aggregate fields of "dashboard_item_configs"
"""
type dashboard_item_configs_aggregate_fields {
  avg: dashboard_item_configs_avg_fields
  count(columns: [dashboard_item_configs_select_column!], distinct: Boolean): Int
  max: dashboard_item_configs_max_fields
  min: dashboard_item_configs_min_fields
  stddev: dashboard_item_configs_stddev_fields
  stddev_pop: dashboard_item_configs_stddev_pop_fields
  stddev_samp: dashboard_item_configs_stddev_samp_fields
  sum: dashboard_item_configs_sum_fields
  var_pop: dashboard_item_configs_var_pop_fields
  var_samp: dashboard_item_configs_var_samp_fields
  variance: dashboard_item_configs_variance_fields
}

"""
order by aggregate values of table "dashboard_item_configs"
"""
input dashboard_item_configs_aggregate_order_by {
  avg: dashboard_item_configs_avg_order_by
  count: order_by
  max: dashboard_item_configs_max_order_by
  min: dashboard_item_configs_min_order_by
  stddev: dashboard_item_configs_stddev_order_by
  stddev_pop: dashboard_item_configs_stddev_pop_order_by
  stddev_samp: dashboard_item_configs_stddev_samp_order_by
  sum: dashboard_item_configs_sum_order_by
  var_pop: dashboard_item_configs_var_pop_order_by
  var_samp: dashboard_item_configs_var_samp_order_by
  variance: dashboard_item_configs_variance_order_by
}

"""
input type for inserting array relation for remote table "dashboard_item_configs"
"""
input dashboard_item_configs_arr_rel_insert_input {
  data: [dashboard_item_configs_insert_input!]!
  on_conflict: dashboard_item_configs_on_conflict
}

"""aggregate avg on columns"""
type dashboard_item_configs_avg_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by avg() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_avg_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "dashboard_item_configs". All fields are combined with a logical 'AND'.
"""
input dashboard_item_configs_bool_exp {
  _and: [dashboard_item_configs_bool_exp]
  _not: dashboard_item_configs_bool_exp
  _or: [dashboard_item_configs_bool_exp]
  dashboardRenderableType: dashboard_renderable_types_enum_comparison_exp
  dashboardSection: dashboard_sections_bool_exp
  dashboardSectionId: Int_comparison_exp
  id: Int_comparison_exp
  metricCollection: metric_collections_bool_exp
  metricCollectionId: Int_comparison_exp
  metricId: Int_comparison_exp
  position: Int_comparison_exp
  subtitle: String_comparison_exp
  team: teams_bool_exp
  teamId: Int_comparison_exp
  title: String_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_item_configs"
"""
enum dashboard_item_configs_constraint {
  """unique or primary key constraint"""
  dashboard_item_configs_pkey
}

"""
input type for incrementing integer column in table "dashboard_item_configs"
"""
input dashboard_item_configs_inc_input {
  dashboardSectionId: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  teamId: Int
  userId: Int
}

"""
input type for inserting data into table "dashboard_item_configs"
"""
input dashboard_item_configs_insert_input {
  dashboardRenderableType: dashboard_renderable_types_enum
  dashboardSection: dashboard_sections_obj_rel_insert_input
  dashboardSectionId: Int
  id: Int
  metricCollection: metric_collections_obj_rel_insert_input
  metricCollectionId: Int
  metricId: Int
  position: Int
  subtitle: String
  team: teams_obj_rel_insert_input
  teamId: Int
  title: String
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type dashboard_item_configs_max_fields {
  dashboardSectionId: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  subtitle: String
  teamId: Int
  title: String
  userId: Int
}

"""
order by max() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_max_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  subtitle: order_by
  teamId: order_by
  title: order_by
  userId: order_by
}

"""aggregate min on columns"""
type dashboard_item_configs_min_fields {
  dashboardSectionId: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  subtitle: String
  teamId: Int
  title: String
  userId: Int
}

"""
order by min() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_min_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  subtitle: order_by
  teamId: order_by
  title: order_by
  userId: order_by
}

"""
response of any mutation on the table "dashboard_item_configs"
"""
type dashboard_item_configs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboard_item_configs!]!
}

"""
input type for inserting object relation for remote table "dashboard_item_configs"
"""
input dashboard_item_configs_obj_rel_insert_input {
  data: dashboard_item_configs_insert_input!
  on_conflict: dashboard_item_configs_on_conflict
}

"""
on conflict condition type for table "dashboard_item_configs"
"""
input dashboard_item_configs_on_conflict {
  constraint: dashboard_item_configs_constraint!
  update_columns: [dashboard_item_configs_update_column!]!
  where: dashboard_item_configs_bool_exp
}

"""
ordering options when selecting data from "dashboard_item_configs"
"""
input dashboard_item_configs_order_by {
  dashboardRenderableType: order_by
  dashboardSection: dashboard_sections_order_by
  dashboardSectionId: order_by
  id: order_by
  metricCollection: metric_collections_order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  subtitle: order_by
  team: teams_order_by
  teamId: order_by
  title: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "dashboard_item_configs"
"""
input dashboard_item_configs_pk_columns_input {
  id: Int!
}

"""
select columns of table "dashboard_item_configs"
"""
enum dashboard_item_configs_select_column {
  """column name"""
  dashboardRenderableType

  """column name"""
  dashboardSectionId

  """column name"""
  id

  """column name"""
  metricCollectionId

  """column name"""
  metricId

  """column name"""
  position

  """column name"""
  subtitle

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  userId
}

"""
input type for updating data in table "dashboard_item_configs"
"""
input dashboard_item_configs_set_input {
  dashboardRenderableType: dashboard_renderable_types_enum
  dashboardSectionId: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  subtitle: String
  teamId: Int
  title: String
  userId: Int
}

"""aggregate stddev on columns"""
type dashboard_item_configs_stddev_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by stddev() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_stddev_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type dashboard_item_configs_stddev_pop_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_stddev_pop_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type dashboard_item_configs_stddev_samp_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_stddev_samp_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type dashboard_item_configs_sum_fields {
  dashboardSectionId: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  teamId: Int
  userId: Int
}

"""
order by sum() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_sum_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""
update columns of table "dashboard_item_configs"
"""
enum dashboard_item_configs_update_column {
  """column name"""
  dashboardRenderableType

  """column name"""
  dashboardSectionId

  """column name"""
  id

  """column name"""
  metricCollectionId

  """column name"""
  metricId

  """column name"""
  position

  """column name"""
  subtitle

  """column name"""
  teamId

  """column name"""
  title

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type dashboard_item_configs_var_pop_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_var_pop_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type dashboard_item_configs_var_samp_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_var_samp_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type dashboard_item_configs_variance_fields {
  dashboardSectionId: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
  teamId: Float
  userId: Float
}

"""
order by variance() on columns of table "dashboard_item_configs"
"""
input dashboard_item_configs_variance_order_by {
  dashboardSectionId: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  teamId: order_by
  userId: order_by
}

"""
Enum for the possible layouts for a Dashboard 


columns and relationships of "dashboard_layouts"

"""
type dashboard_layouts {
  comment: String!
  value: String!
}

"""
aggregated selection of "dashboard_layouts"
"""
type dashboard_layouts_aggregate {
  aggregate: dashboard_layouts_aggregate_fields
  nodes: [dashboard_layouts!]!
}

"""
aggregate fields of "dashboard_layouts"
"""
type dashboard_layouts_aggregate_fields {
  count(columns: [dashboard_layouts_select_column!], distinct: Boolean): Int
  max: dashboard_layouts_max_fields
  min: dashboard_layouts_min_fields
}

"""
order by aggregate values of table "dashboard_layouts"
"""
input dashboard_layouts_aggregate_order_by {
  count: order_by
  max: dashboard_layouts_max_order_by
  min: dashboard_layouts_min_order_by
}

"""
input type for inserting array relation for remote table "dashboard_layouts"
"""
input dashboard_layouts_arr_rel_insert_input {
  data: [dashboard_layouts_insert_input!]!
  on_conflict: dashboard_layouts_on_conflict
}

"""
Boolean expression to filter rows from the table "dashboard_layouts". All fields are combined with a logical 'AND'.
"""
input dashboard_layouts_bool_exp {
  _and: [dashboard_layouts_bool_exp]
  _not: dashboard_layouts_bool_exp
  _or: [dashboard_layouts_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_layouts"
"""
enum dashboard_layouts_constraint {
  """unique or primary key constraint"""
  dashboard_layouts_pkey
}

enum dashboard_layouts_enum {
  """This version has a side panel that collapses on small breakpoint."""
  SIDE_PANEL

  """This layout has a single main column on all breakpoints."""
  SINGLE_COLUMN
}

"""
expression to compare columns of type dashboard_layouts_enum. All fields are combined with logical 'AND'.
"""
input dashboard_layouts_enum_comparison_exp {
  _eq: dashboard_layouts_enum
  _in: [dashboard_layouts_enum!]
  _is_null: Boolean
  _neq: dashboard_layouts_enum
  _nin: [dashboard_layouts_enum!]
}

"""
input type for inserting data into table "dashboard_layouts"
"""
input dashboard_layouts_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type dashboard_layouts_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "dashboard_layouts"
"""
input dashboard_layouts_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type dashboard_layouts_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "dashboard_layouts"
"""
input dashboard_layouts_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "dashboard_layouts"
"""
type dashboard_layouts_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboard_layouts!]!
}

"""
input type for inserting object relation for remote table "dashboard_layouts"
"""
input dashboard_layouts_obj_rel_insert_input {
  data: dashboard_layouts_insert_input!
  on_conflict: dashboard_layouts_on_conflict
}

"""
on conflict condition type for table "dashboard_layouts"
"""
input dashboard_layouts_on_conflict {
  constraint: dashboard_layouts_constraint!
  update_columns: [dashboard_layouts_update_column!]!
  where: dashboard_layouts_bool_exp
}

"""
ordering options when selecting data from "dashboard_layouts"
"""
input dashboard_layouts_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "dashboard_layouts"
"""
input dashboard_layouts_pk_columns_input {
  value: String!
}

"""
select columns of table "dashboard_layouts"
"""
enum dashboard_layouts_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "dashboard_layouts"
"""
input dashboard_layouts_set_input {
  comment: String
  value: String
}

"""
update columns of table "dashboard_layouts"
"""
enum dashboard_layouts_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
Enum for Dashboard Renderable components. Note: It is expected that this be replaced by an Interface shortly.


columns and relationships of "dashboard_renderable_types"

"""
type dashboard_renderable_types {
  comment: String!
  value: String!
}

"""
aggregated selection of "dashboard_renderable_types"
"""
type dashboard_renderable_types_aggregate {
  aggregate: dashboard_renderable_types_aggregate_fields
  nodes: [dashboard_renderable_types!]!
}

"""
aggregate fields of "dashboard_renderable_types"
"""
type dashboard_renderable_types_aggregate_fields {
  count(columns: [dashboard_renderable_types_select_column!], distinct: Boolean): Int
  max: dashboard_renderable_types_max_fields
  min: dashboard_renderable_types_min_fields
}

"""
order by aggregate values of table "dashboard_renderable_types"
"""
input dashboard_renderable_types_aggregate_order_by {
  count: order_by
  max: dashboard_renderable_types_max_order_by
  min: dashboard_renderable_types_min_order_by
}

"""
input type for inserting array relation for remote table "dashboard_renderable_types"
"""
input dashboard_renderable_types_arr_rel_insert_input {
  data: [dashboard_renderable_types_insert_input!]!
  on_conflict: dashboard_renderable_types_on_conflict
}

"""
Boolean expression to filter rows from the table "dashboard_renderable_types". All fields are combined with a logical 'AND'.
"""
input dashboard_renderable_types_bool_exp {
  _and: [dashboard_renderable_types_bool_exp]
  _not: dashboard_renderable_types_bool_exp
  _or: [dashboard_renderable_types_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_renderable_types"
"""
enum dashboard_renderable_types_constraint {
  """unique or primary key constraint"""
  dashboard_renderable_types_pkey
}

enum dashboard_renderable_types_enum {
  """
  Banners can let users know what's happening or be used as a page title.
  """
  BANNER

  """The Carousel is a simple view for a set of metrics or saved queries."""
  CAROUSEL

  """
  Users and Teams can have multiple Dashboards, so this list view provides an entry point into them.
  """
  DASHBOARD_LIST

  """
  The Metric Collection view provides a mechanism for viewing all the metrics in a collection with live configuration of dimensions and filters.
  """
  METRIC_COLLECTION

  """
  Users and Teams can have multiple Metric Collections, so this list view provides an entry point into them.
  """
  METRIC_COLLECTION_LIST

  """
  Many objects (e.g. Dashboards and Metrics) can have multiple Owners, so this list view provides an entry point into them.
  """
  OWNER_LIST

  """
  Users and Teams can have multiple Saved Queries, so this list view provides an entry point into them.
  """
  SAVED_QUERY_LIST

  """Teams have User Lists as a way to view the members of the team."""
  USER_LIST
}

"""
expression to compare columns of type dashboard_renderable_types_enum. All fields are combined with logical 'AND'.
"""
input dashboard_renderable_types_enum_comparison_exp {
  _eq: dashboard_renderable_types_enum
  _in: [dashboard_renderable_types_enum!]
  _is_null: Boolean
  _neq: dashboard_renderable_types_enum
  _nin: [dashboard_renderable_types_enum!]
}

"""
input type for inserting data into table "dashboard_renderable_types"
"""
input dashboard_renderable_types_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type dashboard_renderable_types_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "dashboard_renderable_types"
"""
input dashboard_renderable_types_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type dashboard_renderable_types_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "dashboard_renderable_types"
"""
input dashboard_renderable_types_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "dashboard_renderable_types"
"""
type dashboard_renderable_types_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboard_renderable_types!]!
}

"""
input type for inserting object relation for remote table "dashboard_renderable_types"
"""
input dashboard_renderable_types_obj_rel_insert_input {
  data: dashboard_renderable_types_insert_input!
  on_conflict: dashboard_renderable_types_on_conflict
}

"""
on conflict condition type for table "dashboard_renderable_types"
"""
input dashboard_renderable_types_on_conflict {
  constraint: dashboard_renderable_types_constraint!
  update_columns: [dashboard_renderable_types_update_column!]!
  where: dashboard_renderable_types_bool_exp
}

"""
ordering options when selecting data from "dashboard_renderable_types"
"""
input dashboard_renderable_types_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "dashboard_renderable_types"
"""
input dashboard_renderable_types_pk_columns_input {
  value: String!
}

"""
select columns of table "dashboard_renderable_types"
"""
enum dashboard_renderable_types_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "dashboard_renderable_types"
"""
input dashboard_renderable_types_set_input {
  comment: String
  value: String
}

"""
update columns of table "dashboard_renderable_types"
"""
enum dashboard_renderable_types_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
An Enum for the various Section Types on a Dashboard


columns and relationships of "dashboard_section_types"

"""
type dashboard_section_types {
  comment: String!
  value: String!
}

"""
aggregated selection of "dashboard_section_types"
"""
type dashboard_section_types_aggregate {
  aggregate: dashboard_section_types_aggregate_fields
  nodes: [dashboard_section_types!]!
}

"""
aggregate fields of "dashboard_section_types"
"""
type dashboard_section_types_aggregate_fields {
  count(columns: [dashboard_section_types_select_column!], distinct: Boolean): Int
  max: dashboard_section_types_max_fields
  min: dashboard_section_types_min_fields
}

"""
order by aggregate values of table "dashboard_section_types"
"""
input dashboard_section_types_aggregate_order_by {
  count: order_by
  max: dashboard_section_types_max_order_by
  min: dashboard_section_types_min_order_by
}

"""
input type for inserting array relation for remote table "dashboard_section_types"
"""
input dashboard_section_types_arr_rel_insert_input {
  data: [dashboard_section_types_insert_input!]!
  on_conflict: dashboard_section_types_on_conflict
}

"""
Boolean expression to filter rows from the table "dashboard_section_types". All fields are combined with a logical 'AND'.
"""
input dashboard_section_types_bool_exp {
  _and: [dashboard_section_types_bool_exp]
  _not: dashboard_section_types_bool_exp
  _or: [dashboard_section_types_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_section_types"
"""
enum dashboard_section_types_constraint {
  """unique or primary key constraint"""
  dashboard_section_types_pkey
}

enum dashboard_section_types_enum {
  """
  The Header appears at the top of the Dashboard and remains sticky during scrolling.
  """
  HEADER

  """The primary column taking most or all of the page."""
  MAIN

  """
  A side panel existing in the Panel Layout. Collapsible on small breakpoint.
  """
  PANEL
}

"""
expression to compare columns of type dashboard_section_types_enum. All fields are combined with logical 'AND'.
"""
input dashboard_section_types_enum_comparison_exp {
  _eq: dashboard_section_types_enum
  _in: [dashboard_section_types_enum!]
  _is_null: Boolean
  _neq: dashboard_section_types_enum
  _nin: [dashboard_section_types_enum!]
}

"""
input type for inserting data into table "dashboard_section_types"
"""
input dashboard_section_types_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type dashboard_section_types_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "dashboard_section_types"
"""
input dashboard_section_types_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type dashboard_section_types_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "dashboard_section_types"
"""
input dashboard_section_types_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "dashboard_section_types"
"""
type dashboard_section_types_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboard_section_types!]!
}

"""
input type for inserting object relation for remote table "dashboard_section_types"
"""
input dashboard_section_types_obj_rel_insert_input {
  data: dashboard_section_types_insert_input!
  on_conflict: dashboard_section_types_on_conflict
}

"""
on conflict condition type for table "dashboard_section_types"
"""
input dashboard_section_types_on_conflict {
  constraint: dashboard_section_types_constraint!
  update_columns: [dashboard_section_types_update_column!]!
  where: dashboard_section_types_bool_exp
}

"""
ordering options when selecting data from "dashboard_section_types"
"""
input dashboard_section_types_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "dashboard_section_types"
"""
input dashboard_section_types_pk_columns_input {
  value: String!
}

"""
select columns of table "dashboard_section_types"
"""
enum dashboard_section_types_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "dashboard_section_types"
"""
input dashboard_section_types_set_input {
  comment: String
  value: String
}

"""
update columns of table "dashboard_section_types"
"""
enum dashboard_section_types_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
Dashboard Sections are logical groupings of Dashboard Items within the UI. The type specifies where the section appears on the page.


columns and relationships of "dashboard_sections"

"""
type dashboard_sections {
  """An object relationship"""
  dashboard: dashboards!

  """An array relationship"""
  dashboardItemConfigs(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): [dashboard_item_configs!]!

  """An aggregated array relationship"""
  dashboardItemConfigs_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): dashboard_item_configs_aggregate!

  """
  The Section Type indicates the "zone" on page where the section's items will go.
  """
  dashboardSectionType: dashboard_section_types_enum!
  dashboard_id: Int!
  id: Int!
}

"""
aggregated selection of "dashboard_sections"
"""
type dashboard_sections_aggregate {
  aggregate: dashboard_sections_aggregate_fields
  nodes: [dashboard_sections!]!
}

"""
aggregate fields of "dashboard_sections"
"""
type dashboard_sections_aggregate_fields {
  avg: dashboard_sections_avg_fields
  count(columns: [dashboard_sections_select_column!], distinct: Boolean): Int
  max: dashboard_sections_max_fields
  min: dashboard_sections_min_fields
  stddev: dashboard_sections_stddev_fields
  stddev_pop: dashboard_sections_stddev_pop_fields
  stddev_samp: dashboard_sections_stddev_samp_fields
  sum: dashboard_sections_sum_fields
  var_pop: dashboard_sections_var_pop_fields
  var_samp: dashboard_sections_var_samp_fields
  variance: dashboard_sections_variance_fields
}

"""
order by aggregate values of table "dashboard_sections"
"""
input dashboard_sections_aggregate_order_by {
  avg: dashboard_sections_avg_order_by
  count: order_by
  max: dashboard_sections_max_order_by
  min: dashboard_sections_min_order_by
  stddev: dashboard_sections_stddev_order_by
  stddev_pop: dashboard_sections_stddev_pop_order_by
  stddev_samp: dashboard_sections_stddev_samp_order_by
  sum: dashboard_sections_sum_order_by
  var_pop: dashboard_sections_var_pop_order_by
  var_samp: dashboard_sections_var_samp_order_by
  variance: dashboard_sections_variance_order_by
}

"""
input type for inserting array relation for remote table "dashboard_sections"
"""
input dashboard_sections_arr_rel_insert_input {
  data: [dashboard_sections_insert_input!]!
  on_conflict: dashboard_sections_on_conflict
}

"""aggregate avg on columns"""
type dashboard_sections_avg_fields {
  dashboard_id: Float
  id: Float
}

"""
order by avg() on columns of table "dashboard_sections"
"""
input dashboard_sections_avg_order_by {
  dashboard_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "dashboard_sections". All fields are combined with a logical 'AND'.
"""
input dashboard_sections_bool_exp {
  _and: [dashboard_sections_bool_exp]
  _not: dashboard_sections_bool_exp
  _or: [dashboard_sections_bool_exp]
  dashboard: dashboards_bool_exp
  dashboardItemConfigs: dashboard_item_configs_bool_exp
  dashboardSectionType: dashboard_section_types_enum_comparison_exp
  dashboard_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "dashboard_sections"
"""
enum dashboard_sections_constraint {
  """unique or primary key constraint"""
  dashboard_sections_pkey
}

"""
input type for incrementing integer column in table "dashboard_sections"
"""
input dashboard_sections_inc_input {
  dashboard_id: Int
  id: Int
}

"""
input type for inserting data into table "dashboard_sections"
"""
input dashboard_sections_insert_input {
  dashboard: dashboards_obj_rel_insert_input
  dashboardItemConfigs: dashboard_item_configs_arr_rel_insert_input
  dashboardSectionType: dashboard_section_types_enum
  dashboard_id: Int
  id: Int
}

"""aggregate max on columns"""
type dashboard_sections_max_fields {
  dashboard_id: Int
  id: Int
}

"""
order by max() on columns of table "dashboard_sections"
"""
input dashboard_sections_max_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type dashboard_sections_min_fields {
  dashboard_id: Int
  id: Int
}

"""
order by min() on columns of table "dashboard_sections"
"""
input dashboard_sections_min_order_by {
  dashboard_id: order_by
  id: order_by
}

"""
response of any mutation on the table "dashboard_sections"
"""
type dashboard_sections_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboard_sections!]!
}

"""
input type for inserting object relation for remote table "dashboard_sections"
"""
input dashboard_sections_obj_rel_insert_input {
  data: dashboard_sections_insert_input!
  on_conflict: dashboard_sections_on_conflict
}

"""
on conflict condition type for table "dashboard_sections"
"""
input dashboard_sections_on_conflict {
  constraint: dashboard_sections_constraint!
  update_columns: [dashboard_sections_update_column!]!
  where: dashboard_sections_bool_exp
}

"""
ordering options when selecting data from "dashboard_sections"
"""
input dashboard_sections_order_by {
  dashboard: dashboards_order_by
  dashboardItemConfigs_aggregate: dashboard_item_configs_aggregate_order_by
  dashboardSectionType: order_by
  dashboard_id: order_by
  id: order_by
}

"""
primary key columns input for table: "dashboard_sections"
"""
input dashboard_sections_pk_columns_input {
  id: Int!
}

"""
select columns of table "dashboard_sections"
"""
enum dashboard_sections_select_column {
  """column name"""
  dashboardSectionType

  """column name"""
  dashboard_id

  """column name"""
  id
}

"""
input type for updating data in table "dashboard_sections"
"""
input dashboard_sections_set_input {
  dashboardSectionType: dashboard_section_types_enum
  dashboard_id: Int
  id: Int
}

"""aggregate stddev on columns"""
type dashboard_sections_stddev_fields {
  dashboard_id: Float
  id: Float
}

"""
order by stddev() on columns of table "dashboard_sections"
"""
input dashboard_sections_stddev_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type dashboard_sections_stddev_pop_fields {
  dashboard_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "dashboard_sections"
"""
input dashboard_sections_stddev_pop_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type dashboard_sections_stddev_samp_fields {
  dashboard_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "dashboard_sections"
"""
input dashboard_sections_stddev_samp_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type dashboard_sections_sum_fields {
  dashboard_id: Int
  id: Int
}

"""
order by sum() on columns of table "dashboard_sections"
"""
input dashboard_sections_sum_order_by {
  dashboard_id: order_by
  id: order_by
}

"""
update columns of table "dashboard_sections"
"""
enum dashboard_sections_update_column {
  """column name"""
  dashboardSectionType

  """column name"""
  dashboard_id

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type dashboard_sections_var_pop_fields {
  dashboard_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "dashboard_sections"
"""
input dashboard_sections_var_pop_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type dashboard_sections_var_samp_fields {
  dashboard_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "dashboard_sections"
"""
input dashboard_sections_var_samp_order_by {
  dashboard_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type dashboard_sections_variance_fields {
  dashboard_id: Float
  id: Float
}

"""
order by variance() on columns of table "dashboard_sections"
"""
input dashboard_sections_variance_order_by {
  dashboard_id: order_by
  id: order_by
}

"""
Dashboards are a foundational tool for building custom pages in the Transform App


columns and relationships of "dashboards"

"""
type dashboards {
  createdAt: timestamptz
  dashboardLayout: dashboard_layouts_enum!

  """An array relationship"""
  dashboardSections(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): [dashboard_sections!]!

  """An aggregated array relationship"""
  dashboardSections_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): dashboard_sections_aggregate!
  deletedAt: timestamptz
  id: Int!

  """An object relationship"""
  organization: organizations!
  organization_id: Int!

  """An array relationship"""
  teamOwners(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): [team_dashboards!]!

  """An aggregated array relationship"""
  teamOwners_aggregate(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): team_dashboards_aggregate!

  """The Dashboard title appears in the header"""
  title: String!
  updatedAt: timestamptz

  """An array relationship"""
  userOwners(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): [user_dashboards!]!

  """An aggregated array relationship"""
  userOwners_aggregate(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): user_dashboards_aggregate!
}

"""
aggregated selection of "dashboards"
"""
type dashboards_aggregate {
  aggregate: dashboards_aggregate_fields
  nodes: [dashboards!]!
}

"""
aggregate fields of "dashboards"
"""
type dashboards_aggregate_fields {
  avg: dashboards_avg_fields
  count(columns: [dashboards_select_column!], distinct: Boolean): Int
  max: dashboards_max_fields
  min: dashboards_min_fields
  stddev: dashboards_stddev_fields
  stddev_pop: dashboards_stddev_pop_fields
  stddev_samp: dashboards_stddev_samp_fields
  sum: dashboards_sum_fields
  var_pop: dashboards_var_pop_fields
  var_samp: dashboards_var_samp_fields
  variance: dashboards_variance_fields
}

"""
order by aggregate values of table "dashboards"
"""
input dashboards_aggregate_order_by {
  avg: dashboards_avg_order_by
  count: order_by
  max: dashboards_max_order_by
  min: dashboards_min_order_by
  stddev: dashboards_stddev_order_by
  stddev_pop: dashboards_stddev_pop_order_by
  stddev_samp: dashboards_stddev_samp_order_by
  sum: dashboards_sum_order_by
  var_pop: dashboards_var_pop_order_by
  var_samp: dashboards_var_samp_order_by
  variance: dashboards_variance_order_by
}

"""
input type for inserting array relation for remote table "dashboards"
"""
input dashboards_arr_rel_insert_input {
  data: [dashboards_insert_input!]!
  on_conflict: dashboards_on_conflict
}

"""aggregate avg on columns"""
type dashboards_avg_fields {
  id: Float
  organization_id: Float
}

"""
order by avg() on columns of table "dashboards"
"""
input dashboards_avg_order_by {
  id: order_by
  organization_id: order_by
}

"""
Boolean expression to filter rows from the table "dashboards". All fields are combined with a logical 'AND'.
"""
input dashboards_bool_exp {
  _and: [dashboards_bool_exp]
  _not: dashboards_bool_exp
  _or: [dashboards_bool_exp]
  createdAt: timestamptz_comparison_exp
  dashboardLayout: dashboard_layouts_enum_comparison_exp
  dashboardSections: dashboard_sections_bool_exp
  deletedAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organization_id: Int_comparison_exp
  teamOwners: team_dashboards_bool_exp
  title: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
  userOwners: user_dashboards_bool_exp
}

"""
unique or primary key constraints on table "dashboards"
"""
enum dashboards_constraint {
  """unique or primary key constraint"""
  dashboards_pkey
}

"""
input type for incrementing integer column in table "dashboards"
"""
input dashboards_inc_input {
  id: Int
  organization_id: Int
}

"""
input type for inserting data into table "dashboards"
"""
input dashboards_insert_input {
  createdAt: timestamptz
  dashboardLayout: dashboard_layouts_enum
  dashboardSections: dashboard_sections_arr_rel_insert_input
  deletedAt: timestamptz
  id: Int
  organization: organizations_obj_rel_insert_input
  organization_id: Int
  teamOwners: team_dashboards_arr_rel_insert_input
  title: String
  updatedAt: timestamptz
  userOwners: user_dashboards_arr_rel_insert_input
}

"""aggregate max on columns"""
type dashboards_max_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: Int
  organization_id: Int
  title: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "dashboards"
"""
input dashboards_max_order_by {
  createdAt: order_by
  deletedAt: order_by
  id: order_by
  organization_id: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type dashboards_min_fields {
  createdAt: timestamptz
  deletedAt: timestamptz
  id: Int
  organization_id: Int
  title: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "dashboards"
"""
input dashboards_min_order_by {
  createdAt: order_by
  deletedAt: order_by
  id: order_by
  organization_id: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "dashboards"
"""
type dashboards_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dashboards!]!
}

"""
input type for inserting object relation for remote table "dashboards"
"""
input dashboards_obj_rel_insert_input {
  data: dashboards_insert_input!
  on_conflict: dashboards_on_conflict
}

"""
on conflict condition type for table "dashboards"
"""
input dashboards_on_conflict {
  constraint: dashboards_constraint!
  update_columns: [dashboards_update_column!]!
  where: dashboards_bool_exp
}

"""
ordering options when selecting data from "dashboards"
"""
input dashboards_order_by {
  createdAt: order_by
  dashboardLayout: order_by
  dashboardSections_aggregate: dashboard_sections_aggregate_order_by
  deletedAt: order_by
  id: order_by
  organization: organizations_order_by
  organization_id: order_by
  teamOwners_aggregate: team_dashboards_aggregate_order_by
  title: order_by
  updatedAt: order_by
  userOwners_aggregate: user_dashboards_aggregate_order_by
}

"""
primary key columns input for table: "dashboards"
"""
input dashboards_pk_columns_input {
  id: Int!
}

"""
select columns of table "dashboards"
"""
enum dashboards_select_column {
  """column name"""
  createdAt

  """column name"""
  dashboardLayout

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  organization_id

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
input type for updating data in table "dashboards"
"""
input dashboards_set_input {
  createdAt: timestamptz
  dashboardLayout: dashboard_layouts_enum
  deletedAt: timestamptz
  id: Int
  organization_id: Int
  title: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type dashboards_stddev_fields {
  id: Float
  organization_id: Float
}

"""
order by stddev() on columns of table "dashboards"
"""
input dashboards_stddev_order_by {
  id: order_by
  organization_id: order_by
}

"""aggregate stddev_pop on columns"""
type dashboards_stddev_pop_fields {
  id: Float
  organization_id: Float
}

"""
order by stddev_pop() on columns of table "dashboards"
"""
input dashboards_stddev_pop_order_by {
  id: order_by
  organization_id: order_by
}

"""aggregate stddev_samp on columns"""
type dashboards_stddev_samp_fields {
  id: Float
  organization_id: Float
}

"""
order by stddev_samp() on columns of table "dashboards"
"""
input dashboards_stddev_samp_order_by {
  id: order_by
  organization_id: order_by
}

"""aggregate sum on columns"""
type dashboards_sum_fields {
  id: Int
  organization_id: Int
}

"""
order by sum() on columns of table "dashboards"
"""
input dashboards_sum_order_by {
  id: order_by
  organization_id: order_by
}

"""
update columns of table "dashboards"
"""
enum dashboards_update_column {
  """column name"""
  createdAt

  """column name"""
  dashboardLayout

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  organization_id

  """column name"""
  title

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type dashboards_var_pop_fields {
  id: Float
  organization_id: Float
}

"""
order by var_pop() on columns of table "dashboards"
"""
input dashboards_var_pop_order_by {
  id: order_by
  organization_id: order_by
}

"""aggregate var_samp on columns"""
type dashboards_var_samp_fields {
  id: Float
  organization_id: Float
}

"""
order by var_samp() on columns of table "dashboards"
"""
input dashboards_var_samp_order_by {
  id: order_by
  organization_id: order_by
}

"""aggregate variance on columns"""
type dashboards_variance_fields {
  id: Float
  organization_id: Float
}

"""
order by variance() on columns of table "dashboards"
"""
input dashboards_variance_order_by {
  id: order_by
  organization_id: order_by
}

"""
columns and relationships of "data_source_versions"
"""
type data_source_versions {
  connection: String!
  constraint(
    """JSON select path"""
    path: String
  ): json
  createdAt: timestamptz!
  dataSourceMetadata(
    """JSON select path"""
    path: String
  ): json!
  description: String!
  dimensions(
    """JSON select path"""
    path: String
  ): json!
  hash: String!
  id: Int!
  identifiers(
    """JSON select path"""
    path: String
  ): json!
  measures(
    """JSON select path"""
    path: String
  ): json!

  """An array relationship"""
  metricVersions(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): [metric_lineage_data_sources!]!

  """An aggregated array relationship"""
  metricVersions_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): metric_lineage_data_sources_aggregate!

  """An array relationship"""
  modelDataSources(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): [model_data_sources!]!

  """An aggregated array relationship"""
  modelDataSources_aggregate(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): model_data_sources_aggregate!
  mutability(
    """JSON select path"""
    path: String
  ): json!
  name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  owners(
    """JSON select path"""
    path: String
  ): json!
  sqlQuery: String
  sqlTable: String
}

"""
aggregated selection of "data_source_versions"
"""
type data_source_versions_aggregate {
  aggregate: data_source_versions_aggregate_fields
  nodes: [data_source_versions!]!
}

"""
aggregate fields of "data_source_versions"
"""
type data_source_versions_aggregate_fields {
  avg: data_source_versions_avg_fields
  count(columns: [data_source_versions_select_column!], distinct: Boolean): Int
  max: data_source_versions_max_fields
  min: data_source_versions_min_fields
  stddev: data_source_versions_stddev_fields
  stddev_pop: data_source_versions_stddev_pop_fields
  stddev_samp: data_source_versions_stddev_samp_fields
  sum: data_source_versions_sum_fields
  var_pop: data_source_versions_var_pop_fields
  var_samp: data_source_versions_var_samp_fields
  variance: data_source_versions_variance_fields
}

"""
order by aggregate values of table "data_source_versions"
"""
input data_source_versions_aggregate_order_by {
  avg: data_source_versions_avg_order_by
  count: order_by
  max: data_source_versions_max_order_by
  min: data_source_versions_min_order_by
  stddev: data_source_versions_stddev_order_by
  stddev_pop: data_source_versions_stddev_pop_order_by
  stddev_samp: data_source_versions_stddev_samp_order_by
  sum: data_source_versions_sum_order_by
  var_pop: data_source_versions_var_pop_order_by
  var_samp: data_source_versions_var_samp_order_by
  variance: data_source_versions_variance_order_by
}

"""
input type for inserting array relation for remote table "data_source_versions"
"""
input data_source_versions_arr_rel_insert_input {
  data: [data_source_versions_insert_input!]!
  on_conflict: data_source_versions_on_conflict
}

"""aggregate avg on columns"""
type data_source_versions_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "data_source_versions"
"""
input data_source_versions_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "data_source_versions". All fields are combined with a logical 'AND'.
"""
input data_source_versions_bool_exp {
  _and: [data_source_versions_bool_exp]
  _not: data_source_versions_bool_exp
  _or: [data_source_versions_bool_exp]
  connection: String_comparison_exp
  constraint: json_comparison_exp
  createdAt: timestamptz_comparison_exp
  dataSourceMetadata: json_comparison_exp
  description: String_comparison_exp
  dimensions: json_comparison_exp
  hash: String_comparison_exp
  id: Int_comparison_exp
  identifiers: json_comparison_exp
  measures: json_comparison_exp
  metricVersions: metric_lineage_data_sources_bool_exp
  modelDataSources: model_data_sources_bool_exp
  mutability: json_comparison_exp
  name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  owners: json_comparison_exp
  sqlQuery: String_comparison_exp
  sqlTable: String_comparison_exp
}

"""
unique or primary key constraints on table "data_source_versions"
"""
enum data_source_versions_constraint {
  """unique or primary key constraint"""
  data_source_versions_hash_organization_id_key

  """unique or primary key constraint"""
  data_source_versions_pkey
}

"""
input type for incrementing integer column in table "data_source_versions"
"""
input data_source_versions_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "data_source_versions"
"""
input data_source_versions_insert_input {
  connection: String
  constraint: json
  createdAt: timestamptz
  dataSourceMetadata: json
  description: String
  dimensions: json
  hash: String
  id: Int
  identifiers: json
  measures: json
  metricVersions: metric_lineage_data_sources_arr_rel_insert_input
  modelDataSources: model_data_sources_arr_rel_insert_input
  mutability: json
  name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  owners: json
  sqlQuery: String
  sqlTable: String
}

"""aggregate max on columns"""
type data_source_versions_max_fields {
  connection: String
  createdAt: timestamptz
  description: String
  hash: String
  id: Int
  name: String
  organizationId: Int
  sqlQuery: String
  sqlTable: String
}

"""
order by max() on columns of table "data_source_versions"
"""
input data_source_versions_max_order_by {
  connection: order_by
  createdAt: order_by
  description: order_by
  hash: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  sqlQuery: order_by
  sqlTable: order_by
}

"""aggregate min on columns"""
type data_source_versions_min_fields {
  connection: String
  createdAt: timestamptz
  description: String
  hash: String
  id: Int
  name: String
  organizationId: Int
  sqlQuery: String
  sqlTable: String
}

"""
order by min() on columns of table "data_source_versions"
"""
input data_source_versions_min_order_by {
  connection: order_by
  createdAt: order_by
  description: order_by
  hash: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  sqlQuery: order_by
  sqlTable: order_by
}

"""
response of any mutation on the table "data_source_versions"
"""
type data_source_versions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [data_source_versions!]!
}

"""
input type for inserting object relation for remote table "data_source_versions"
"""
input data_source_versions_obj_rel_insert_input {
  data: data_source_versions_insert_input!
  on_conflict: data_source_versions_on_conflict
}

"""
on conflict condition type for table "data_source_versions"
"""
input data_source_versions_on_conflict {
  constraint: data_source_versions_constraint!
  update_columns: [data_source_versions_update_column!]!
  where: data_source_versions_bool_exp
}

"""
ordering options when selecting data from "data_source_versions"
"""
input data_source_versions_order_by {
  connection: order_by
  constraint: order_by
  createdAt: order_by
  dataSourceMetadata: order_by
  description: order_by
  dimensions: order_by
  hash: order_by
  id: order_by
  identifiers: order_by
  measures: order_by
  metricVersions_aggregate: metric_lineage_data_sources_aggregate_order_by
  modelDataSources_aggregate: model_data_sources_aggregate_order_by
  mutability: order_by
  name: order_by
  organization: organizations_order_by
  organizationId: order_by
  owners: order_by
  sqlQuery: order_by
  sqlTable: order_by
}

"""
primary key columns input for table: "data_source_versions"
"""
input data_source_versions_pk_columns_input {
  id: Int!
}

"""
select columns of table "data_source_versions"
"""
enum data_source_versions_select_column {
  """column name"""
  connection

  """column name"""
  constraint

  """column name"""
  createdAt

  """column name"""
  dataSourceMetadata

  """column name"""
  description

  """column name"""
  dimensions

  """column name"""
  hash

  """column name"""
  id

  """column name"""
  identifiers

  """column name"""
  measures

  """column name"""
  mutability

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  owners

  """column name"""
  sqlQuery

  """column name"""
  sqlTable
}

"""
input type for updating data in table "data_source_versions"
"""
input data_source_versions_set_input {
  connection: String
  constraint: json
  createdAt: timestamptz
  dataSourceMetadata: json
  description: String
  dimensions: json
  hash: String
  id: Int
  identifiers: json
  measures: json
  mutability: json
  name: String
  organizationId: Int
  owners: json
  sqlQuery: String
  sqlTable: String
}

"""aggregate stddev on columns"""
type data_source_versions_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "data_source_versions"
"""
input data_source_versions_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type data_source_versions_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "data_source_versions"
"""
input data_source_versions_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type data_source_versions_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "data_source_versions"
"""
input data_source_versions_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type data_source_versions_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "data_source_versions"
"""
input data_source_versions_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "data_source_versions"
"""
enum data_source_versions_update_column {
  """column name"""
  connection

  """column name"""
  constraint

  """column name"""
  createdAt

  """column name"""
  dataSourceMetadata

  """column name"""
  description

  """column name"""
  dimensions

  """column name"""
  hash

  """column name"""
  id

  """column name"""
  identifiers

  """column name"""
  measures

  """column name"""
  mutability

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  owners

  """column name"""
  sqlQuery

  """column name"""
  sqlTable
}

"""aggregate var_pop on columns"""
type data_source_versions_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "data_source_versions"
"""
input data_source_versions_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type data_source_versions_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "data_source_versions"
"""
input data_source_versions_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type data_source_versions_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "data_source_versions"
"""
input data_source_versions_variance_order_by {
  id: order_by
  organizationId: order_by
}

scalar date

"""
expression to compare columns of type date. All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
columns and relationships of "dw_engines"
"""
type dw_engines {
  comment: String!
  value: String!
}

"""
aggregated selection of "dw_engines"
"""
type dw_engines_aggregate {
  aggregate: dw_engines_aggregate_fields
  nodes: [dw_engines!]!
}

"""
aggregate fields of "dw_engines"
"""
type dw_engines_aggregate_fields {
  count(columns: [dw_engines_select_column!], distinct: Boolean): Int
  max: dw_engines_max_fields
  min: dw_engines_min_fields
}

"""
order by aggregate values of table "dw_engines"
"""
input dw_engines_aggregate_order_by {
  count: order_by
  max: dw_engines_max_order_by
  min: dw_engines_min_order_by
}

"""
input type for inserting array relation for remote table "dw_engines"
"""
input dw_engines_arr_rel_insert_input {
  data: [dw_engines_insert_input!]!
  on_conflict: dw_engines_on_conflict
}

"""
Boolean expression to filter rows from the table "dw_engines". All fields are combined with a logical 'AND'.
"""
input dw_engines_bool_exp {
  _and: [dw_engines_bool_exp]
  _not: dw_engines_bool_exp
  _or: [dw_engines_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dw_engines"
"""
enum dw_engines_constraint {
  """unique or primary key constraint"""
  dw_engines_pkey
}

enum dw_engines_enum {
  """Data Bricks"""
  DATABRICKS

  """Livy"""
  LIVY

  """mysql"""
  MYSQL

  """postgresql"""
  POSTGRESQL

  """Presto Hive"""
  PRESTO_HIVE

  """Redshift"""
  REDSHIFT

  """Snowflake"""
  SNOWFLAKE

  """sqlite"""
  SQLITE
}

"""
expression to compare columns of type dw_engines_enum. All fields are combined with logical 'AND'.
"""
input dw_engines_enum_comparison_exp {
  _eq: dw_engines_enum
  _in: [dw_engines_enum!]
  _is_null: Boolean
  _neq: dw_engines_enum
  _nin: [dw_engines_enum!]
}

"""
input type for inserting data into table "dw_engines"
"""
input dw_engines_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type dw_engines_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "dw_engines"
"""
input dw_engines_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type dw_engines_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "dw_engines"
"""
input dw_engines_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "dw_engines"
"""
type dw_engines_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [dw_engines!]!
}

"""
input type for inserting object relation for remote table "dw_engines"
"""
input dw_engines_obj_rel_insert_input {
  data: dw_engines_insert_input!
  on_conflict: dw_engines_on_conflict
}

"""
on conflict condition type for table "dw_engines"
"""
input dw_engines_on_conflict {
  constraint: dw_engines_constraint!
  update_columns: [dw_engines_update_column!]!
  where: dw_engines_bool_exp
}

"""
ordering options when selecting data from "dw_engines"
"""
input dw_engines_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "dw_engines"
"""
input dw_engines_pk_columns_input {
  value: String!
}

"""
select columns of table "dw_engines"
"""
enum dw_engines_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "dw_engines"
"""
input dw_engines_set_input {
  comment: String
  value: String
}

"""
update columns of table "dw_engines"
"""
enum dw_engines_update_column {
  """column name"""
  comment

  """column name"""
  value
}

scalar entity

"""
expression to compare columns of type entity. All fields are combined with logical 'AND'.
"""
input entity_comparison_exp {
  _eq: entity
  _gt: entity
  _gte: entity
  _in: [entity!]
  _is_null: Boolean
  _lt: entity
  _lte: entity
  _neq: entity
  _nin: [entity!]
}

"""
columns and relationships of "features"
"""
type features {
  createdAt: timestamptz!
  id: Int!
  name: String!

  """An array relationship"""
  organizations(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): [organization_features!]!

  """An aggregated array relationship"""
  organizations_aggregate(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): organization_features_aggregate!
  retiredAt: timestamptz
  updatedAt: timestamptz!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): [user_features!]!

  """An aggregated array relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): user_features_aggregate!
}

"""
aggregated selection of "features"
"""
type features_aggregate {
  aggregate: features_aggregate_fields
  nodes: [features!]!
}

"""
aggregate fields of "features"
"""
type features_aggregate_fields {
  avg: features_avg_fields
  count(columns: [features_select_column!], distinct: Boolean): Int
  max: features_max_fields
  min: features_min_fields
  stddev: features_stddev_fields
  stddev_pop: features_stddev_pop_fields
  stddev_samp: features_stddev_samp_fields
  sum: features_sum_fields
  var_pop: features_var_pop_fields
  var_samp: features_var_samp_fields
  variance: features_variance_fields
}

"""
order by aggregate values of table "features"
"""
input features_aggregate_order_by {
  avg: features_avg_order_by
  count: order_by
  max: features_max_order_by
  min: features_min_order_by
  stddev: features_stddev_order_by
  stddev_pop: features_stddev_pop_order_by
  stddev_samp: features_stddev_samp_order_by
  sum: features_sum_order_by
  var_pop: features_var_pop_order_by
  var_samp: features_var_samp_order_by
  variance: features_variance_order_by
}

"""
input type for inserting array relation for remote table "features"
"""
input features_arr_rel_insert_input {
  data: [features_insert_input!]!
  on_conflict: features_on_conflict
}

"""aggregate avg on columns"""
type features_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "features"
"""
input features_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "features". All fields are combined with a logical 'AND'.
"""
input features_bool_exp {
  _and: [features_bool_exp]
  _not: features_bool_exp
  _or: [features_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  organizations: organization_features_bool_exp
  retiredAt: timestamptz_comparison_exp
  updatedAt: timestamptz_comparison_exp
  users: user_features_bool_exp
}

"""
unique or primary key constraints on table "features"
"""
enum features_constraint {
  """unique or primary key constraint"""
  features_pkey
}

"""
input type for incrementing integer column in table "features"
"""
input features_inc_input {
  id: Int
}

"""
input type for inserting data into table "features"
"""
input features_insert_input {
  createdAt: timestamptz
  id: Int
  name: String
  organizations: organization_features_arr_rel_insert_input
  retiredAt: timestamptz
  updatedAt: timestamptz
  users: user_features_arr_rel_insert_input
}

"""aggregate max on columns"""
type features_max_fields {
  createdAt: timestamptz
  id: Int
  name: String
  retiredAt: timestamptz
  updatedAt: timestamptz
}

"""
order by max() on columns of table "features"
"""
input features_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  retiredAt: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type features_min_fields {
  createdAt: timestamptz
  id: Int
  name: String
  retiredAt: timestamptz
  updatedAt: timestamptz
}

"""
order by min() on columns of table "features"
"""
input features_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  retiredAt: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "features"
"""
type features_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [features!]!
}

"""
input type for inserting object relation for remote table "features"
"""
input features_obj_rel_insert_input {
  data: features_insert_input!
  on_conflict: features_on_conflict
}

"""
on conflict condition type for table "features"
"""
input features_on_conflict {
  constraint: features_constraint!
  update_columns: [features_update_column!]!
  where: features_bool_exp
}

"""
ordering options when selecting data from "features"
"""
input features_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  organizations_aggregate: organization_features_aggregate_order_by
  retiredAt: order_by
  updatedAt: order_by
  users_aggregate: user_features_aggregate_order_by
}

"""
primary key columns input for table: "features"
"""
input features_pk_columns_input {
  id: Int!
}

"""
select columns of table "features"
"""
enum features_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  retiredAt

  """column name"""
  updatedAt
}

"""
input type for updating data in table "features"
"""
input features_set_input {
  createdAt: timestamptz
  id: Int
  name: String
  retiredAt: timestamptz
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type features_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "features"
"""
input features_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type features_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "features"
"""
input features_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type features_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "features"
"""
input features_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type features_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "features"
"""
input features_sum_order_by {
  id: order_by
}

"""
update columns of table "features"
"""
enum features_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  retiredAt

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type features_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "features"
"""
input features_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type features_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "features"
"""
input features_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type features_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "features"
"""
input features_variance_order_by {
  id: order_by
}

scalar json

"""
expression to compare columns of type json. All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _eq: json
  _gt: json
  _gte: json
  _in: [json!]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json!]
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "metric_annotations"
"""
type metric_annotations {
  """An object relationship"""
  annotation: annotations!
  annotationId: Int!
  created_at: timestamptz
  dimensionName: String
  dimensionValue: String
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view
  metricId: Int
  metric_name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  updated_at: timestamptz
}

"""
aggregated selection of "metric_annotations"
"""
type metric_annotations_aggregate {
  aggregate: metric_annotations_aggregate_fields
  nodes: [metric_annotations!]!
}

"""
aggregate fields of "metric_annotations"
"""
type metric_annotations_aggregate_fields {
  avg: metric_annotations_avg_fields
  count(columns: [metric_annotations_select_column!], distinct: Boolean): Int
  max: metric_annotations_max_fields
  min: metric_annotations_min_fields
  stddev: metric_annotations_stddev_fields
  stddev_pop: metric_annotations_stddev_pop_fields
  stddev_samp: metric_annotations_stddev_samp_fields
  sum: metric_annotations_sum_fields
  var_pop: metric_annotations_var_pop_fields
  var_samp: metric_annotations_var_samp_fields
  variance: metric_annotations_variance_fields
}

"""
order by aggregate values of table "metric_annotations"
"""
input metric_annotations_aggregate_order_by {
  avg: metric_annotations_avg_order_by
  count: order_by
  max: metric_annotations_max_order_by
  min: metric_annotations_min_order_by
  stddev: metric_annotations_stddev_order_by
  stddev_pop: metric_annotations_stddev_pop_order_by
  stddev_samp: metric_annotations_stddev_samp_order_by
  sum: metric_annotations_sum_order_by
  var_pop: metric_annotations_var_pop_order_by
  var_samp: metric_annotations_var_samp_order_by
  variance: metric_annotations_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_annotations"
"""
input metric_annotations_arr_rel_insert_input {
  data: [metric_annotations_insert_input!]!
  on_conflict: metric_annotations_on_conflict
}

"""aggregate avg on columns"""
type metric_annotations_avg_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by avg() on columns of table "metric_annotations"
"""
input metric_annotations_avg_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "metric_annotations". All fields are combined with a logical 'AND'.
"""
input metric_annotations_bool_exp {
  _and: [metric_annotations_bool_exp]
  _not: metric_annotations_bool_exp
  _or: [metric_annotations_bool_exp]
  annotation: annotations_bool_exp
  annotationId: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  dimensionName: String_comparison_exp
  dimensionValue: String_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  metric_name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "metric_annotations"
"""
enum metric_annotations_constraint {
  """unique or primary key constraint"""
  metric_annotations_pkey
}

"""
input type for incrementing integer column in table "metric_annotations"
"""
input metric_annotations_inc_input {
  annotationId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
input type for inserting data into table "metric_annotations"
"""
input metric_annotations_insert_input {
  annotation: annotations_obj_rel_insert_input
  annotationId: Int
  created_at: timestamptz
  dimensionName: String
  dimensionValue: String
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  metric_name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type metric_annotations_max_fields {
  annotationId: Int
  created_at: timestamptz
  dimensionName: String
  dimensionValue: String
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "metric_annotations"
"""
input metric_annotations_max_order_by {
  annotationId: order_by
  created_at: order_by
  dimensionName: order_by
  dimensionValue: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type metric_annotations_min_fields {
  annotationId: Int
  created_at: timestamptz
  dimensionName: String
  dimensionValue: String
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "metric_annotations"
"""
input metric_annotations_min_order_by {
  annotationId: order_by
  created_at: order_by
  dimensionName: order_by
  dimensionValue: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "metric_annotations"
"""
type metric_annotations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_annotations!]!
}

"""
input type for inserting object relation for remote table "metric_annotations"
"""
input metric_annotations_obj_rel_insert_input {
  data: metric_annotations_insert_input!
  on_conflict: metric_annotations_on_conflict
}

"""
on conflict condition type for table "metric_annotations"
"""
input metric_annotations_on_conflict {
  constraint: metric_annotations_constraint!
  update_columns: [metric_annotations_update_column!]!
  where: metric_annotations_bool_exp
}

"""
ordering options when selecting data from "metric_annotations"
"""
input metric_annotations_order_by {
  annotation: annotations_order_by
  annotationId: order_by
  created_at: order_by
  dimensionName: order_by
  dimensionValue: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metric_name: order_by
  organization: organizations_order_by
  organizationId: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "metric_annotations"
"""
input metric_annotations_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_annotations"
"""
enum metric_annotations_select_column {
  """column name"""
  annotationId

  """column name"""
  created_at

  """column name"""
  dimensionName

  """column name"""
  dimensionValue

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId

  """column name"""
  updated_at
}

"""
input type for updating data in table "metric_annotations"
"""
input metric_annotations_set_input {
  annotationId: Int
  created_at: timestamptz
  dimensionName: String
  dimensionValue: String
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type metric_annotations_stddev_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "metric_annotations"
"""
input metric_annotations_stddev_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type metric_annotations_stddev_pop_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "metric_annotations"
"""
input metric_annotations_stddev_pop_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type metric_annotations_stddev_samp_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "metric_annotations"
"""
input metric_annotations_stddev_samp_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type metric_annotations_sum_fields {
  annotationId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
order by sum() on columns of table "metric_annotations"
"""
input metric_annotations_sum_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
update columns of table "metric_annotations"
"""
enum metric_annotations_update_column {
  """column name"""
  annotationId

  """column name"""
  created_at

  """column name"""
  dimensionName

  """column name"""
  dimensionValue

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type metric_annotations_var_pop_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "metric_annotations"
"""
input metric_annotations_var_pop_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type metric_annotations_var_samp_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "metric_annotations"
"""
input metric_annotations_var_samp_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type metric_annotations_variance_fields {
  annotationId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by variance() on columns of table "metric_annotations"
"""
input metric_annotations_variance_order_by {
  annotationId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
columns and relationships of "metric_approvals"
"""
type metric_approvals {
  approval_ts: Int

  """Timestamp indicating when the approval was created"""
  approvedAt: timestamptz

  """An object relationship"""
  approver: users!
  approverId: Int!
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view
  metricId: Int
  metric_name: String

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
}

"""
aggregated selection of "metric_approvals"
"""
type metric_approvals_aggregate {
  aggregate: metric_approvals_aggregate_fields
  nodes: [metric_approvals!]!
}

"""
aggregate fields of "metric_approvals"
"""
type metric_approvals_aggregate_fields {
  avg: metric_approvals_avg_fields
  count(columns: [metric_approvals_select_column!], distinct: Boolean): Int
  max: metric_approvals_max_fields
  min: metric_approvals_min_fields
  stddev: metric_approvals_stddev_fields
  stddev_pop: metric_approvals_stddev_pop_fields
  stddev_samp: metric_approvals_stddev_samp_fields
  sum: metric_approvals_sum_fields
  var_pop: metric_approvals_var_pop_fields
  var_samp: metric_approvals_var_samp_fields
  variance: metric_approvals_variance_fields
}

"""
order by aggregate values of table "metric_approvals"
"""
input metric_approvals_aggregate_order_by {
  avg: metric_approvals_avg_order_by
  count: order_by
  max: metric_approvals_max_order_by
  min: metric_approvals_min_order_by
  stddev: metric_approvals_stddev_order_by
  stddev_pop: metric_approvals_stddev_pop_order_by
  stddev_samp: metric_approvals_stddev_samp_order_by
  sum: metric_approvals_sum_order_by
  var_pop: metric_approvals_var_pop_order_by
  var_samp: metric_approvals_var_samp_order_by
  variance: metric_approvals_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_approvals"
"""
input metric_approvals_arr_rel_insert_input {
  data: [metric_approvals_insert_input!]!
  on_conflict: metric_approvals_on_conflict
}

"""aggregate avg on columns"""
type metric_approvals_avg_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by avg() on columns of table "metric_approvals"
"""
input metric_approvals_avg_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "metric_approvals". All fields are combined with a logical 'AND'.
"""
input metric_approvals_bool_exp {
  _and: [metric_approvals_bool_exp]
  _not: metric_approvals_bool_exp
  _or: [metric_approvals_bool_exp]
  approval_ts: Int_comparison_exp
  approvedAt: timestamptz_comparison_exp
  approver: users_bool_exp
  approverId: Int_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  metric_name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_approvals"
"""
enum metric_approvals_constraint {
  """unique or primary key constraint"""
  metric_approvals_pkey
}

"""
input type for incrementing integer column in table "metric_approvals"
"""
input metric_approvals_inc_input {
  approval_ts: Int
  approverId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
input type for inserting data into table "metric_approvals"
"""
input metric_approvals_insert_input {
  approval_ts: Int
  approvedAt: timestamptz
  approver: users_obj_rel_insert_input
  approverId: Int
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  metric_name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
}

"""aggregate max on columns"""
type metric_approvals_max_fields {
  approval_ts: Int
  approvedAt: timestamptz
  approverId: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
}

"""
order by max() on columns of table "metric_approvals"
"""
input metric_approvals_max_order_by {
  approval_ts: order_by
  approvedAt: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
}

"""aggregate min on columns"""
type metric_approvals_min_fields {
  approval_ts: Int
  approvedAt: timestamptz
  approverId: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
}

"""
order by min() on columns of table "metric_approvals"
"""
input metric_approvals_min_order_by {
  approval_ts: order_by
  approvedAt: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
}

"""
response of any mutation on the table "metric_approvals"
"""
type metric_approvals_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_approvals!]!
}

"""
input type for inserting object relation for remote table "metric_approvals"
"""
input metric_approvals_obj_rel_insert_input {
  data: metric_approvals_insert_input!
  on_conflict: metric_approvals_on_conflict
}

"""
on conflict condition type for table "metric_approvals"
"""
input metric_approvals_on_conflict {
  constraint: metric_approvals_constraint!
  update_columns: [metric_approvals_update_column!]!
  where: metric_approvals_bool_exp
}

"""
ordering options when selecting data from "metric_approvals"
"""
input metric_approvals_order_by {
  approval_ts: order_by
  approvedAt: order_by
  approver: users_order_by
  approverId: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metric_name: order_by
  organization: organizations_order_by
  organizationId: order_by
}

"""
primary key columns input for table: "metric_approvals"
"""
input metric_approvals_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_approvals"
"""
enum metric_approvals_select_column {
  """column name"""
  approval_ts

  """column name"""
  approvedAt

  """column name"""
  approverId

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId
}

"""
input type for updating data in table "metric_approvals"
"""
input metric_approvals_set_input {
  approval_ts: Int
  approvedAt: timestamptz
  approverId: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
}

"""aggregate stddev on columns"""
type metric_approvals_stddev_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "metric_approvals"
"""
input metric_approvals_stddev_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type metric_approvals_stddev_pop_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "metric_approvals"
"""
input metric_approvals_stddev_pop_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type metric_approvals_stddev_samp_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "metric_approvals"
"""
input metric_approvals_stddev_samp_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type metric_approvals_sum_fields {
  approval_ts: Int
  approverId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
order by sum() on columns of table "metric_approvals"
"""
input metric_approvals_sum_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
update columns of table "metric_approvals"
"""
enum metric_approvals_update_column {
  """column name"""
  approval_ts

  """column name"""
  approvedAt

  """column name"""
  approverId

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId
}

"""aggregate var_pop on columns"""
type metric_approvals_var_pop_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "metric_approvals"
"""
input metric_approvals_var_pop_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type metric_approvals_var_samp_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "metric_approvals"
"""
input metric_approvals_var_samp_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type metric_approvals_variance_fields {
  approval_ts: Float
  approverId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by variance() on columns of table "metric_approvals"
"""
input metric_approvals_variance_order_by {
  approval_ts: order_by
  approverId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
Join table connecting Metric Collections with their Metrics


columns and relationships of "metric_collection_metrics"

"""
type metric_collection_metrics {
  """
  Timestamp indicating when the Metric was added to the Metric Collection
  """
  createdAt: timestamptz!

  """
  Integer used to provide a UI with an indication to make the Metric's chart larger as desired
  """
  emphasis: Int!
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view!

  """An object relationship"""
  metricCollection: metric_collections!
  metricCollectionId: Int!
  metricId: Int!

  """Integer used for ordering Metrics within a Metric Collection"""
  position: Int!

  """Timestamp indicating when the record was last updated"""
  updatedAt: timestamptz!
}

"""
aggregated selection of "metric_collection_metrics"
"""
type metric_collection_metrics_aggregate {
  aggregate: metric_collection_metrics_aggregate_fields
  nodes: [metric_collection_metrics!]!
}

"""
aggregate fields of "metric_collection_metrics"
"""
type metric_collection_metrics_aggregate_fields {
  avg: metric_collection_metrics_avg_fields
  count(columns: [metric_collection_metrics_select_column!], distinct: Boolean): Int
  max: metric_collection_metrics_max_fields
  min: metric_collection_metrics_min_fields
  stddev: metric_collection_metrics_stddev_fields
  stddev_pop: metric_collection_metrics_stddev_pop_fields
  stddev_samp: metric_collection_metrics_stddev_samp_fields
  sum: metric_collection_metrics_sum_fields
  var_pop: metric_collection_metrics_var_pop_fields
  var_samp: metric_collection_metrics_var_samp_fields
  variance: metric_collection_metrics_variance_fields
}

"""
order by aggregate values of table "metric_collection_metrics"
"""
input metric_collection_metrics_aggregate_order_by {
  avg: metric_collection_metrics_avg_order_by
  count: order_by
  max: metric_collection_metrics_max_order_by
  min: metric_collection_metrics_min_order_by
  stddev: metric_collection_metrics_stddev_order_by
  stddev_pop: metric_collection_metrics_stddev_pop_order_by
  stddev_samp: metric_collection_metrics_stddev_samp_order_by
  sum: metric_collection_metrics_sum_order_by
  var_pop: metric_collection_metrics_var_pop_order_by
  var_samp: metric_collection_metrics_var_samp_order_by
  variance: metric_collection_metrics_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_collection_metrics"
"""
input metric_collection_metrics_arr_rel_insert_input {
  data: [metric_collection_metrics_insert_input!]!
  on_conflict: metric_collection_metrics_on_conflict
}

"""aggregate avg on columns"""
type metric_collection_metrics_avg_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by avg() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_avg_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""
Boolean expression to filter rows from the table "metric_collection_metrics". All fields are combined with a logical 'AND'.
"""
input metric_collection_metrics_bool_exp {
  _and: [metric_collection_metrics_bool_exp]
  _not: metric_collection_metrics_bool_exp
  _or: [metric_collection_metrics_bool_exp]
  createdAt: timestamptz_comparison_exp
  emphasis: Int_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricCollection: metric_collections_bool_exp
  metricCollectionId: Int_comparison_exp
  metricId: Int_comparison_exp
  position: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "metric_collection_metrics"
"""
enum metric_collection_metrics_constraint {
  """unique or primary key constraint"""
  metric_collection_metrics_metric_collection_id_metric_id_key

  """unique or primary key constraint"""
  metric_collection_metrics_pkey
}

"""
input type for incrementing integer column in table "metric_collection_metrics"
"""
input metric_collection_metrics_inc_input {
  emphasis: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
}

"""
input type for inserting data into table "metric_collection_metrics"
"""
input metric_collection_metrics_insert_input {
  createdAt: timestamptz
  emphasis: Int
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricCollection: metric_collections_obj_rel_insert_input
  metricCollectionId: Int
  metricId: Int
  position: Int
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type metric_collection_metrics_max_fields {
  createdAt: timestamptz
  emphasis: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  updatedAt: timestamptz
}

"""
order by max() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_max_order_by {
  createdAt: order_by
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type metric_collection_metrics_min_fields {
  createdAt: timestamptz
  emphasis: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  updatedAt: timestamptz
}

"""
order by min() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_min_order_by {
  createdAt: order_by
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "metric_collection_metrics"
"""
type metric_collection_metrics_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_collection_metrics!]!
}

"""
input type for inserting object relation for remote table "metric_collection_metrics"
"""
input metric_collection_metrics_obj_rel_insert_input {
  data: metric_collection_metrics_insert_input!
  on_conflict: metric_collection_metrics_on_conflict
}

"""
on conflict condition type for table "metric_collection_metrics"
"""
input metric_collection_metrics_on_conflict {
  constraint: metric_collection_metrics_constraint!
  update_columns: [metric_collection_metrics_update_column!]!
  where: metric_collection_metrics_bool_exp
}

"""
ordering options when selecting data from "metric_collection_metrics"
"""
input metric_collection_metrics_order_by {
  createdAt: order_by
  emphasis: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricCollection: metric_collections_order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "metric_collection_metrics"
"""
input metric_collection_metrics_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_collection_metrics"
"""
enum metric_collection_metrics_select_column {
  """column name"""
  createdAt

  """column name"""
  emphasis

  """column name"""
  id

  """column name"""
  metricCollectionId

  """column name"""
  metricId

  """column name"""
  position

  """column name"""
  updatedAt
}

"""
input type for updating data in table "metric_collection_metrics"
"""
input metric_collection_metrics_set_input {
  createdAt: timestamptz
  emphasis: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type metric_collection_metrics_stddev_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by stddev() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_stddev_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""aggregate stddev_pop on columns"""
type metric_collection_metrics_stddev_pop_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by stddev_pop() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_stddev_pop_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""aggregate stddev_samp on columns"""
type metric_collection_metrics_stddev_samp_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by stddev_samp() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_stddev_samp_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""aggregate sum on columns"""
type metric_collection_metrics_sum_fields {
  emphasis: Int
  id: Int
  metricCollectionId: Int
  metricId: Int
  position: Int
}

"""
order by sum() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_sum_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""
update columns of table "metric_collection_metrics"
"""
enum metric_collection_metrics_update_column {
  """column name"""
  createdAt

  """column name"""
  emphasis

  """column name"""
  id

  """column name"""
  metricCollectionId

  """column name"""
  metricId

  """column name"""
  position

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type metric_collection_metrics_var_pop_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by var_pop() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_var_pop_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""aggregate var_samp on columns"""
type metric_collection_metrics_var_samp_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by var_samp() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_var_samp_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""aggregate variance on columns"""
type metric_collection_metrics_variance_fields {
  emphasis: Float
  id: Float
  metricCollectionId: Float
  metricId: Float
  position: Float
}

"""
order by variance() on columns of table "metric_collection_metrics"
"""
input metric_collection_metrics_variance_order_by {
  emphasis: order_by
  id: order_by
  metricCollectionId: order_by
  metricId: order_by
  position: order_by
}

"""
columns and relationships of "metric_collection_view"
"""
type metric_collection_view {
  created_at: timestamptz!
  id: Int!

  """An object relationship"""
  metric_collection: metric_collections
  metric_collection_id: Int!
  organization_id: Int!
  user_id: Int!
}

"""
aggregated selection of "metric_collection_view"
"""
type metric_collection_view_aggregate {
  aggregate: metric_collection_view_aggregate_fields
  nodes: [metric_collection_view!]!
}

"""
aggregate fields of "metric_collection_view"
"""
type metric_collection_view_aggregate_fields {
  avg: metric_collection_view_avg_fields
  count(columns: [metric_collection_view_select_column!], distinct: Boolean): Int
  max: metric_collection_view_max_fields
  min: metric_collection_view_min_fields
  stddev: metric_collection_view_stddev_fields
  stddev_pop: metric_collection_view_stddev_pop_fields
  stddev_samp: metric_collection_view_stddev_samp_fields
  sum: metric_collection_view_sum_fields
  var_pop: metric_collection_view_var_pop_fields
  var_samp: metric_collection_view_var_samp_fields
  variance: metric_collection_view_variance_fields
}

"""
order by aggregate values of table "metric_collection_view"
"""
input metric_collection_view_aggregate_order_by {
  avg: metric_collection_view_avg_order_by
  count: order_by
  max: metric_collection_view_max_order_by
  min: metric_collection_view_min_order_by
  stddev: metric_collection_view_stddev_order_by
  stddev_pop: metric_collection_view_stddev_pop_order_by
  stddev_samp: metric_collection_view_stddev_samp_order_by
  sum: metric_collection_view_sum_order_by
  var_pop: metric_collection_view_var_pop_order_by
  var_samp: metric_collection_view_var_samp_order_by
  variance: metric_collection_view_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_collection_view"
"""
input metric_collection_view_arr_rel_insert_input {
  data: [metric_collection_view_insert_input!]!
  on_conflict: metric_collection_view_on_conflict
}

"""aggregate avg on columns"""
type metric_collection_view_avg_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by avg() on columns of table "metric_collection_view"
"""
input metric_collection_view_avg_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "metric_collection_view". All fields are combined with a logical 'AND'.
"""
input metric_collection_view_bool_exp {
  _and: [metric_collection_view_bool_exp]
  _not: metric_collection_view_bool_exp
  _or: [metric_collection_view_bool_exp]
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  metric_collection: metric_collections_bool_exp
  metric_collection_id: Int_comparison_exp
  organization_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_collection_view"
"""
enum metric_collection_view_constraint {
  """unique or primary key constraint"""
  metric_collection_view_pkey
}

"""
input type for incrementing integer column in table "metric_collection_view"
"""
input metric_collection_view_inc_input {
  id: Int
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""
input type for inserting data into table "metric_collection_view"
"""
input metric_collection_view_insert_input {
  created_at: timestamptz
  id: Int
  metric_collection: metric_collections_obj_rel_insert_input
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""aggregate max on columns"""
type metric_collection_view_max_fields {
  created_at: timestamptz
  id: Int
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""
order by max() on columns of table "metric_collection_view"
"""
input metric_collection_view_max_order_by {
  created_at: order_by
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type metric_collection_view_min_fields {
  created_at: timestamptz
  id: Int
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""
order by min() on columns of table "metric_collection_view"
"""
input metric_collection_view_min_order_by {
  created_at: order_by
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "metric_collection_view"
"""
type metric_collection_view_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_collection_view!]!
}

"""
input type for inserting object relation for remote table "metric_collection_view"
"""
input metric_collection_view_obj_rel_insert_input {
  data: metric_collection_view_insert_input!
  on_conflict: metric_collection_view_on_conflict
}

"""
on conflict condition type for table "metric_collection_view"
"""
input metric_collection_view_on_conflict {
  constraint: metric_collection_view_constraint!
  update_columns: [metric_collection_view_update_column!]!
  where: metric_collection_view_bool_exp
}

"""
ordering options when selecting data from "metric_collection_view"
"""
input metric_collection_view_order_by {
  created_at: order_by
  id: order_by
  metric_collection: metric_collections_order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: "metric_collection_view"
"""
input metric_collection_view_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_collection_view"
"""
enum metric_collection_view_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  metric_collection_id

  """column name"""
  organization_id

  """column name"""
  user_id
}

"""
input type for updating data in table "metric_collection_view"
"""
input metric_collection_view_set_input {
  created_at: timestamptz
  id: Int
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type metric_collection_view_stddev_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "metric_collection_view"
"""
input metric_collection_view_stddev_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type metric_collection_view_stddev_pop_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "metric_collection_view"
"""
input metric_collection_view_stddev_pop_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type metric_collection_view_stddev_samp_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "metric_collection_view"
"""
input metric_collection_view_stddev_samp_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type metric_collection_view_sum_fields {
  id: Int
  metric_collection_id: Int
  organization_id: Int
  user_id: Int
}

"""
order by sum() on columns of table "metric_collection_view"
"""
input metric_collection_view_sum_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""
update columns of table "metric_collection_view"
"""
enum metric_collection_view_update_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  metric_collection_id

  """column name"""
  organization_id

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type metric_collection_view_var_pop_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "metric_collection_view"
"""
input metric_collection_view_var_pop_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type metric_collection_view_var_samp_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "metric_collection_view"
"""
input metric_collection_view_var_samp_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type metric_collection_view_variance_fields {
  id: Float
  metric_collection_id: Float
  organization_id: Float
  user_id: Float
}

"""
order by variance() on columns of table "metric_collection_view"
"""
input metric_collection_view_variance_order_by {
  id: order_by
  metric_collection_id: order_by
  organization_id: order_by
  user_id: order_by
}

"""
Metric Collections are useful groupings of Metrics for analysis and easy filtering


columns and relationships of "metric_collections"

"""
type metric_collections {
  """Timestamp indicating when the Metric Collection was created"""
  createdAt: timestamptz
  createdBy: Int!

  """An object relationship"""
  createdByUser: users!
  defaultEmphasis: Int

  """
  Soft delete mechanism: Timestamp indicating when the Metric Collection was deleted
  """
  deletedAt: timestamptz
  description: String
  id: Int!

  """An array relationship"""
  metric_collection_views(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): [metric_collection_view!]!

  """An aggregated array relationship"""
  metric_collection_views_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): metric_collection_view_aggregate!

  """An array relationship"""
  metrics(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): [metric_collection_metrics!]!

  """An aggregated array relationship"""
  metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): metric_collection_metrics_aggregate!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  ownerTeam: teams
  ownerTeamId: Int

  """An object relationship"""
  primaryDashboard: dashboards
  primaryDashboardId: Int

  """
  URL-friendly identifier for the Metric Collection (e.g. https://app.transformdata.io/metric_collections/critical_kpis
  """
  slug: String!
  title: String!

  """Timestamp indicating when the Metric Collection was last updated"""
  updatedAt: timestamptz
}

"""
aggregated selection of "metric_collections"
"""
type metric_collections_aggregate {
  aggregate: metric_collections_aggregate_fields
  nodes: [metric_collections!]!
}

"""
aggregate fields of "metric_collections"
"""
type metric_collections_aggregate_fields {
  avg: metric_collections_avg_fields
  count(columns: [metric_collections_select_column!], distinct: Boolean): Int
  max: metric_collections_max_fields
  min: metric_collections_min_fields
  stddev: metric_collections_stddev_fields
  stddev_pop: metric_collections_stddev_pop_fields
  stddev_samp: metric_collections_stddev_samp_fields
  sum: metric_collections_sum_fields
  var_pop: metric_collections_var_pop_fields
  var_samp: metric_collections_var_samp_fields
  variance: metric_collections_variance_fields
}

"""
order by aggregate values of table "metric_collections"
"""
input metric_collections_aggregate_order_by {
  avg: metric_collections_avg_order_by
  count: order_by
  max: metric_collections_max_order_by
  min: metric_collections_min_order_by
  stddev: metric_collections_stddev_order_by
  stddev_pop: metric_collections_stddev_pop_order_by
  stddev_samp: metric_collections_stddev_samp_order_by
  sum: metric_collections_sum_order_by
  var_pop: metric_collections_var_pop_order_by
  var_samp: metric_collections_var_samp_order_by
  variance: metric_collections_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_collections"
"""
input metric_collections_arr_rel_insert_input {
  data: [metric_collections_insert_input!]!
  on_conflict: metric_collections_on_conflict
}

"""aggregate avg on columns"""
type metric_collections_avg_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by avg() on columns of table "metric_collections"
"""
input metric_collections_avg_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""
Boolean expression to filter rows from the table "metric_collections". All fields are combined with a logical 'AND'.
"""
input metric_collections_bool_exp {
  _and: [metric_collections_bool_exp]
  _not: metric_collections_bool_exp
  _or: [metric_collections_bool_exp]
  createdAt: timestamptz_comparison_exp
  createdBy: Int_comparison_exp
  createdByUser: users_bool_exp
  defaultEmphasis: Int_comparison_exp
  deletedAt: timestamptz_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  metric_collection_views: metric_collection_view_bool_exp
  metrics: metric_collection_metrics_bool_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  ownerTeam: teams_bool_exp
  ownerTeamId: Int_comparison_exp
  primaryDashboard: dashboards_bool_exp
  primaryDashboardId: Int_comparison_exp
  slug: String_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "metric_collections"
"""
enum metric_collections_constraint {
  """unique or primary key constraint"""
  metric_collection_pkey

  """unique or primary key constraint"""
  metric_collections_organization_id_slug_key
}

"""
input type for incrementing integer column in table "metric_collections"
"""
input metric_collections_inc_input {
  createdBy: Int
  defaultEmphasis: Int
  id: Int
  organizationId: Int
  ownerTeamId: Int
  primaryDashboardId: Int
}

"""
input type for inserting data into table "metric_collections"
"""
input metric_collections_insert_input {
  createdAt: timestamptz
  createdBy: Int
  createdByUser: users_obj_rel_insert_input
  defaultEmphasis: Int
  deletedAt: timestamptz
  description: String
  id: Int
  metric_collection_views: metric_collection_view_arr_rel_insert_input
  metrics: metric_collection_metrics_arr_rel_insert_input
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  ownerTeam: teams_obj_rel_insert_input
  ownerTeamId: Int
  primaryDashboard: dashboards_obj_rel_insert_input
  primaryDashboardId: Int
  slug: String
  title: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type metric_collections_max_fields {
  createdAt: timestamptz
  createdBy: Int
  defaultEmphasis: Int
  deletedAt: timestamptz
  description: String
  id: Int
  organizationId: Int
  ownerTeamId: Int
  primaryDashboardId: Int
  slug: String
  title: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "metric_collections"
"""
input metric_collections_max_order_by {
  createdAt: order_by
  createdBy: order_by
  defaultEmphasis: order_by
  deletedAt: order_by
  description: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
  slug: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type metric_collections_min_fields {
  createdAt: timestamptz
  createdBy: Int
  defaultEmphasis: Int
  deletedAt: timestamptz
  description: String
  id: Int
  organizationId: Int
  ownerTeamId: Int
  primaryDashboardId: Int
  slug: String
  title: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "metric_collections"
"""
input metric_collections_min_order_by {
  createdAt: order_by
  createdBy: order_by
  defaultEmphasis: order_by
  deletedAt: order_by
  description: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
  slug: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "metric_collections"
"""
type metric_collections_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_collections!]!
}

"""
input type for inserting object relation for remote table "metric_collections"
"""
input metric_collections_obj_rel_insert_input {
  data: metric_collections_insert_input!
  on_conflict: metric_collections_on_conflict
}

"""
on conflict condition type for table "metric_collections"
"""
input metric_collections_on_conflict {
  constraint: metric_collections_constraint!
  update_columns: [metric_collections_update_column!]!
  where: metric_collections_bool_exp
}

"""
ordering options when selecting data from "metric_collections"
"""
input metric_collections_order_by {
  createdAt: order_by
  createdBy: order_by
  createdByUser: users_order_by
  defaultEmphasis: order_by
  deletedAt: order_by
  description: order_by
  id: order_by
  metric_collection_views_aggregate: metric_collection_view_aggregate_order_by
  metrics_aggregate: metric_collection_metrics_aggregate_order_by
  organization: organizations_order_by
  organizationId: order_by
  ownerTeam: teams_order_by
  ownerTeamId: order_by
  primaryDashboard: dashboards_order_by
  primaryDashboardId: order_by
  slug: order_by
  title: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "metric_collections"
"""
input metric_collections_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_collections"
"""
enum metric_collections_select_column {
  """column name"""
  createdAt

  """column name"""
  createdBy

  """column name"""
  defaultEmphasis

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  ownerTeamId

  """column name"""
  primaryDashboardId

  """column name"""
  slug

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
input type for updating data in table "metric_collections"
"""
input metric_collections_set_input {
  createdAt: timestamptz
  createdBy: Int
  defaultEmphasis: Int
  deletedAt: timestamptz
  description: String
  id: Int
  organizationId: Int
  ownerTeamId: Int
  primaryDashboardId: Int
  slug: String
  title: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type metric_collections_stddev_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by stddev() on columns of table "metric_collections"
"""
input metric_collections_stddev_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_pop on columns"""
type metric_collections_stddev_pop_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by stddev_pop() on columns of table "metric_collections"
"""
input metric_collections_stddev_pop_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_samp on columns"""
type metric_collections_stddev_samp_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by stddev_samp() on columns of table "metric_collections"
"""
input metric_collections_stddev_samp_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""aggregate sum on columns"""
type metric_collections_sum_fields {
  createdBy: Int
  defaultEmphasis: Int
  id: Int
  organizationId: Int
  ownerTeamId: Int
  primaryDashboardId: Int
}

"""
order by sum() on columns of table "metric_collections"
"""
input metric_collections_sum_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""
update columns of table "metric_collections"
"""
enum metric_collections_update_column {
  """column name"""
  createdAt

  """column name"""
  createdBy

  """column name"""
  defaultEmphasis

  """column name"""
  deletedAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  ownerTeamId

  """column name"""
  primaryDashboardId

  """column name"""
  slug

  """column name"""
  title

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type metric_collections_var_pop_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by var_pop() on columns of table "metric_collections"
"""
input metric_collections_var_pop_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""aggregate var_samp on columns"""
type metric_collections_var_samp_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by var_samp() on columns of table "metric_collections"
"""
input metric_collections_var_samp_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""aggregate variance on columns"""
type metric_collections_variance_fields {
  createdBy: Float
  defaultEmphasis: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
  primaryDashboardId: Float
}

"""
order by variance() on columns of table "metric_collections"
"""
input metric_collections_variance_order_by {
  createdBy: order_by
  defaultEmphasis: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  primaryDashboardId: order_by
}

"""
This view filters Metric Descriptions to the most recent.


columns and relationships of "metric_current_description"

"""
type metric_current_description {
  """An object relationship"""
  author: users
  author_id: Int
  created_at: timestamptz
  description: String
  id: Int

  """An object relationship"""
  metric: org_metrics_current_view
  metric_id: Int
  organization_id: Int
}

"""
aggregated selection of "metric_current_description"
"""
type metric_current_description_aggregate {
  aggregate: metric_current_description_aggregate_fields
  nodes: [metric_current_description!]!
}

"""
aggregate fields of "metric_current_description"
"""
type metric_current_description_aggregate_fields {
  avg: metric_current_description_avg_fields
  count(columns: [metric_current_description_select_column!], distinct: Boolean): Int
  max: metric_current_description_max_fields
  min: metric_current_description_min_fields
  stddev: metric_current_description_stddev_fields
  stddev_pop: metric_current_description_stddev_pop_fields
  stddev_samp: metric_current_description_stddev_samp_fields
  sum: metric_current_description_sum_fields
  var_pop: metric_current_description_var_pop_fields
  var_samp: metric_current_description_var_samp_fields
  variance: metric_current_description_variance_fields
}

"""
order by aggregate values of table "metric_current_description"
"""
input metric_current_description_aggregate_order_by {
  avg: metric_current_description_avg_order_by
  count: order_by
  max: metric_current_description_max_order_by
  min: metric_current_description_min_order_by
  stddev: metric_current_description_stddev_order_by
  stddev_pop: metric_current_description_stddev_pop_order_by
  stddev_samp: metric_current_description_stddev_samp_order_by
  sum: metric_current_description_sum_order_by
  var_pop: metric_current_description_var_pop_order_by
  var_samp: metric_current_description_var_samp_order_by
  variance: metric_current_description_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_current_description"
"""
input metric_current_description_arr_rel_insert_input {
  data: [metric_current_description_insert_input!]!
}

"""aggregate avg on columns"""
type metric_current_description_avg_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by avg() on columns of table "metric_current_description"
"""
input metric_current_description_avg_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""
Boolean expression to filter rows from the table "metric_current_description". All fields are combined with a logical 'AND'.
"""
input metric_current_description_bool_exp {
  _and: [metric_current_description_bool_exp]
  _not: metric_current_description_bool_exp
  _or: [metric_current_description_bool_exp]
  author: users_bool_exp
  author_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metric_id: Int_comparison_exp
  organization_id: Int_comparison_exp
}

"""
input type for incrementing integer column in table "metric_current_description"
"""
input metric_current_description_inc_input {
  author_id: Int
  id: Int
  metric_id: Int
  organization_id: Int
}

"""
input type for inserting data into table "metric_current_description"
"""
input metric_current_description_insert_input {
  author: users_obj_rel_insert_input
  author_id: Int
  created_at: timestamptz
  description: String
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metric_id: Int
  organization_id: Int
}

"""aggregate max on columns"""
type metric_current_description_max_fields {
  author_id: Int
  created_at: timestamptz
  description: String
  id: Int
  metric_id: Int
  organization_id: Int
}

"""
order by max() on columns of table "metric_current_description"
"""
input metric_current_description_max_order_by {
  author_id: order_by
  created_at: order_by
  description: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate min on columns"""
type metric_current_description_min_fields {
  author_id: Int
  created_at: timestamptz
  description: String
  id: Int
  metric_id: Int
  organization_id: Int
}

"""
order by min() on columns of table "metric_current_description"
"""
input metric_current_description_min_order_by {
  author_id: order_by
  created_at: order_by
  description: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""
response of any mutation on the table "metric_current_description"
"""
type metric_current_description_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_current_description!]!
}

"""
input type for inserting object relation for remote table "metric_current_description"
"""
input metric_current_description_obj_rel_insert_input {
  data: metric_current_description_insert_input!
}

"""
ordering options when selecting data from "metric_current_description"
"""
input metric_current_description_order_by {
  author: users_order_by
  author_id: order_by
  created_at: order_by
  description: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metric_id: order_by
  organization_id: order_by
}

"""
select columns of table "metric_current_description"
"""
enum metric_current_description_select_column {
  """column name"""
  author_id

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  id

  """column name"""
  metric_id

  """column name"""
  organization_id
}

"""
input type for updating data in table "metric_current_description"
"""
input metric_current_description_set_input {
  author_id: Int
  created_at: timestamptz
  description: String
  id: Int
  metric_id: Int
  organization_id: Int
}

"""aggregate stddev on columns"""
type metric_current_description_stddev_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by stddev() on columns of table "metric_current_description"
"""
input metric_current_description_stddev_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate stddev_pop on columns"""
type metric_current_description_stddev_pop_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by stddev_pop() on columns of table "metric_current_description"
"""
input metric_current_description_stddev_pop_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate stddev_samp on columns"""
type metric_current_description_stddev_samp_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by stddev_samp() on columns of table "metric_current_description"
"""
input metric_current_description_stddev_samp_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate sum on columns"""
type metric_current_description_sum_fields {
  author_id: Int
  id: Int
  metric_id: Int
  organization_id: Int
}

"""
order by sum() on columns of table "metric_current_description"
"""
input metric_current_description_sum_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate var_pop on columns"""
type metric_current_description_var_pop_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by var_pop() on columns of table "metric_current_description"
"""
input metric_current_description_var_pop_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate var_samp on columns"""
type metric_current_description_var_samp_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by var_samp() on columns of table "metric_current_description"
"""
input metric_current_description_var_samp_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""aggregate variance on columns"""
type metric_current_description_variance_fields {
  author_id: Float
  id: Float
  metric_id: Float
  organization_id: Float
}

"""
order by variance() on columns of table "metric_current_description"
"""
input metric_current_description_variance_order_by {
  author_id: order_by
  id: order_by
  metric_id: order_by
  organization_id: order_by
}

"""
While Metric Definitions are taken directly from configs, Metric Descriptions are user-editable in the UI and provide broader context on a Metric.


columns and relationships of "metric_descriptions"

"""
type metric_descriptions {
  """An object relationship"""
  author: users!
  authorId: Int!
  createdAt: timestamptz!
  description: String!
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view!
  metricId: Int!

  """An object relationship"""
  organization: organizations
  organizationId: Int
}

"""
aggregated selection of "metric_descriptions"
"""
type metric_descriptions_aggregate {
  aggregate: metric_descriptions_aggregate_fields
  nodes: [metric_descriptions!]!
}

"""
aggregate fields of "metric_descriptions"
"""
type metric_descriptions_aggregate_fields {
  avg: metric_descriptions_avg_fields
  count(columns: [metric_descriptions_select_column!], distinct: Boolean): Int
  max: metric_descriptions_max_fields
  min: metric_descriptions_min_fields
  stddev: metric_descriptions_stddev_fields
  stddev_pop: metric_descriptions_stddev_pop_fields
  stddev_samp: metric_descriptions_stddev_samp_fields
  sum: metric_descriptions_sum_fields
  var_pop: metric_descriptions_var_pop_fields
  var_samp: metric_descriptions_var_samp_fields
  variance: metric_descriptions_variance_fields
}

"""
order by aggregate values of table "metric_descriptions"
"""
input metric_descriptions_aggregate_order_by {
  avg: metric_descriptions_avg_order_by
  count: order_by
  max: metric_descriptions_max_order_by
  min: metric_descriptions_min_order_by
  stddev: metric_descriptions_stddev_order_by
  stddev_pop: metric_descriptions_stddev_pop_order_by
  stddev_samp: metric_descriptions_stddev_samp_order_by
  sum: metric_descriptions_sum_order_by
  var_pop: metric_descriptions_var_pop_order_by
  var_samp: metric_descriptions_var_samp_order_by
  variance: metric_descriptions_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_descriptions"
"""
input metric_descriptions_arr_rel_insert_input {
  data: [metric_descriptions_insert_input!]!
  on_conflict: metric_descriptions_on_conflict
}

"""aggregate avg on columns"""
type metric_descriptions_avg_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by avg() on columns of table "metric_descriptions"
"""
input metric_descriptions_avg_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "metric_descriptions". All fields are combined with a logical 'AND'.
"""
input metric_descriptions_bool_exp {
  _and: [metric_descriptions_bool_exp]
  _not: metric_descriptions_bool_exp
  _or: [metric_descriptions_bool_exp]
  author: users_bool_exp
  authorId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_descriptions"
"""
enum metric_descriptions_constraint {
  """unique or primary key constraint"""
  metric_descriptions_pkey
}

"""
input type for incrementing integer column in table "metric_descriptions"
"""
input metric_descriptions_inc_input {
  authorId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
input type for inserting data into table "metric_descriptions"
"""
input metric_descriptions_insert_input {
  author: users_obj_rel_insert_input
  authorId: Int
  createdAt: timestamptz
  description: String
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
}

"""aggregate max on columns"""
type metric_descriptions_max_fields {
  authorId: Int
  createdAt: timestamptz
  description: String
  id: Int
  metricId: Int
  organizationId: Int
}

"""
order by max() on columns of table "metric_descriptions"
"""
input metric_descriptions_max_order_by {
  authorId: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate min on columns"""
type metric_descriptions_min_fields {
  authorId: Int
  createdAt: timestamptz
  description: String
  id: Int
  metricId: Int
  organizationId: Int
}

"""
order by min() on columns of table "metric_descriptions"
"""
input metric_descriptions_min_order_by {
  authorId: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
response of any mutation on the table "metric_descriptions"
"""
type metric_descriptions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_descriptions!]!
}

"""
input type for inserting object relation for remote table "metric_descriptions"
"""
input metric_descriptions_obj_rel_insert_input {
  data: metric_descriptions_insert_input!
  on_conflict: metric_descriptions_on_conflict
}

"""
on conflict condition type for table "metric_descriptions"
"""
input metric_descriptions_on_conflict {
  constraint: metric_descriptions_constraint!
  update_columns: [metric_descriptions_update_column!]!
  where: metric_descriptions_bool_exp
}

"""
ordering options when selecting data from "metric_descriptions"
"""
input metric_descriptions_order_by {
  author: users_order_by
  authorId: order_by
  createdAt: order_by
  description: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  organization: organizations_order_by
  organizationId: order_by
}

"""
primary key columns input for table: "metric_descriptions"
"""
input metric_descriptions_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_descriptions"
"""
enum metric_descriptions_select_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  organizationId
}

"""
input type for updating data in table "metric_descriptions"
"""
input metric_descriptions_set_input {
  authorId: Int
  createdAt: timestamptz
  description: String
  id: Int
  metricId: Int
  organizationId: Int
}

"""aggregate stddev on columns"""
type metric_descriptions_stddev_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "metric_descriptions"
"""
input metric_descriptions_stddev_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type metric_descriptions_stddev_pop_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "metric_descriptions"
"""
input metric_descriptions_stddev_pop_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type metric_descriptions_stddev_samp_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "metric_descriptions"
"""
input metric_descriptions_stddev_samp_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type metric_descriptions_sum_fields {
  authorId: Int
  id: Int
  metricId: Int
  organizationId: Int
}

"""
order by sum() on columns of table "metric_descriptions"
"""
input metric_descriptions_sum_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
update columns of table "metric_descriptions"
"""
enum metric_descriptions_update_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  organizationId
}

"""aggregate var_pop on columns"""
type metric_descriptions_var_pop_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "metric_descriptions"
"""
input metric_descriptions_var_pop_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type metric_descriptions_var_samp_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "metric_descriptions"
"""
input metric_descriptions_var_samp_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type metric_descriptions_variance_fields {
  authorId: Float
  id: Float
  metricId: Float
  organizationId: Float
}

"""
order by variance() on columns of table "metric_descriptions"
"""
input metric_descriptions_variance_order_by {
  authorId: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
}

"""
columns and relationships of "metric_lineage_data_sources"
"""
type metric_lineage_data_sources {
  created_at: timestamptz!

  """An object relationship"""
  dataSourceVersion: data_source_versions!
  data_source_version_id: Int!
  id: Int!

  """An object relationship"""
  metricVersion: metric_versions!
  metric_version_id: Int!

  """An object relationship"""
  organization: organizations!
  organization_id: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "metric_lineage_data_sources"
"""
type metric_lineage_data_sources_aggregate {
  aggregate: metric_lineage_data_sources_aggregate_fields
  nodes: [metric_lineage_data_sources!]!
}

"""
aggregate fields of "metric_lineage_data_sources"
"""
type metric_lineage_data_sources_aggregate_fields {
  avg: metric_lineage_data_sources_avg_fields
  count(columns: [metric_lineage_data_sources_select_column!], distinct: Boolean): Int
  max: metric_lineage_data_sources_max_fields
  min: metric_lineage_data_sources_min_fields
  stddev: metric_lineage_data_sources_stddev_fields
  stddev_pop: metric_lineage_data_sources_stddev_pop_fields
  stddev_samp: metric_lineage_data_sources_stddev_samp_fields
  sum: metric_lineage_data_sources_sum_fields
  var_pop: metric_lineage_data_sources_var_pop_fields
  var_samp: metric_lineage_data_sources_var_samp_fields
  variance: metric_lineage_data_sources_variance_fields
}

"""
order by aggregate values of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_aggregate_order_by {
  avg: metric_lineage_data_sources_avg_order_by
  count: order_by
  max: metric_lineage_data_sources_max_order_by
  min: metric_lineage_data_sources_min_order_by
  stddev: metric_lineage_data_sources_stddev_order_by
  stddev_pop: metric_lineage_data_sources_stddev_pop_order_by
  stddev_samp: metric_lineage_data_sources_stddev_samp_order_by
  sum: metric_lineage_data_sources_sum_order_by
  var_pop: metric_lineage_data_sources_var_pop_order_by
  var_samp: metric_lineage_data_sources_var_samp_order_by
  variance: metric_lineage_data_sources_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_arr_rel_insert_input {
  data: [metric_lineage_data_sources_insert_input!]!
  on_conflict: metric_lineage_data_sources_on_conflict
}

"""aggregate avg on columns"""
type metric_lineage_data_sources_avg_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by avg() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_avg_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""
Boolean expression to filter rows from the table "metric_lineage_data_sources". All fields are combined with a logical 'AND'.
"""
input metric_lineage_data_sources_bool_exp {
  _and: [metric_lineage_data_sources_bool_exp]
  _not: metric_lineage_data_sources_bool_exp
  _or: [metric_lineage_data_sources_bool_exp]
  created_at: timestamptz_comparison_exp
  dataSourceVersion: data_source_versions_bool_exp
  data_source_version_id: Int_comparison_exp
  id: Int_comparison_exp
  metricVersion: metric_versions_bool_exp
  metric_version_id: Int_comparison_exp
  organization: organizations_bool_exp
  organization_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "metric_lineage_data_sources"
"""
enum metric_lineage_data_sources_constraint {
  """unique or primary key constraint"""
  metric_lineage_data_sources_metric_version_id_data_source_v_key

  """unique or primary key constraint"""
  metric_lineage_data_sources_pkey
}

"""
input type for incrementing integer column in table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_inc_input {
  data_source_version_id: Int
  id: Int
  metric_version_id: Int
  organization_id: Int
}

"""
input type for inserting data into table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_insert_input {
  created_at: timestamptz
  dataSourceVersion: data_source_versions_obj_rel_insert_input
  data_source_version_id: Int
  id: Int
  metricVersion: metric_versions_obj_rel_insert_input
  metric_version_id: Int
  organization: organizations_obj_rel_insert_input
  organization_id: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type metric_lineage_data_sources_max_fields {
  created_at: timestamptz
  data_source_version_id: Int
  id: Int
  metric_version_id: Int
  organization_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_max_order_by {
  created_at: order_by
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type metric_lineage_data_sources_min_fields {
  created_at: timestamptz
  data_source_version_id: Int
  id: Int
  metric_version_id: Int
  organization_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_min_order_by {
  created_at: order_by
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "metric_lineage_data_sources"
"""
type metric_lineage_data_sources_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_lineage_data_sources!]!
}

"""
input type for inserting object relation for remote table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_obj_rel_insert_input {
  data: metric_lineage_data_sources_insert_input!
  on_conflict: metric_lineage_data_sources_on_conflict
}

"""
on conflict condition type for table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_on_conflict {
  constraint: metric_lineage_data_sources_constraint!
  update_columns: [metric_lineage_data_sources_update_column!]!
  where: metric_lineage_data_sources_bool_exp
}

"""
ordering options when selecting data from "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_order_by {
  created_at: order_by
  dataSourceVersion: data_source_versions_order_by
  data_source_version_id: order_by
  id: order_by
  metricVersion: metric_versions_order_by
  metric_version_id: order_by
  organization: organizations_order_by
  organization_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_lineage_data_sources"
"""
enum metric_lineage_data_sources_select_column {
  """column name"""
  created_at

  """column name"""
  data_source_version_id

  """column name"""
  id

  """column name"""
  metric_version_id

  """column name"""
  organization_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_set_input {
  created_at: timestamptz
  data_source_version_id: Int
  id: Int
  metric_version_id: Int
  organization_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type metric_lineage_data_sources_stddev_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by stddev() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_stddev_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""aggregate stddev_pop on columns"""
type metric_lineage_data_sources_stddev_pop_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by stddev_pop() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_stddev_pop_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""aggregate stddev_samp on columns"""
type metric_lineage_data_sources_stddev_samp_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by stddev_samp() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_stddev_samp_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""aggregate sum on columns"""
type metric_lineage_data_sources_sum_fields {
  data_source_version_id: Int
  id: Int
  metric_version_id: Int
  organization_id: Int
}

"""
order by sum() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_sum_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""
update columns of table "metric_lineage_data_sources"
"""
enum metric_lineage_data_sources_update_column {
  """column name"""
  created_at

  """column name"""
  data_source_version_id

  """column name"""
  id

  """column name"""
  metric_version_id

  """column name"""
  organization_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type metric_lineage_data_sources_var_pop_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by var_pop() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_var_pop_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""aggregate var_samp on columns"""
type metric_lineage_data_sources_var_samp_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by var_samp() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_var_samp_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""aggregate variance on columns"""
type metric_lineage_data_sources_variance_fields {
  data_source_version_id: Float
  id: Float
  metric_version_id: Float
  organization_id: Float
}

"""
order by variance() on columns of table "metric_lineage_data_sources"
"""
input metric_lineage_data_sources_variance_order_by {
  data_source_version_id: order_by
  id: order_by
  metric_version_id: order_by
  organization_id: order_by
}

"""
columns and relationships of "metric_team_owners"
"""
type metric_team_owners {
  createdAt: timestamptz
  created_ts: Int
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view
  metricId: Int
  metric_name: String

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  team: teams!
  teamId: Int!
}

"""
aggregated selection of "metric_team_owners"
"""
type metric_team_owners_aggregate {
  aggregate: metric_team_owners_aggregate_fields
  nodes: [metric_team_owners!]!
}

"""
aggregate fields of "metric_team_owners"
"""
type metric_team_owners_aggregate_fields {
  avg: metric_team_owners_avg_fields
  count(columns: [metric_team_owners_select_column!], distinct: Boolean): Int
  max: metric_team_owners_max_fields
  min: metric_team_owners_min_fields
  stddev: metric_team_owners_stddev_fields
  stddev_pop: metric_team_owners_stddev_pop_fields
  stddev_samp: metric_team_owners_stddev_samp_fields
  sum: metric_team_owners_sum_fields
  var_pop: metric_team_owners_var_pop_fields
  var_samp: metric_team_owners_var_samp_fields
  variance: metric_team_owners_variance_fields
}

"""
order by aggregate values of table "metric_team_owners"
"""
input metric_team_owners_aggregate_order_by {
  avg: metric_team_owners_avg_order_by
  count: order_by
  max: metric_team_owners_max_order_by
  min: metric_team_owners_min_order_by
  stddev: metric_team_owners_stddev_order_by
  stddev_pop: metric_team_owners_stddev_pop_order_by
  stddev_samp: metric_team_owners_stddev_samp_order_by
  sum: metric_team_owners_sum_order_by
  var_pop: metric_team_owners_var_pop_order_by
  var_samp: metric_team_owners_var_samp_order_by
  variance: metric_team_owners_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_team_owners"
"""
input metric_team_owners_arr_rel_insert_input {
  data: [metric_team_owners_insert_input!]!
  on_conflict: metric_team_owners_on_conflict
}

"""aggregate avg on columns"""
type metric_team_owners_avg_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by avg() on columns of table "metric_team_owners"
"""
input metric_team_owners_avg_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""
Boolean expression to filter rows from the table "metric_team_owners". All fields are combined with a logical 'AND'.
"""
input metric_team_owners_bool_exp {
  _and: [metric_team_owners_bool_exp]
  _not: metric_team_owners_bool_exp
  _or: [metric_team_owners_bool_exp]
  createdAt: timestamptz_comparison_exp
  created_ts: Int_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  metric_name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  team: teams_bool_exp
  teamId: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_team_owners"
"""
enum metric_team_owners_constraint {
  """unique or primary key constraint"""
  metric_team_owners_org_metric_id_team_id_key

  """unique or primary key constraint"""
  metric_team_owners_pkey
}

"""
input type for incrementing integer column in table "metric_team_owners"
"""
input metric_team_owners_inc_input {
  created_ts: Int
  id: Int
  metricId: Int
  organizationId: Int
  teamId: Int
}

"""
input type for inserting data into table "metric_team_owners"
"""
input metric_team_owners_insert_input {
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  metric_name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  team: teams_obj_rel_insert_input
  teamId: Int
}

"""aggregate max on columns"""
type metric_team_owners_max_fields {
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  teamId: Int
}

"""
order by max() on columns of table "metric_team_owners"
"""
input metric_team_owners_max_order_by {
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate min on columns"""
type metric_team_owners_min_fields {
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  teamId: Int
}

"""
order by min() on columns of table "metric_team_owners"
"""
input metric_team_owners_min_order_by {
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  teamId: order_by
}

"""
response of any mutation on the table "metric_team_owners"
"""
type metric_team_owners_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_team_owners!]!
}

"""
input type for inserting object relation for remote table "metric_team_owners"
"""
input metric_team_owners_obj_rel_insert_input {
  data: metric_team_owners_insert_input!
  on_conflict: metric_team_owners_on_conflict
}

"""
on conflict condition type for table "metric_team_owners"
"""
input metric_team_owners_on_conflict {
  constraint: metric_team_owners_constraint!
  update_columns: [metric_team_owners_update_column!]!
  where: metric_team_owners_bool_exp
}

"""
ordering options when selecting data from "metric_team_owners"
"""
input metric_team_owners_order_by {
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metric_name: order_by
  organization: organizations_order_by
  organizationId: order_by
  team: teams_order_by
  teamId: order_by
}

"""
primary key columns input for table: "metric_team_owners"
"""
input metric_team_owners_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_team_owners"
"""
enum metric_team_owners_select_column {
  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId

  """column name"""
  teamId
}

"""
input type for updating data in table "metric_team_owners"
"""
input metric_team_owners_set_input {
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metric_name: String
  organizationId: Int
  teamId: Int
}

"""aggregate stddev on columns"""
type metric_team_owners_stddev_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by stddev() on columns of table "metric_team_owners"
"""
input metric_team_owners_stddev_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate stddev_pop on columns"""
type metric_team_owners_stddev_pop_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by stddev_pop() on columns of table "metric_team_owners"
"""
input metric_team_owners_stddev_pop_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate stddev_samp on columns"""
type metric_team_owners_stddev_samp_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by stddev_samp() on columns of table "metric_team_owners"
"""
input metric_team_owners_stddev_samp_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate sum on columns"""
type metric_team_owners_sum_fields {
  created_ts: Int
  id: Int
  metricId: Int
  organizationId: Int
  teamId: Int
}

"""
order by sum() on columns of table "metric_team_owners"
"""
input metric_team_owners_sum_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""
update columns of table "metric_team_owners"
"""
enum metric_team_owners_update_column {
  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId

  """column name"""
  teamId
}

"""aggregate var_pop on columns"""
type metric_team_owners_var_pop_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by var_pop() on columns of table "metric_team_owners"
"""
input metric_team_owners_var_pop_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate var_samp on columns"""
type metric_team_owners_var_samp_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by var_samp() on columns of table "metric_team_owners"
"""
input metric_team_owners_var_samp_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""aggregate variance on columns"""
type metric_team_owners_variance_fields {
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  teamId: Float
}

"""
order by variance() on columns of table "metric_team_owners"
"""
input metric_team_owners_variance_order_by {
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  teamId: order_by
}

"""
Assigns ownership of a given metric to users. Can come from the model configs or the UI.


columns and relationships of "metric_user_owners"

"""
type metric_user_owners {
  """Timestamp indicating when the user was made owner of the metric"""
  createdAt: timestamptz!
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view!
  metricId: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  user: users!
  user_id: Int!
}

"""
aggregated selection of "metric_user_owners"
"""
type metric_user_owners_aggregate {
  aggregate: metric_user_owners_aggregate_fields
  nodes: [metric_user_owners!]!
}

"""
aggregate fields of "metric_user_owners"
"""
type metric_user_owners_aggregate_fields {
  avg: metric_user_owners_avg_fields
  count(columns: [metric_user_owners_select_column!], distinct: Boolean): Int
  max: metric_user_owners_max_fields
  min: metric_user_owners_min_fields
  stddev: metric_user_owners_stddev_fields
  stddev_pop: metric_user_owners_stddev_pop_fields
  stddev_samp: metric_user_owners_stddev_samp_fields
  sum: metric_user_owners_sum_fields
  var_pop: metric_user_owners_var_pop_fields
  var_samp: metric_user_owners_var_samp_fields
  variance: metric_user_owners_variance_fields
}

"""
order by aggregate values of table "metric_user_owners"
"""
input metric_user_owners_aggregate_order_by {
  avg: metric_user_owners_avg_order_by
  count: order_by
  max: metric_user_owners_max_order_by
  min: metric_user_owners_min_order_by
  stddev: metric_user_owners_stddev_order_by
  stddev_pop: metric_user_owners_stddev_pop_order_by
  stddev_samp: metric_user_owners_stddev_samp_order_by
  sum: metric_user_owners_sum_order_by
  var_pop: metric_user_owners_var_pop_order_by
  var_samp: metric_user_owners_var_samp_order_by
  variance: metric_user_owners_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_user_owners"
"""
input metric_user_owners_arr_rel_insert_input {
  data: [metric_user_owners_insert_input!]!
  on_conflict: metric_user_owners_on_conflict
}

"""aggregate avg on columns"""
type metric_user_owners_avg_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by avg() on columns of table "metric_user_owners"
"""
input metric_user_owners_avg_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "metric_user_owners". All fields are combined with a logical 'AND'.
"""
input metric_user_owners_bool_exp {
  _and: [metric_user_owners_bool_exp]
  _not: metric_user_owners_bool_exp
  _or: [metric_user_owners_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_user_owners"
"""
enum metric_user_owners_constraint {
  """unique or primary key constraint"""
  metric_user_owners_pkey
}

"""
input type for incrementing integer column in table "metric_user_owners"
"""
input metric_user_owners_inc_input {
  id: Int
  metricId: Int
  organizationId: Int
  user_id: Int
}

"""
input type for inserting data into table "metric_user_owners"
"""
input metric_user_owners_insert_input {
  createdAt: timestamptz
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  user: users_obj_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type metric_user_owners_max_fields {
  createdAt: timestamptz
  id: Int
  metricId: Int
  organizationId: Int
  user_id: Int
}

"""
order by max() on columns of table "metric_user_owners"
"""
input metric_user_owners_max_order_by {
  createdAt: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type metric_user_owners_min_fields {
  createdAt: timestamptz
  id: Int
  metricId: Int
  organizationId: Int
  user_id: Int
}

"""
order by min() on columns of table "metric_user_owners"
"""
input metric_user_owners_min_order_by {
  createdAt: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""
response of any mutation on the table "metric_user_owners"
"""
type metric_user_owners_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_user_owners!]!
}

"""
input type for inserting object relation for remote table "metric_user_owners"
"""
input metric_user_owners_obj_rel_insert_input {
  data: metric_user_owners_insert_input!
  on_conflict: metric_user_owners_on_conflict
}

"""
on conflict condition type for table "metric_user_owners"
"""
input metric_user_owners_on_conflict {
  constraint: metric_user_owners_constraint!
  update_columns: [metric_user_owners_update_column!]!
  where: metric_user_owners_bool_exp
}

"""
ordering options when selecting data from "metric_user_owners"
"""
input metric_user_owners_order_by {
  createdAt: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  organization: organizations_order_by
  organizationId: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "metric_user_owners"
"""
input metric_user_owners_pk_columns_input {
  id: Int!
}

"""
select columns of table "metric_user_owners"
"""
enum metric_user_owners_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  organizationId

  """column name"""
  user_id
}

"""
input type for updating data in table "metric_user_owners"
"""
input metric_user_owners_set_input {
  createdAt: timestamptz
  id: Int
  metricId: Int
  organizationId: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type metric_user_owners_stddev_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by stddev() on columns of table "metric_user_owners"
"""
input metric_user_owners_stddev_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type metric_user_owners_stddev_pop_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "metric_user_owners"
"""
input metric_user_owners_stddev_pop_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type metric_user_owners_stddev_samp_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "metric_user_owners"
"""
input metric_user_owners_stddev_samp_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type metric_user_owners_sum_fields {
  id: Int
  metricId: Int
  organizationId: Int
  user_id: Int
}

"""
order by sum() on columns of table "metric_user_owners"
"""
input metric_user_owners_sum_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""
update columns of table "metric_user_owners"
"""
enum metric_user_owners_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  organizationId

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type metric_user_owners_var_pop_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "metric_user_owners"
"""
input metric_user_owners_var_pop_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type metric_user_owners_var_samp_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "metric_user_owners"
"""
input metric_user_owners_var_samp_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type metric_user_owners_variance_fields {
  id: Float
  metricId: Float
  organizationId: Float
  user_id: Float
}

"""
order by variance() on columns of table "metric_user_owners"
"""
input metric_user_owners_variance_order_by {
  id: order_by
  metricId: order_by
  organizationId: order_by
  user_id: order_by
}

"""
The exact definition from the configs a metric live here. Only updated when a definition changes, so this represents a version of a metric.


columns and relationships of "metric_versions"

"""
type metric_versions {
  createdAt: timestamptz!

  """An object relationship"""
  dataSource: org_data_sources
  dataSourceId: Int

  """An array relationship"""
  dataSources(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): [metric_lineage_data_sources!]!

  """An aggregated array relationship"""
  dataSources_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): metric_lineage_data_sources_aggregate!
  description: String!
  displayName: String!
  hash: String!
  id: bigint!
  metadata(
    """JSON select path"""
    path: String
  ): jsonb!
  metricType: Int!

  """An array relationship"""
  modelMetrics(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): [model_metrics!]!

  """An aggregated array relationship"""
  modelMetrics_aggregate(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): model_metrics_aggregate!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  params(
    """JSON select path"""
    path: String
  ): jsonb!
  source_data_source_versions(
    """JSON select path"""
    path: String
  ): json
  tier: Int!
}

"""
aggregated selection of "metric_versions"
"""
type metric_versions_aggregate {
  aggregate: metric_versions_aggregate_fields
  nodes: [metric_versions!]!
}

"""
aggregate fields of "metric_versions"
"""
type metric_versions_aggregate_fields {
  avg: metric_versions_avg_fields
  count(columns: [metric_versions_select_column!], distinct: Boolean): Int
  max: metric_versions_max_fields
  min: metric_versions_min_fields
  stddev: metric_versions_stddev_fields
  stddev_pop: metric_versions_stddev_pop_fields
  stddev_samp: metric_versions_stddev_samp_fields
  sum: metric_versions_sum_fields
  var_pop: metric_versions_var_pop_fields
  var_samp: metric_versions_var_samp_fields
  variance: metric_versions_variance_fields
}

"""
order by aggregate values of table "metric_versions"
"""
input metric_versions_aggregate_order_by {
  avg: metric_versions_avg_order_by
  count: order_by
  max: metric_versions_max_order_by
  min: metric_versions_min_order_by
  stddev: metric_versions_stddev_order_by
  stddev_pop: metric_versions_stddev_pop_order_by
  stddev_samp: metric_versions_stddev_samp_order_by
  sum: metric_versions_sum_order_by
  var_pop: metric_versions_var_pop_order_by
  var_samp: metric_versions_var_samp_order_by
  variance: metric_versions_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input metric_versions_append_input {
  metadata: jsonb
  params: jsonb
}

"""
input type for inserting array relation for remote table "metric_versions"
"""
input metric_versions_arr_rel_insert_input {
  data: [metric_versions_insert_input!]!
  on_conflict: metric_versions_on_conflict
}

"""aggregate avg on columns"""
type metric_versions_avg_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by avg() on columns of table "metric_versions"
"""
input metric_versions_avg_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""
Boolean expression to filter rows from the table "metric_versions". All fields are combined with a logical 'AND'.
"""
input metric_versions_bool_exp {
  _and: [metric_versions_bool_exp]
  _not: metric_versions_bool_exp
  _or: [metric_versions_bool_exp]
  createdAt: timestamptz_comparison_exp
  dataSource: org_data_sources_bool_exp
  dataSourceId: Int_comparison_exp
  dataSources: metric_lineage_data_sources_bool_exp
  description: String_comparison_exp
  displayName: String_comparison_exp
  hash: String_comparison_exp
  id: bigint_comparison_exp
  metadata: jsonb_comparison_exp
  metricType: Int_comparison_exp
  modelMetrics: model_metrics_bool_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  params: jsonb_comparison_exp
  source_data_source_versions: json_comparison_exp
  tier: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric_versions"
"""
enum metric_versions_constraint {
  """unique or primary key constraint"""
  metric_versions_hash_organization_id_key

  """unique or primary key constraint"""
  metric_versions_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input metric_versions_delete_at_path_input {
  metadata: [String]
  params: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input metric_versions_delete_elem_input {
  metadata: Int
  params: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input metric_versions_delete_key_input {
  metadata: String
  params: String
}

"""
input type for incrementing integer column in table "metric_versions"
"""
input metric_versions_inc_input {
  dataSourceId: Int
  id: bigint
  metricType: Int
  organizationId: Int
  tier: Int
}

"""
input type for inserting data into table "metric_versions"
"""
input metric_versions_insert_input {
  createdAt: timestamptz
  dataSource: org_data_sources_obj_rel_insert_input
  dataSourceId: Int
  dataSources: metric_lineage_data_sources_arr_rel_insert_input
  description: String
  displayName: String
  hash: String
  id: bigint
  metadata: jsonb
  metricType: Int
  modelMetrics: model_metrics_arr_rel_insert_input
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  params: jsonb
  source_data_source_versions: json
  tier: Int
}

"""aggregate max on columns"""
type metric_versions_max_fields {
  createdAt: timestamptz
  dataSourceId: Int
  description: String
  displayName: String
  hash: String
  id: bigint
  metricType: Int
  organizationId: Int
  tier: Int
}

"""
order by max() on columns of table "metric_versions"
"""
input metric_versions_max_order_by {
  createdAt: order_by
  dataSourceId: order_by
  description: order_by
  displayName: order_by
  hash: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate min on columns"""
type metric_versions_min_fields {
  createdAt: timestamptz
  dataSourceId: Int
  description: String
  displayName: String
  hash: String
  id: bigint
  metricType: Int
  organizationId: Int
  tier: Int
}

"""
order by min() on columns of table "metric_versions"
"""
input metric_versions_min_order_by {
  createdAt: order_by
  dataSourceId: order_by
  description: order_by
  displayName: order_by
  hash: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""
response of any mutation on the table "metric_versions"
"""
type metric_versions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_versions!]!
}

"""
input type for inserting object relation for remote table "metric_versions"
"""
input metric_versions_obj_rel_insert_input {
  data: metric_versions_insert_input!
  on_conflict: metric_versions_on_conflict
}

"""
on conflict condition type for table "metric_versions"
"""
input metric_versions_on_conflict {
  constraint: metric_versions_constraint!
  update_columns: [metric_versions_update_column!]!
  where: metric_versions_bool_exp
}

"""
ordering options when selecting data from "metric_versions"
"""
input metric_versions_order_by {
  createdAt: order_by
  dataSource: org_data_sources_order_by
  dataSourceId: order_by
  dataSources_aggregate: metric_lineage_data_sources_aggregate_order_by
  description: order_by
  displayName: order_by
  hash: order_by
  id: order_by
  metadata: order_by
  metricType: order_by
  modelMetrics_aggregate: model_metrics_aggregate_order_by
  organization: organizations_order_by
  organizationId: order_by
  params: order_by
  source_data_source_versions: order_by
  tier: order_by
}

"""
primary key columns input for table: "metric_versions"
"""
input metric_versions_pk_columns_input {
  id: bigint!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input metric_versions_prepend_input {
  metadata: jsonb
  params: jsonb
}

"""
select columns of table "metric_versions"
"""
enum metric_versions_select_column {
  """column name"""
  createdAt

  """column name"""
  dataSourceId

  """column name"""
  description

  """column name"""
  displayName

  """column name"""
  hash

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metricType

  """column name"""
  organizationId

  """column name"""
  params

  """column name"""
  source_data_source_versions

  """column name"""
  tier
}

"""
input type for updating data in table "metric_versions"
"""
input metric_versions_set_input {
  createdAt: timestamptz
  dataSourceId: Int
  description: String
  displayName: String
  hash: String
  id: bigint
  metadata: jsonb
  metricType: Int
  organizationId: Int
  params: jsonb
  source_data_source_versions: json
  tier: Int
}

"""aggregate stddev on columns"""
type metric_versions_stddev_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev() on columns of table "metric_versions"
"""
input metric_versions_stddev_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate stddev_pop on columns"""
type metric_versions_stddev_pop_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev_pop() on columns of table "metric_versions"
"""
input metric_versions_stddev_pop_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate stddev_samp on columns"""
type metric_versions_stddev_samp_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev_samp() on columns of table "metric_versions"
"""
input metric_versions_stddev_samp_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate sum on columns"""
type metric_versions_sum_fields {
  dataSourceId: Int
  id: bigint
  metricType: Int
  organizationId: Int
  tier: Int
}

"""
order by sum() on columns of table "metric_versions"
"""
input metric_versions_sum_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""
update columns of table "metric_versions"
"""
enum metric_versions_update_column {
  """column name"""
  createdAt

  """column name"""
  dataSourceId

  """column name"""
  description

  """column name"""
  displayName

  """column name"""
  hash

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metricType

  """column name"""
  organizationId

  """column name"""
  params

  """column name"""
  source_data_source_versions

  """column name"""
  tier
}

"""aggregate var_pop on columns"""
type metric_versions_var_pop_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by var_pop() on columns of table "metric_versions"
"""
input metric_versions_var_pop_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate var_samp on columns"""
type metric_versions_var_samp_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by var_samp() on columns of table "metric_versions"
"""
input metric_versions_var_samp_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate variance on columns"""
type metric_versions_variance_fields {
  dataSourceId: Float
  id: Float
  metricType: Float
  organizationId: Float
  tier: Float
}

"""
order by variance() on columns of table "metric_versions"
"""
input metric_versions_variance_order_by {
  dataSourceId: order_by
  id: order_by
  metricType: order_by
  organizationId: order_by
  tier: order_by
}

"""
columns and relationships of "metric_view"
"""
type metric_view {
  createdAt: timestamptz

  """An object relationship"""
  metric: org_metrics_current_view
  metricId: Int
  metric_name: String

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  user: users!
  userId: Int!
  viewed_ts: Int
}

"""
aggregated selection of "metric_view"
"""
type metric_view_aggregate {
  aggregate: metric_view_aggregate_fields
  nodes: [metric_view!]!
}

"""
aggregate fields of "metric_view"
"""
type metric_view_aggregate_fields {
  avg: metric_view_avg_fields
  count(columns: [metric_view_select_column!], distinct: Boolean): Int
  max: metric_view_max_fields
  min: metric_view_min_fields
  stddev: metric_view_stddev_fields
  stddev_pop: metric_view_stddev_pop_fields
  stddev_samp: metric_view_stddev_samp_fields
  sum: metric_view_sum_fields
  var_pop: metric_view_var_pop_fields
  var_samp: metric_view_var_samp_fields
  variance: metric_view_variance_fields
}

"""
order by aggregate values of table "metric_view"
"""
input metric_view_aggregate_order_by {
  avg: metric_view_avg_order_by
  count: order_by
  max: metric_view_max_order_by
  min: metric_view_min_order_by
  stddev: metric_view_stddev_order_by
  stddev_pop: metric_view_stddev_pop_order_by
  stddev_samp: metric_view_stddev_samp_order_by
  sum: metric_view_sum_order_by
  var_pop: metric_view_var_pop_order_by
  var_samp: metric_view_var_samp_order_by
  variance: metric_view_variance_order_by
}

"""
input type for inserting array relation for remote table "metric_view"
"""
input metric_view_arr_rel_insert_input {
  data: [metric_view_insert_input!]!
}

"""aggregate avg on columns"""
type metric_view_avg_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by avg() on columns of table "metric_view"
"""
input metric_view_avg_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""
Boolean expression to filter rows from the table "metric_view". All fields are combined with a logical 'AND'.
"""
input metric_view_bool_exp {
  _and: [metric_view_bool_exp]
  _not: metric_view_bool_exp
  _or: [metric_view_bool_exp]
  createdAt: timestamptz_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  metric_name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
  viewed_ts: Int_comparison_exp
}

"""
input type for incrementing integer column in table "metric_view"
"""
input metric_view_inc_input {
  metricId: Int
  organizationId: Int
  userId: Int
  viewed_ts: Int
}

"""
input type for inserting data into table "metric_view"
"""
input metric_view_insert_input {
  createdAt: timestamptz
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  metric_name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  user: users_obj_rel_insert_input
  userId: Int
  viewed_ts: Int
}

"""aggregate max on columns"""
type metric_view_max_fields {
  createdAt: timestamptz
  metricId: Int
  metric_name: String
  organizationId: Int
  userId: Int
  viewed_ts: Int
}

"""
order by max() on columns of table "metric_view"
"""
input metric_view_max_order_by {
  createdAt: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate min on columns"""
type metric_view_min_fields {
  createdAt: timestamptz
  metricId: Int
  metric_name: String
  organizationId: Int
  userId: Int
  viewed_ts: Int
}

"""
order by min() on columns of table "metric_view"
"""
input metric_view_min_order_by {
  createdAt: order_by
  metricId: order_by
  metric_name: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""
response of any mutation on the table "metric_view"
"""
type metric_view_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [metric_view!]!
}

"""
input type for inserting object relation for remote table "metric_view"
"""
input metric_view_obj_rel_insert_input {
  data: metric_view_insert_input!
}

"""
ordering options when selecting data from "metric_view"
"""
input metric_view_order_by {
  createdAt: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metric_name: order_by
  organization: organizations_order_by
  organizationId: order_by
  user: users_order_by
  userId: order_by
  viewed_ts: order_by
}

"""
select columns of table "metric_view"
"""
enum metric_view_select_column {
  """column name"""
  createdAt

  """column name"""
  metricId

  """column name"""
  metric_name

  """column name"""
  organizationId

  """column name"""
  userId

  """column name"""
  viewed_ts
}

"""
input type for updating data in table "metric_view"
"""
input metric_view_set_input {
  createdAt: timestamptz
  metricId: Int
  metric_name: String
  organizationId: Int
  userId: Int
  viewed_ts: Int
}

"""aggregate stddev on columns"""
type metric_view_stddev_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by stddev() on columns of table "metric_view"
"""
input metric_view_stddev_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate stddev_pop on columns"""
type metric_view_stddev_pop_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by stddev_pop() on columns of table "metric_view"
"""
input metric_view_stddev_pop_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate stddev_samp on columns"""
type metric_view_stddev_samp_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by stddev_samp() on columns of table "metric_view"
"""
input metric_view_stddev_samp_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate sum on columns"""
type metric_view_sum_fields {
  metricId: Int
  organizationId: Int
  userId: Int
  viewed_ts: Int
}

"""
order by sum() on columns of table "metric_view"
"""
input metric_view_sum_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate var_pop on columns"""
type metric_view_var_pop_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by var_pop() on columns of table "metric_view"
"""
input metric_view_var_pop_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate var_samp on columns"""
type metric_view_var_samp_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by var_samp() on columns of table "metric_view"
"""
input metric_view_var_samp_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""aggregate variance on columns"""
type metric_view_variance_fields {
  metricId: Float
  organizationId: Float
  userId: Float
  viewed_ts: Float
}

"""
order by variance() on columns of table "metric_view"
"""
input metric_view_variance_order_by {
  metricId: order_by
  organizationId: order_by
  userId: order_by
  viewed_ts: order_by
}

"""
The current model


columns and relationships of "model_current"

"""
type model_current {
  """An object relationship"""
  model: models
  model_id: bigint

  """An object relationship"""
  organization: organizations
  organization_id: Int
}

"""
aggregated selection of "model_current"
"""
type model_current_aggregate {
  aggregate: model_current_aggregate_fields
  nodes: [model_current!]!
}

"""
aggregate fields of "model_current"
"""
type model_current_aggregate_fields {
  avg: model_current_avg_fields
  count(columns: [model_current_select_column!], distinct: Boolean): Int
  max: model_current_max_fields
  min: model_current_min_fields
  stddev: model_current_stddev_fields
  stddev_pop: model_current_stddev_pop_fields
  stddev_samp: model_current_stddev_samp_fields
  sum: model_current_sum_fields
  var_pop: model_current_var_pop_fields
  var_samp: model_current_var_samp_fields
  variance: model_current_variance_fields
}

"""
order by aggregate values of table "model_current"
"""
input model_current_aggregate_order_by {
  avg: model_current_avg_order_by
  count: order_by
  max: model_current_max_order_by
  min: model_current_min_order_by
  stddev: model_current_stddev_order_by
  stddev_pop: model_current_stddev_pop_order_by
  stddev_samp: model_current_stddev_samp_order_by
  sum: model_current_sum_order_by
  var_pop: model_current_var_pop_order_by
  var_samp: model_current_var_samp_order_by
  variance: model_current_variance_order_by
}

"""aggregate avg on columns"""
type model_current_avg_fields {
  model_id: Float
  organization_id: Float
}

"""
order by avg() on columns of table "model_current"
"""
input model_current_avg_order_by {
  model_id: order_by
  organization_id: order_by
}

"""
Boolean expression to filter rows from the table "model_current". All fields are combined with a logical 'AND'.
"""
input model_current_bool_exp {
  _and: [model_current_bool_exp]
  _not: model_current_bool_exp
  _or: [model_current_bool_exp]
  model: models_bool_exp
  model_id: bigint_comparison_exp
  organization: organizations_bool_exp
  organization_id: Int_comparison_exp
}

"""aggregate max on columns"""
type model_current_max_fields {
  model_id: bigint
  organization_id: Int
}

"""
order by max() on columns of table "model_current"
"""
input model_current_max_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate min on columns"""
type model_current_min_fields {
  model_id: bigint
  organization_id: Int
}

"""
order by min() on columns of table "model_current"
"""
input model_current_min_order_by {
  model_id: order_by
  organization_id: order_by
}

"""
ordering options when selecting data from "model_current"
"""
input model_current_order_by {
  model: models_order_by
  model_id: order_by
  organization: organizations_order_by
  organization_id: order_by
}

"""
select columns of table "model_current"
"""
enum model_current_select_column {
  """column name"""
  model_id

  """column name"""
  organization_id
}

"""aggregate stddev on columns"""
type model_current_stddev_fields {
  model_id: Float
  organization_id: Float
}

"""
order by stddev() on columns of table "model_current"
"""
input model_current_stddev_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate stddev_pop on columns"""
type model_current_stddev_pop_fields {
  model_id: Float
  organization_id: Float
}

"""
order by stddev_pop() on columns of table "model_current"
"""
input model_current_stddev_pop_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate stddev_samp on columns"""
type model_current_stddev_samp_fields {
  model_id: Float
  organization_id: Float
}

"""
order by stddev_samp() on columns of table "model_current"
"""
input model_current_stddev_samp_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate sum on columns"""
type model_current_sum_fields {
  model_id: bigint
  organization_id: Int
}

"""
order by sum() on columns of table "model_current"
"""
input model_current_sum_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate var_pop on columns"""
type model_current_var_pop_fields {
  model_id: Float
  organization_id: Float
}

"""
order by var_pop() on columns of table "model_current"
"""
input model_current_var_pop_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate var_samp on columns"""
type model_current_var_samp_fields {
  model_id: Float
  organization_id: Float
}

"""
order by var_samp() on columns of table "model_current"
"""
input model_current_var_samp_order_by {
  model_id: order_by
  organization_id: order_by
}

"""aggregate variance on columns"""
type model_current_variance_fields {
  model_id: Float
  organization_id: Float
}

"""
order by variance() on columns of table "model_current"
"""
input model_current_variance_order_by {
  model_id: order_by
  organization_id: order_by
}

"""
Lookup table to find the data source version for a given org_data_source ID and model ID combo


columns and relationships of "model_data_sources"

"""
type model_data_sources {
  """An object relationship"""
  dataSourceVersion: data_source_versions!
  dataSourceVersionId: Int!

  """An object relationship"""
  model: models!
  modelId: Int!

  """An object relationship"""
  orgDataSource: org_data_sources
  org_data_source_id: Int
}

"""
aggregated selection of "model_data_sources"
"""
type model_data_sources_aggregate {
  aggregate: model_data_sources_aggregate_fields
  nodes: [model_data_sources!]!
}

"""
aggregate fields of "model_data_sources"
"""
type model_data_sources_aggregate_fields {
  avg: model_data_sources_avg_fields
  count(columns: [model_data_sources_select_column!], distinct: Boolean): Int
  max: model_data_sources_max_fields
  min: model_data_sources_min_fields
  stddev: model_data_sources_stddev_fields
  stddev_pop: model_data_sources_stddev_pop_fields
  stddev_samp: model_data_sources_stddev_samp_fields
  sum: model_data_sources_sum_fields
  var_pop: model_data_sources_var_pop_fields
  var_samp: model_data_sources_var_samp_fields
  variance: model_data_sources_variance_fields
}

"""
order by aggregate values of table "model_data_sources"
"""
input model_data_sources_aggregate_order_by {
  avg: model_data_sources_avg_order_by
  count: order_by
  max: model_data_sources_max_order_by
  min: model_data_sources_min_order_by
  stddev: model_data_sources_stddev_order_by
  stddev_pop: model_data_sources_stddev_pop_order_by
  stddev_samp: model_data_sources_stddev_samp_order_by
  sum: model_data_sources_sum_order_by
  var_pop: model_data_sources_var_pop_order_by
  var_samp: model_data_sources_var_samp_order_by
  variance: model_data_sources_variance_order_by
}

"""
input type for inserting array relation for remote table "model_data_sources"
"""
input model_data_sources_arr_rel_insert_input {
  data: [model_data_sources_insert_input!]!
  on_conflict: model_data_sources_on_conflict
}

"""aggregate avg on columns"""
type model_data_sources_avg_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by avg() on columns of table "model_data_sources"
"""
input model_data_sources_avg_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""
Boolean expression to filter rows from the table "model_data_sources". All fields are combined with a logical 'AND'.
"""
input model_data_sources_bool_exp {
  _and: [model_data_sources_bool_exp]
  _not: model_data_sources_bool_exp
  _or: [model_data_sources_bool_exp]
  dataSourceVersion: data_source_versions_bool_exp
  dataSourceVersionId: Int_comparison_exp
  model: models_bool_exp
  modelId: Int_comparison_exp
  orgDataSource: org_data_sources_bool_exp
  org_data_source_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "model_data_sources"
"""
enum model_data_sources_constraint {
  """unique or primary key constraint"""
  model_data_sources_pkey
}

"""
input type for incrementing integer column in table "model_data_sources"
"""
input model_data_sources_inc_input {
  dataSourceVersionId: Int
  modelId: Int
  org_data_source_id: Int
}

"""
input type for inserting data into table "model_data_sources"
"""
input model_data_sources_insert_input {
  dataSourceVersion: data_source_versions_obj_rel_insert_input
  dataSourceVersionId: Int
  model: models_obj_rel_insert_input
  modelId: Int
  orgDataSource: org_data_sources_obj_rel_insert_input
  org_data_source_id: Int
}

"""aggregate max on columns"""
type model_data_sources_max_fields {
  dataSourceVersionId: Int
  modelId: Int
  org_data_source_id: Int
}

"""
order by max() on columns of table "model_data_sources"
"""
input model_data_sources_max_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate min on columns"""
type model_data_sources_min_fields {
  dataSourceVersionId: Int
  modelId: Int
  org_data_source_id: Int
}

"""
order by min() on columns of table "model_data_sources"
"""
input model_data_sources_min_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""
response of any mutation on the table "model_data_sources"
"""
type model_data_sources_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [model_data_sources!]!
}

"""
input type for inserting object relation for remote table "model_data_sources"
"""
input model_data_sources_obj_rel_insert_input {
  data: model_data_sources_insert_input!
  on_conflict: model_data_sources_on_conflict
}

"""
on conflict condition type for table "model_data_sources"
"""
input model_data_sources_on_conflict {
  constraint: model_data_sources_constraint!
  update_columns: [model_data_sources_update_column!]!
  where: model_data_sources_bool_exp
}

"""
ordering options when selecting data from "model_data_sources"
"""
input model_data_sources_order_by {
  dataSourceVersion: data_source_versions_order_by
  dataSourceVersionId: order_by
  model: models_order_by
  modelId: order_by
  orgDataSource: org_data_sources_order_by
  org_data_source_id: order_by
}

"""
primary key columns input for table: "model_data_sources"
"""
input model_data_sources_pk_columns_input {
  dataSourceVersionId: Int!
  modelId: Int!
}

"""
select columns of table "model_data_sources"
"""
enum model_data_sources_select_column {
  """column name"""
  dataSourceVersionId

  """column name"""
  modelId

  """column name"""
  org_data_source_id
}

"""
input type for updating data in table "model_data_sources"
"""
input model_data_sources_set_input {
  dataSourceVersionId: Int
  modelId: Int
  org_data_source_id: Int
}

"""aggregate stddev on columns"""
type model_data_sources_stddev_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by stddev() on columns of table "model_data_sources"
"""
input model_data_sources_stddev_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate stddev_pop on columns"""
type model_data_sources_stddev_pop_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by stddev_pop() on columns of table "model_data_sources"
"""
input model_data_sources_stddev_pop_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate stddev_samp on columns"""
type model_data_sources_stddev_samp_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by stddev_samp() on columns of table "model_data_sources"
"""
input model_data_sources_stddev_samp_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate sum on columns"""
type model_data_sources_sum_fields {
  dataSourceVersionId: Int
  modelId: Int
  org_data_source_id: Int
}

"""
order by sum() on columns of table "model_data_sources"
"""
input model_data_sources_sum_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""
update columns of table "model_data_sources"
"""
enum model_data_sources_update_column {
  """column name"""
  dataSourceVersionId

  """column name"""
  modelId

  """column name"""
  org_data_source_id
}

"""aggregate var_pop on columns"""
type model_data_sources_var_pop_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by var_pop() on columns of table "model_data_sources"
"""
input model_data_sources_var_pop_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate var_samp on columns"""
type model_data_sources_var_samp_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by var_samp() on columns of table "model_data_sources"
"""
input model_data_sources_var_samp_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""aggregate variance on columns"""
type model_data_sources_variance_fields {
  dataSourceVersionId: Float
  modelId: Float
  org_data_source_id: Float
}

"""
order by variance() on columns of table "model_data_sources"
"""
input model_data_sources_variance_order_by {
  dataSourceVersionId: order_by
  modelId: order_by
  org_data_source_id: order_by
}

"""
columns and relationships of "model_metrics"
"""
type model_metrics {
  """An object relationship"""
  metric: org_metrics_current_view
  metricId: bigint!

  """An object relationship"""
  metricVersion: metric_versions!
  metricVersionId: bigint!

  """An object relationship"""
  model: models!
  modelId: bigint!
}

"""
aggregated selection of "model_metrics"
"""
type model_metrics_aggregate {
  aggregate: model_metrics_aggregate_fields
  nodes: [model_metrics!]!
}

"""
aggregate fields of "model_metrics"
"""
type model_metrics_aggregate_fields {
  avg: model_metrics_avg_fields
  count(columns: [model_metrics_select_column!], distinct: Boolean): Int
  max: model_metrics_max_fields
  min: model_metrics_min_fields
  stddev: model_metrics_stddev_fields
  stddev_pop: model_metrics_stddev_pop_fields
  stddev_samp: model_metrics_stddev_samp_fields
  sum: model_metrics_sum_fields
  var_pop: model_metrics_var_pop_fields
  var_samp: model_metrics_var_samp_fields
  variance: model_metrics_variance_fields
}

"""
order by aggregate values of table "model_metrics"
"""
input model_metrics_aggregate_order_by {
  avg: model_metrics_avg_order_by
  count: order_by
  max: model_metrics_max_order_by
  min: model_metrics_min_order_by
  stddev: model_metrics_stddev_order_by
  stddev_pop: model_metrics_stddev_pop_order_by
  stddev_samp: model_metrics_stddev_samp_order_by
  sum: model_metrics_sum_order_by
  var_pop: model_metrics_var_pop_order_by
  var_samp: model_metrics_var_samp_order_by
  variance: model_metrics_variance_order_by
}

"""
input type for inserting array relation for remote table "model_metrics"
"""
input model_metrics_arr_rel_insert_input {
  data: [model_metrics_insert_input!]!
  on_conflict: model_metrics_on_conflict
}

"""aggregate avg on columns"""
type model_metrics_avg_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by avg() on columns of table "model_metrics"
"""
input model_metrics_avg_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""
Boolean expression to filter rows from the table "model_metrics". All fields are combined with a logical 'AND'.
"""
input model_metrics_bool_exp {
  _and: [model_metrics_bool_exp]
  _not: model_metrics_bool_exp
  _or: [model_metrics_bool_exp]
  metric: org_metrics_current_view_bool_exp
  metricId: bigint_comparison_exp
  metricVersion: metric_versions_bool_exp
  metricVersionId: bigint_comparison_exp
  model: models_bool_exp
  modelId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "model_metrics"
"""
enum model_metrics_constraint {
  """unique or primary key constraint"""
  model_metrics_org_metric_id_model_id_key

  """unique or primary key constraint"""
  model_metrics_pkey
}

"""
input type for incrementing integer column in table "model_metrics"
"""
input model_metrics_inc_input {
  metricId: bigint
  metricVersionId: bigint
  modelId: bigint
}

"""
input type for inserting data into table "model_metrics"
"""
input model_metrics_insert_input {
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: bigint
  metricVersion: metric_versions_obj_rel_insert_input
  metricVersionId: bigint
  model: models_obj_rel_insert_input
  modelId: bigint
}

"""aggregate max on columns"""
type model_metrics_max_fields {
  metricId: bigint
  metricVersionId: bigint
  modelId: bigint
}

"""
order by max() on columns of table "model_metrics"
"""
input model_metrics_max_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate min on columns"""
type model_metrics_min_fields {
  metricId: bigint
  metricVersionId: bigint
  modelId: bigint
}

"""
order by min() on columns of table "model_metrics"
"""
input model_metrics_min_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""
response of any mutation on the table "model_metrics"
"""
type model_metrics_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [model_metrics!]!
}

"""
input type for inserting object relation for remote table "model_metrics"
"""
input model_metrics_obj_rel_insert_input {
  data: model_metrics_insert_input!
  on_conflict: model_metrics_on_conflict
}

"""
on conflict condition type for table "model_metrics"
"""
input model_metrics_on_conflict {
  constraint: model_metrics_constraint!
  update_columns: [model_metrics_update_column!]!
  where: model_metrics_bool_exp
}

"""
ordering options when selecting data from "model_metrics"
"""
input model_metrics_order_by {
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metricVersion: metric_versions_order_by
  metricVersionId: order_by
  model: models_order_by
  modelId: order_by
}

"""
primary key columns input for table: "model_metrics"
"""
input model_metrics_pk_columns_input {
  metricId: bigint!
  metricVersionId: bigint!
  modelId: bigint!
}

"""
select columns of table "model_metrics"
"""
enum model_metrics_select_column {
  """column name"""
  metricId

  """column name"""
  metricVersionId

  """column name"""
  modelId
}

"""
input type for updating data in table "model_metrics"
"""
input model_metrics_set_input {
  metricId: bigint
  metricVersionId: bigint
  modelId: bigint
}

"""aggregate stddev on columns"""
type model_metrics_stddev_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by stddev() on columns of table "model_metrics"
"""
input model_metrics_stddev_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate stddev_pop on columns"""
type model_metrics_stddev_pop_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by stddev_pop() on columns of table "model_metrics"
"""
input model_metrics_stddev_pop_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate stddev_samp on columns"""
type model_metrics_stddev_samp_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by stddev_samp() on columns of table "model_metrics"
"""
input model_metrics_stddev_samp_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate sum on columns"""
type model_metrics_sum_fields {
  metricId: bigint
  metricVersionId: bigint
  modelId: bigint
}

"""
order by sum() on columns of table "model_metrics"
"""
input model_metrics_sum_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""
update columns of table "model_metrics"
"""
enum model_metrics_update_column {
  """column name"""
  metricId

  """column name"""
  metricVersionId

  """column name"""
  modelId
}

"""aggregate var_pop on columns"""
type model_metrics_var_pop_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by var_pop() on columns of table "model_metrics"
"""
input model_metrics_var_pop_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate var_samp on columns"""
type model_metrics_var_samp_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by var_samp() on columns of table "model_metrics"
"""
input model_metrics_var_samp_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""aggregate variance on columns"""
type model_metrics_variance_fields {
  metricId: Float
  metricVersionId: Float
  modelId: Float
}

"""
order by variance() on columns of table "model_metrics"
"""
input model_metrics_variance_order_by {
  metricId: order_by
  metricVersionId: order_by
  modelId: order_by
}

"""
Represents a metrics config upload event. The whole state of an organization's model can be browsed at this point in time.


columns and relationships of "models"

"""
type models {
  createdAt: timestamptz!

  """An array relationship"""
  dataSources(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): [model_data_sources!]!

  """An aggregated array relationship"""
  dataSources_aggregate(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): model_data_sources_aggregate!
  executionContext: String
  gitBranch: String!
  gitCommit: String!
  gitIsDirty: Boolean!
  gitRepo: String!
  id: bigint!
  isCurrent: Boolean

  """An array relationship"""
  metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """An aggregated array relationship"""
  metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """An array relationship"""
  modelMetrics(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): [model_metrics!]!

  """An aggregated array relationship"""
  modelMetrics_aggregate(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): model_metrics_aggregate!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  uploader: users!
  uploaderId: Int!
}

"""
aggregated selection of "models"
"""
type models_aggregate {
  aggregate: models_aggregate_fields
  nodes: [models!]!
}

"""
aggregate fields of "models"
"""
type models_aggregate_fields {
  avg: models_avg_fields
  count(columns: [models_select_column!], distinct: Boolean): Int
  max: models_max_fields
  min: models_min_fields
  stddev: models_stddev_fields
  stddev_pop: models_stddev_pop_fields
  stddev_samp: models_stddev_samp_fields
  sum: models_sum_fields
  var_pop: models_var_pop_fields
  var_samp: models_var_samp_fields
  variance: models_variance_fields
}

"""
order by aggregate values of table "models"
"""
input models_aggregate_order_by {
  avg: models_avg_order_by
  count: order_by
  max: models_max_order_by
  min: models_min_order_by
  stddev: models_stddev_order_by
  stddev_pop: models_stddev_pop_order_by
  stddev_samp: models_stddev_samp_order_by
  sum: models_sum_order_by
  var_pop: models_var_pop_order_by
  var_samp: models_var_samp_order_by
  variance: models_variance_order_by
}

"""
input type for inserting array relation for remote table "models"
"""
input models_arr_rel_insert_input {
  data: [models_insert_input!]!
  on_conflict: models_on_conflict
}

"""aggregate avg on columns"""
type models_avg_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by avg() on columns of table "models"
"""
input models_avg_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""
Boolean expression to filter rows from the table "models". All fields are combined with a logical 'AND'.
"""
input models_bool_exp {
  _and: [models_bool_exp]
  _not: models_bool_exp
  _or: [models_bool_exp]
  createdAt: timestamptz_comparison_exp
  dataSources: model_data_sources_bool_exp
  executionContext: String_comparison_exp
  gitBranch: String_comparison_exp
  gitCommit: String_comparison_exp
  gitIsDirty: Boolean_comparison_exp
  gitRepo: String_comparison_exp
  id: bigint_comparison_exp
  isCurrent: Boolean_comparison_exp
  metrics: org_metrics_current_view_bool_exp
  modelMetrics: model_metrics_bool_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  uploader: users_bool_exp
  uploaderId: Int_comparison_exp
}

"""
unique or primary key constraints on table "models"
"""
enum models_constraint {
  """unique or primary key constraint"""
  models_pkey
}

"""
input type for incrementing integer column in table "models"
"""
input models_inc_input {
  id: bigint
  organizationId: Int
  uploaderId: Int
}

"""
input type for inserting data into table "models"
"""
input models_insert_input {
  createdAt: timestamptz
  dataSources: model_data_sources_arr_rel_insert_input
  executionContext: String
  gitBranch: String
  gitCommit: String
  gitIsDirty: Boolean
  gitRepo: String
  id: bigint
  isCurrent: Boolean
  metrics: org_metrics_current_view_arr_rel_insert_input
  modelMetrics: model_metrics_arr_rel_insert_input
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  uploader: users_obj_rel_insert_input
  uploaderId: Int
}

"""aggregate max on columns"""
type models_max_fields {
  createdAt: timestamptz
  executionContext: String
  gitBranch: String
  gitCommit: String
  gitRepo: String
  id: bigint
  organizationId: Int
  uploaderId: Int
}

"""
order by max() on columns of table "models"
"""
input models_max_order_by {
  createdAt: order_by
  executionContext: order_by
  gitBranch: order_by
  gitCommit: order_by
  gitRepo: order_by
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate min on columns"""
type models_min_fields {
  createdAt: timestamptz
  executionContext: String
  gitBranch: String
  gitCommit: String
  gitRepo: String
  id: bigint
  organizationId: Int
  uploaderId: Int
}

"""
order by min() on columns of table "models"
"""
input models_min_order_by {
  createdAt: order_by
  executionContext: order_by
  gitBranch: order_by
  gitCommit: order_by
  gitRepo: order_by
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""
response of any mutation on the table "models"
"""
type models_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [models!]!
}

"""
input type for inserting object relation for remote table "models"
"""
input models_obj_rel_insert_input {
  data: models_insert_input!
  on_conflict: models_on_conflict
}

"""
on conflict condition type for table "models"
"""
input models_on_conflict {
  constraint: models_constraint!
  update_columns: [models_update_column!]!
  where: models_bool_exp
}

"""
ordering options when selecting data from "models"
"""
input models_order_by {
  createdAt: order_by
  dataSources_aggregate: model_data_sources_aggregate_order_by
  executionContext: order_by
  gitBranch: order_by
  gitCommit: order_by
  gitIsDirty: order_by
  gitRepo: order_by
  id: order_by
  isCurrent: order_by
  metrics_aggregate: org_metrics_current_view_aggregate_order_by
  modelMetrics_aggregate: model_metrics_aggregate_order_by
  organization: organizations_order_by
  organizationId: order_by
  uploader: users_order_by
  uploaderId: order_by
}

"""
primary key columns input for table: "models"
"""
input models_pk_columns_input {
  id: bigint!
}

"""
select columns of table "models"
"""
enum models_select_column {
  """column name"""
  createdAt

  """column name"""
  executionContext

  """column name"""
  gitBranch

  """column name"""
  gitCommit

  """column name"""
  gitIsDirty

  """column name"""
  gitRepo

  """column name"""
  id

  """column name"""
  isCurrent

  """column name"""
  organizationId

  """column name"""
  uploaderId
}

"""
input type for updating data in table "models"
"""
input models_set_input {
  createdAt: timestamptz
  executionContext: String
  gitBranch: String
  gitCommit: String
  gitIsDirty: Boolean
  gitRepo: String
  id: bigint
  isCurrent: Boolean
  organizationId: Int
  uploaderId: Int
}

"""aggregate stddev on columns"""
type models_stddev_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by stddev() on columns of table "models"
"""
input models_stddev_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate stddev_pop on columns"""
type models_stddev_pop_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by stddev_pop() on columns of table "models"
"""
input models_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate stddev_samp on columns"""
type models_stddev_samp_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by stddev_samp() on columns of table "models"
"""
input models_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate sum on columns"""
type models_sum_fields {
  id: bigint
  organizationId: Int
  uploaderId: Int
}

"""
order by sum() on columns of table "models"
"""
input models_sum_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""
update columns of table "models"
"""
enum models_update_column {
  """column name"""
  createdAt

  """column name"""
  executionContext

  """column name"""
  gitBranch

  """column name"""
  gitCommit

  """column name"""
  gitIsDirty

  """column name"""
  gitRepo

  """column name"""
  id

  """column name"""
  isCurrent

  """column name"""
  organizationId

  """column name"""
  uploaderId
}

"""aggregate var_pop on columns"""
type models_var_pop_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by var_pop() on columns of table "models"
"""
input models_var_pop_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate var_samp on columns"""
type models_var_samp_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by var_samp() on columns of table "models"
"""
input models_var_samp_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""aggregate variance on columns"""
type models_variance_fields {
  id: Float
  organizationId: Float
  uploaderId: Float
}

"""
order by variance() on columns of table "models"
"""
input models_variance_order_by {
  id: order_by
  organizationId: order_by
  uploaderId: order_by
}

"""
Healthy MQL servers send liveness checks to Transform to help us keep the service running smoothly


columns and relationships of "mql_heartbeats"

"""
type mql_heartbeats {
  createdAt: timestamptz!
  details(
    """JSON select path"""
    path: String
  ): json
  id: Int!

  """An object relationship"""
  mqlServer: org_mql_servers
  mqlServerid: Int

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  status: String!

  """An object relationship"""
  user: users!
  userId: Int!
  versionSha: String!
}

"""
aggregated selection of "mql_heartbeats"
"""
type mql_heartbeats_aggregate {
  aggregate: mql_heartbeats_aggregate_fields
  nodes: [mql_heartbeats!]!
}

"""
aggregate fields of "mql_heartbeats"
"""
type mql_heartbeats_aggregate_fields {
  avg: mql_heartbeats_avg_fields
  count(columns: [mql_heartbeats_select_column!], distinct: Boolean): Int
  max: mql_heartbeats_max_fields
  min: mql_heartbeats_min_fields
  stddev: mql_heartbeats_stddev_fields
  stddev_pop: mql_heartbeats_stddev_pop_fields
  stddev_samp: mql_heartbeats_stddev_samp_fields
  sum: mql_heartbeats_sum_fields
  var_pop: mql_heartbeats_var_pop_fields
  var_samp: mql_heartbeats_var_samp_fields
  variance: mql_heartbeats_variance_fields
}

"""
order by aggregate values of table "mql_heartbeats"
"""
input mql_heartbeats_aggregate_order_by {
  avg: mql_heartbeats_avg_order_by
  count: order_by
  max: mql_heartbeats_max_order_by
  min: mql_heartbeats_min_order_by
  stddev: mql_heartbeats_stddev_order_by
  stddev_pop: mql_heartbeats_stddev_pop_order_by
  stddev_samp: mql_heartbeats_stddev_samp_order_by
  sum: mql_heartbeats_sum_order_by
  var_pop: mql_heartbeats_var_pop_order_by
  var_samp: mql_heartbeats_var_samp_order_by
  variance: mql_heartbeats_variance_order_by
}

"""
input type for inserting array relation for remote table "mql_heartbeats"
"""
input mql_heartbeats_arr_rel_insert_input {
  data: [mql_heartbeats_insert_input!]!
  on_conflict: mql_heartbeats_on_conflict
}

"""aggregate avg on columns"""
type mql_heartbeats_avg_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by avg() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_avg_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "mql_heartbeats". All fields are combined with a logical 'AND'.
"""
input mql_heartbeats_bool_exp {
  _and: [mql_heartbeats_bool_exp]
  _not: mql_heartbeats_bool_exp
  _or: [mql_heartbeats_bool_exp]
  createdAt: timestamptz_comparison_exp
  details: json_comparison_exp
  id: Int_comparison_exp
  mqlServer: org_mql_servers_bool_exp
  mqlServerid: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  status: String_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
  versionSha: String_comparison_exp
}

"""
unique or primary key constraints on table "mql_heartbeats"
"""
enum mql_heartbeats_constraint {
  """unique or primary key constraint"""
  mql_heartbeats_pkey
}

"""
input type for incrementing integer column in table "mql_heartbeats"
"""
input mql_heartbeats_inc_input {
  id: Int
  mqlServerid: Int
  organizationId: Int
  userId: Int
}

"""
input type for inserting data into table "mql_heartbeats"
"""
input mql_heartbeats_insert_input {
  createdAt: timestamptz
  details: json
  id: Int
  mqlServer: org_mql_servers_obj_rel_insert_input
  mqlServerid: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  status: String
  user: users_obj_rel_insert_input
  userId: Int
  versionSha: String
}

"""aggregate max on columns"""
type mql_heartbeats_max_fields {
  createdAt: timestamptz
  id: Int
  mqlServerid: Int
  organizationId: Int
  status: String
  userId: Int
  versionSha: String
}

"""
order by max() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_max_order_by {
  createdAt: order_by
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  status: order_by
  userId: order_by
  versionSha: order_by
}

"""aggregate min on columns"""
type mql_heartbeats_min_fields {
  createdAt: timestamptz
  id: Int
  mqlServerid: Int
  organizationId: Int
  status: String
  userId: Int
  versionSha: String
}

"""
order by min() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_min_order_by {
  createdAt: order_by
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  status: order_by
  userId: order_by
  versionSha: order_by
}

"""
response of any mutation on the table "mql_heartbeats"
"""
type mql_heartbeats_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [mql_heartbeats!]!
}

"""
input type for inserting object relation for remote table "mql_heartbeats"
"""
input mql_heartbeats_obj_rel_insert_input {
  data: mql_heartbeats_insert_input!
  on_conflict: mql_heartbeats_on_conflict
}

"""
on conflict condition type for table "mql_heartbeats"
"""
input mql_heartbeats_on_conflict {
  constraint: mql_heartbeats_constraint!
  update_columns: [mql_heartbeats_update_column!]!
  where: mql_heartbeats_bool_exp
}

"""
ordering options when selecting data from "mql_heartbeats"
"""
input mql_heartbeats_order_by {
  createdAt: order_by
  details: order_by
  id: order_by
  mqlServer: org_mql_servers_order_by
  mqlServerid: order_by
  organization: organizations_order_by
  organizationId: order_by
  status: order_by
  user: users_order_by
  userId: order_by
  versionSha: order_by
}

"""
primary key columns input for table: "mql_heartbeats"
"""
input mql_heartbeats_pk_columns_input {
  id: Int!
}

"""
select columns of table "mql_heartbeats"
"""
enum mql_heartbeats_select_column {
  """column name"""
  createdAt

  """column name"""
  details

  """column name"""
  id

  """column name"""
  mqlServerid

  """column name"""
  organizationId

  """column name"""
  status

  """column name"""
  userId

  """column name"""
  versionSha
}

"""
input type for updating data in table "mql_heartbeats"
"""
input mql_heartbeats_set_input {
  createdAt: timestamptz
  details: json
  id: Int
  mqlServerid: Int
  organizationId: Int
  status: String
  userId: Int
  versionSha: String
}

"""aggregate stddev on columns"""
type mql_heartbeats_stddev_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_stddev_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type mql_heartbeats_stddev_pop_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_stddev_pop_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type mql_heartbeats_stddev_samp_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_stddev_samp_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type mql_heartbeats_sum_fields {
  id: Int
  mqlServerid: Int
  organizationId: Int
  userId: Int
}

"""
order by sum() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_sum_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""
update columns of table "mql_heartbeats"
"""
enum mql_heartbeats_update_column {
  """column name"""
  createdAt

  """column name"""
  details

  """column name"""
  id

  """column name"""
  mqlServerid

  """column name"""
  organizationId

  """column name"""
  status

  """column name"""
  userId

  """column name"""
  versionSha
}

"""aggregate var_pop on columns"""
type mql_heartbeats_var_pop_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_var_pop_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type mql_heartbeats_var_samp_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_var_samp_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type mql_heartbeats_variance_fields {
  id: Float
  mqlServerid: Float
  organizationId: Float
  userId: Float
}

"""
order by variance() on columns of table "mql_heartbeats"
"""
input mql_heartbeats_variance_order_by {
  id: order_by
  mqlServerid: order_by
  organizationId: order_by
  userId: order_by
}

"""mutation root"""
type mutation_root {
  """
  insert a single row into the table: "metric_collection_metrics"
  """
  addMetricCollectionMetric(
    """the row to be inserted"""
    object: metric_collection_metrics_insert_input!

    """on conflict condition"""
    on_conflict: metric_collection_metrics_on_conflict
  ): metric_collection_metrics

  """
  insert data into the table: "metric_collection_metrics"
  """
  addMetricCollectionMetrics(
    """the rows to be inserted"""
    objects: [metric_collection_metrics_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_collection_metrics_on_conflict
  ): metric_collection_metrics_mutation_response

  """
  insert a single row into the table: "team_members"
  """
  addTeamMember(
    """the row to be inserted"""
    object: team_members_insert_input!

    """on conflict condition"""
    on_conflict: team_members_on_conflict
  ): team_members

  """
  insert data into the table: "team_members"
  """
  addTeamMembers(
    """the rows to be inserted"""
    objects: [team_members_insert_input!]!

    """on conflict condition"""
    on_conflict: team_members_on_conflict
  ): team_members_mutation_response

  """
  perform the action: "addUserRole"
  """
  addUserRole(input: AddUserRoleInput!): AddUserRoleOutput

  """
  insert a single row into the table: "metric_approvals"
  """
  approveMetric(
    """the row to be inserted"""
    object: metric_approvals_insert_input!

    """on conflict condition"""
    on_conflict: metric_approvals_on_conflict
  ): metric_approvals

  """
  insert data into the table: "metric_approvals"
  """
  approveMetrics(
    """the rows to be inserted"""
    objects: [metric_approvals_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_approvals_on_conflict
  ): metric_approvals_mutation_response

  """
  insert a single row into the table: "user_roles"
  """
  assignUserRole(
    """the row to be inserted"""
    object: user_roles_insert_input!

    """on conflict condition"""
    on_conflict: user_roles_on_conflict
  ): user_roles

  """
  insert data into the table: "user_roles"
  """
  assignUserRoles(
    """the rows to be inserted"""
    objects: [user_roles_insert_input!]!

    """on conflict condition"""
    on_conflict: user_roles_on_conflict
  ): user_roles_mutation_response

  """
  insert a single row into the table: "annotations"
  """
  createAnnotation(
    """the row to be inserted"""
    object: annotations_insert_input!

    """on conflict condition"""
    on_conflict: annotations_on_conflict
  ): annotations

  """
  insert data into the table: "annotations"
  """
  createAnnotations(
    """the rows to be inserted"""
    objects: [annotations_insert_input!]!

    """on conflict condition"""
    on_conflict: annotations_on_conflict
  ): annotations_mutation_response

  """
  perform the action: "createApiKey"
  """
  createApiKey: CreateApiKeyOutput

  """
  perform the action: "createApiKeyForUser"
  """
  createApiKeyForUser(input: CreateApiKeyForUserInput!): CreateApiKeyForUserOutput

  """
  insert a single row into the table: "dashboards"
  """
  createDashboard(
    """the row to be inserted"""
    object: dashboards_insert_input!

    """on conflict condition"""
    on_conflict: dashboards_on_conflict
  ): dashboards

  """
  insert a single row into the table: "dashboard_item_configs"
  """
  createDashboardItem(
    """the row to be inserted"""
    object: dashboard_item_configs_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_item_configs_on_conflict
  ): dashboard_item_configs

  """
  insert data into the table: "dashboard_item_configs"
  """
  createDashboardItems(
    """the rows to be inserted"""
    objects: [dashboard_item_configs_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_item_configs_on_conflict
  ): dashboard_item_configs_mutation_response

  """
  insert a single row into the table: "dashboard_sections"
  """
  createDashboardSection(
    """the row to be inserted"""
    object: dashboard_sections_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_sections_on_conflict
  ): dashboard_sections

  """
  insert data into the table: "dashboard_sections"
  """
  createDashboardSections(
    """the rows to be inserted"""
    objects: [dashboard_sections_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_sections_on_conflict
  ): dashboard_sections_mutation_response

  """
  insert data into the table: "dashboards"
  """
  createDashboards(
    """the rows to be inserted"""
    objects: [dashboards_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboards_on_conflict
  ): dashboards_mutation_response

  """
  insert a single row into the table: "features"
  """
  createFeature(
    """the row to be inserted"""
    object: features_insert_input!

    """on conflict condition"""
    on_conflict: features_on_conflict
  ): features

  """
  insert data into the table: "features"
  """
  createFeatures(
    """the rows to be inserted"""
    objects: [features_insert_input!]!

    """on conflict condition"""
    on_conflict: features_on_conflict
  ): features_mutation_response

  """
  insert a single row into the table: "metric_annotations"
  """
  createMetricAnnotation(
    """the row to be inserted"""
    object: metric_annotations_insert_input!

    """on conflict condition"""
    on_conflict: metric_annotations_on_conflict
  ): metric_annotations

  """
  insert data into the table: "metric_annotations"
  """
  createMetricAnnotations(
    """the rows to be inserted"""
    objects: [metric_annotations_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_annotations_on_conflict
  ): metric_annotations_mutation_response

  """
  insert a single row into the table: "metric_collections"
  """
  createMetricCollection(
    """the row to be inserted"""
    object: metric_collections_insert_input!

    """on conflict condition"""
    on_conflict: metric_collections_on_conflict
  ): metric_collections

  """
  insert a single row into the table: "metric_collection_view"
  """
  createMetricCollectionView(
    """the row to be inserted"""
    object: metric_collection_view_insert_input!

    """on conflict condition"""
    on_conflict: metric_collection_view_on_conflict
  ): metric_collection_view

  """
  insert data into the table: "metric_collection_view"
  """
  createMetricCollectionViews(
    """the rows to be inserted"""
    objects: [metric_collection_view_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_collection_view_on_conflict
  ): metric_collection_view_mutation_response

  """
  insert data into the table: "metric_collections"
  """
  createMetricCollections(
    """the rows to be inserted"""
    objects: [metric_collections_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_collections_on_conflict
  ): metric_collections_mutation_response

  """
  insert a single row into the table: "metric_descriptions"
  """
  createMetricDescription(
    """the row to be inserted"""
    object: metric_descriptions_insert_input!

    """on conflict condition"""
    on_conflict: metric_descriptions_on_conflict
  ): metric_descriptions

  """
  insert data into the table: "metric_descriptions"
  """
  createMetricDescriptions(
    """the rows to be inserted"""
    objects: [metric_descriptions_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_descriptions_on_conflict
  ): metric_descriptions_mutation_response

  """
  insert a single row into the table: "metric_team_owners"
  """
  createMetricTeamOwner(
    """the row to be inserted"""
    object: metric_team_owners_insert_input!

    """on conflict condition"""
    on_conflict: metric_team_owners_on_conflict
  ): metric_team_owners

  """
  insert data into the table: "metric_team_owners"
  """
  createMetricTeamOwners(
    """the rows to be inserted"""
    objects: [metric_team_owners_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_team_owners_on_conflict
  ): metric_team_owners_mutation_response

  """
  insert a single row into the table: "metric_user_owners"
  """
  createMetricUserOwner(
    """the row to be inserted"""
    object: metric_user_owners_insert_input!

    """on conflict condition"""
    on_conflict: metric_user_owners_on_conflict
  ): metric_user_owners

  """
  insert data into the table: "metric_user_owners"
  """
  createMetricUserOwners(
    """the rows to be inserted"""
    objects: [metric_user_owners_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_user_owners_on_conflict
  ): metric_user_owners_mutation_response

  """
  insert a single row into the table: "metric_view"
  """
  createMetricView(
    """the row to be inserted"""
    object: metric_view_insert_input!
  ): metric_view

  """
  insert data into the table: "metric_view"
  """
  createMetricViews(
    """the rows to be inserted"""
    objects: [metric_view_insert_input!]!
  ): metric_view_mutation_response

  """
  insert a single row into the table: "mql_heartbeats"
  """
  createMqlHeartbeat(
    """the row to be inserted"""
    object: mql_heartbeats_insert_input!

    """on conflict condition"""
    on_conflict: mql_heartbeats_on_conflict
  ): mql_heartbeats

  """
  insert data into the table: "mql_heartbeats"
  """
  createMqlHeartbeats(
    """the rows to be inserted"""
    objects: [mql_heartbeats_insert_input!]!

    """on conflict condition"""
    on_conflict: mql_heartbeats_on_conflict
  ): mql_heartbeats_mutation_response

  """
  insert a single row into the table: "org_mql_servers"
  """
  createOrgMqlServer(
    """the row to be inserted"""
    object: org_mql_servers_insert_input!

    """on conflict condition"""
    on_conflict: org_mql_servers_on_conflict
  ): org_mql_servers

  """
  insert data into the table: "org_mql_servers"
  """
  createOrgMqlServers(
    """the rows to be inserted"""
    objects: [org_mql_servers_insert_input!]!

    """on conflict condition"""
    on_conflict: org_mql_servers_on_conflict
  ): org_mql_servers_mutation_response

  """
  insert a single row into the table: "organizations"
  """
  createOrganization(
    """the row to be inserted"""
    object: organizations_insert_input!

    """on conflict condition"""
    on_conflict: organizations_on_conflict
  ): organizations

  """
  insert a single row into the table: "organization_features"
  """
  createOrganizationFeature(
    """the row to be inserted"""
    object: organization_features_insert_input!

    """on conflict condition"""
    on_conflict: organization_features_on_conflict
  ): organization_features

  """
  insert data into the table: "organization_features"
  """
  createOrganizationFeatures(
    """the rows to be inserted"""
    objects: [organization_features_insert_input!]!

    """on conflict condition"""
    on_conflict: organization_features_on_conflict
  ): organization_features_mutation_response

  """
  insert data into the table: "organizations"
  """
  createOrganizations(
    """the rows to be inserted"""
    objects: [organizations_insert_input!]!

    """on conflict condition"""
    on_conflict: organizations_on_conflict
  ): organizations_mutation_response

  """
  insert a single row into the table: "questions"
  """
  createQuestion(
    """the row to be inserted"""
    object: questions_insert_input!

    """on conflict condition"""
    on_conflict: questions_on_conflict
  ): questions

  """
  insert data into the table: "question_replies"
  """
  createQuestionReplies(
    """the rows to be inserted"""
    objects: [question_replies_insert_input!]!

    """on conflict condition"""
    on_conflict: question_replies_on_conflict
  ): question_replies_mutation_response

  """
  insert a single row into the table: "question_replies"
  """
  createQuestionReply(
    """the row to be inserted"""
    object: question_replies_insert_input!

    """on conflict condition"""
    on_conflict: question_replies_on_conflict
  ): question_replies

  """
  insert data into the table: "questions"
  """
  createQuestions(
    """the rows to be inserted"""
    objects: [questions_insert_input!]!

    """on conflict condition"""
    on_conflict: questions_on_conflict
  ): questions_mutation_response

  """
  insert data into the table: "saved_queries"
  """
  createSavedQueries(
    """the rows to be inserted"""
    objects: [saved_queries_insert_input!]!

    """on conflict condition"""
    on_conflict: saved_queries_on_conflict
  ): saved_queries_mutation_response

  """
  insert a single row into the table: "saved_queries"
  """
  createSavedQuery(
    """the row to be inserted"""
    object: saved_queries_insert_input!

    """on conflict condition"""
    on_conflict: saved_queries_on_conflict
  ): saved_queries

  """
  insert a single row into the table: "teams"
  """
  createTeam(
    """the row to be inserted"""
    object: teams_insert_input!

    """on conflict condition"""
    on_conflict: teams_on_conflict
  ): teams

  """
  insert a single row into the table: "team_dashboards"
  """
  createTeamDashboard(
    """the row to be inserted"""
    object: team_dashboards_insert_input!

    """on conflict condition"""
    on_conflict: team_dashboards_on_conflict
  ): team_dashboards

  """
  insert data into the table: "team_dashboards"
  """
  createTeamDashboards(
    """the rows to be inserted"""
    objects: [team_dashboards_insert_input!]!

    """on conflict condition"""
    on_conflict: team_dashboards_on_conflict
  ): team_dashboards_mutation_response

  """
  insert a single row into the table: "team_views"
  """
  createTeamView(
    """the row to be inserted"""
    object: team_views_insert_input!

    """on conflict condition"""
    on_conflict: team_views_on_conflict
  ): team_views

  """
  insert data into the table: "team_views"
  """
  createTeamViews(
    """the rows to be inserted"""
    objects: [team_views_insert_input!]!

    """on conflict condition"""
    on_conflict: team_views_on_conflict
  ): team_views_mutation_response

  """
  insert data into the table: "teams"
  """
  createTeams(
    """the rows to be inserted"""
    objects: [teams_insert_input!]!

    """on conflict condition"""
    on_conflict: teams_on_conflict
  ): teams_mutation_response

  """
  insert a single row into the table: "unsubscribes"
  """
  createUnsubscribe(
    """the row to be inserted"""
    object: unsubscribes_insert_input!

    """on conflict condition"""
    on_conflict: unsubscribes_on_conflict
  ): unsubscribes

  """
  insert data into the table: "unsubscribes"
  """
  createUnsubscribes(
    """the rows to be inserted"""
    objects: [unsubscribes_insert_input!]!

    """on conflict condition"""
    on_conflict: unsubscribes_on_conflict
  ): unsubscribes_mutation_response

  """
  perform the action: "createUser"
  """
  createUser(input: CreateUserInput!): CreateUserOutput

  """
  insert a single row into the table: "user_dashboards"
  """
  createUserDashboard(
    """the row to be inserted"""
    object: user_dashboards_insert_input!

    """on conflict condition"""
    on_conflict: user_dashboards_on_conflict
  ): user_dashboards

  """
  insert data into the table: "user_dashboards"
  """
  createUserDashboards(
    """the rows to be inserted"""
    objects: [user_dashboards_insert_input!]!

    """on conflict condition"""
    on_conflict: user_dashboards_on_conflict
  ): user_dashboards_mutation_response

  """
  insert a single row into the table: "user_features"
  """
  createUserFeature(
    """the row to be inserted"""
    object: user_features_insert_input!

    """on conflict condition"""
    on_conflict: user_features_on_conflict
  ): user_features

  """
  insert data into the table: "user_features"
  """
  createUserFeatures(
    """the rows to be inserted"""
    objects: [user_features_insert_input!]!

    """on conflict condition"""
    on_conflict: user_features_on_conflict
  ): user_features_mutation_response

  """
  perform the action: "createUserForOrg"
  """
  createUserForOrg(input: CreateUserForOrgInput!): CreateUserOutput

  """
  insert a single row into the table: "user_prefs"
  """
  createUserPreference(
    """the row to be inserted"""
    object: user_prefs_insert_input!

    """on conflict condition"""
    on_conflict: user_prefs_on_conflict
  ): user_prefs

  """
  insert data into the table: "user_prefs"
  """
  createUserPreferences(
    """the rows to be inserted"""
    objects: [user_prefs_insert_input!]!

    """on conflict condition"""
    on_conflict: user_prefs_on_conflict
  ): user_prefs_mutation_response

  """
  insert a single row into the table: "saved_query_metrics"
  """
  createdSavedQueryMetric(
    """the row to be inserted"""
    object: saved_query_metrics_insert_input!

    """on conflict condition"""
    on_conflict: saved_query_metrics_on_conflict
  ): saved_query_metrics

  """
  insert data into the table: "saved_query_metrics"
  """
  createdSavedQueryMetrics(
    """the rows to be inserted"""
    objects: [saved_query_metrics_insert_input!]!

    """on conflict condition"""
    on_conflict: saved_query_metrics_on_conflict
  ): saved_query_metrics_mutation_response

  """
  perform the action: "deactivateUser"
  """
  deactivateUser(input: DeactivateUserInput!): DeactivateUserOutput

  """
  delete single row from the table: "annotations"
  """
  deleteAnnotation(
    """ID field to identify an Annotation"""
    id: Int!
  ): annotations

  """
  delete data from the table: "annotations"
  """
  deleteAnnotations(
    """filter the rows which have to be deleted"""
    where: annotations_bool_exp!
  ): annotations_mutation_response

  """
  delete single row from the table: "dashboard_item_configs"
  """
  deleteDashboardItem(id: Int!): dashboard_item_configs

  """
  delete data from the table: "dashboard_item_configs"
  """
  deleteDashboardItems(
    """filter the rows which have to be deleted"""
    where: dashboard_item_configs_bool_exp!
  ): dashboard_item_configs_mutation_response

  """
  delete single row from the table: "dashboard_sections"
  """
  deleteDashboardSection(id: Int!): dashboard_sections

  """
  delete data from the table: "dashboard_sections"
  """
  deleteDashboardSections(
    """filter the rows which have to be deleted"""
    where: dashboard_sections_bool_exp!
  ): dashboard_sections_mutation_response

  """
  delete single row from the table: "features"
  """
  deleteFeature(id: Int!): features

  """
  delete data from the table: "features"
  """
  deleteFeatures(
    """filter the rows which have to be deleted"""
    where: features_bool_exp!
  ): features_mutation_response

  """
  delete single row from the table: "metric_annotations"
  """
  deleteMetricAnnotation(id: Int!): metric_annotations

  """
  delete data from the table: "metric_annotations"
  """
  deleteMetricAnnotations(
    """filter the rows which have to be deleted"""
    where: metric_annotations_bool_exp!
  ): metric_annotations_mutation_response

  """
  delete single row from the table: "metric_collections"
  """
  deleteMetricCollection(id: Int!): metric_collections

  """
  delete data from the table: "metric_collections"
  """
  deleteMetricCollections(
    """filter the rows which have to be deleted"""
    where: metric_collections_bool_exp!
  ): metric_collections_mutation_response

  """
  delete single row from the table: "metric_descriptions"
  """
  deleteMetricDescription(id: Int!): metric_descriptions

  """
  delete data from the table: "metric_descriptions"
  """
  deleteMetricDescriptions(
    """filter the rows which have to be deleted"""
    where: metric_descriptions_bool_exp!
  ): metric_descriptions_mutation_response

  """
  delete single row from the table: "metric_team_owners"
  """
  deleteMetricTeamOwner(id: Int!): metric_team_owners

  """
  delete data from the table: "metric_team_owners"
  """
  deleteMetricTeamOwners(
    """filter the rows which have to be deleted"""
    where: metric_team_owners_bool_exp!
  ): metric_team_owners_mutation_response

  """
  delete single row from the table: "metric_user_owners"
  """
  deleteMetricUserOwner(id: Int!): metric_user_owners

  """
  delete data from the table: "metric_user_owners"
  """
  deleteMetricUserOwners(
    """filter the rows which have to be deleted"""
    where: metric_user_owners_bool_exp!
  ): metric_user_owners_mutation_response

  """
  delete single row from the table: "org_mql_servers"
  """
  deleteOrgMqlServer(id: Int!): org_mql_servers

  """
  delete data from the table: "org_mql_servers"
  """
  deleteOrgMqlServers(
    """filter the rows which have to be deleted"""
    where: org_mql_servers_bool_exp!
  ): org_mql_servers_mutation_response

  """
  delete single row from the table: "organizations"
  """
  deleteOrganization(
    """A unique identifier for the `Organization`"""
    id: Int!
  ): organizations

  """
  delete single row from the table: "organization_features"
  """
  deleteOrganizationFeature(featureId: Int!, organizationId: Int!): organization_features

  """
  delete data from the table: "organization_features"
  """
  deleteOrganizationFeatures(
    """filter the rows which have to be deleted"""
    where: organization_features_bool_exp!
  ): organization_features_mutation_response

  """
  delete data from the table: "organizations"
  """
  deleteOrganizations(
    """filter the rows which have to be deleted"""
    where: organizations_bool_exp!
  ): organizations_mutation_response

  """
  delete data from the table: "question_replies"
  """
  deleteQuestionReplies(
    """filter the rows which have to be deleted"""
    where: question_replies_bool_exp!
  ): question_replies_mutation_response

  """
  delete single row from the table: "question_replies"
  """
  deleteQuestionReply(
    """A unique identifier for the Question Reply"""
    id: Int!
  ): question_replies

  """
  delete single row from the table: "saved_query_metrics"
  """
  deleteSavedQueryMetric(id: Int!): saved_query_metrics

  """
  delete data from the table: "saved_query_metrics"
  """
  deleteSavedQueryMetrics(
    """filter the rows which have to be deleted"""
    where: saved_query_metrics_bool_exp!
  ): saved_query_metrics_mutation_response

  """
  delete single row from the table: "team_dashboards"
  """
  deleteTeamDashboard(dashboardId: Int!, team_id: Int!): team_dashboards

  """
  delete data from the table: "team_dashboards"
  """
  deleteTeamDashboards(
    """filter the rows which have to be deleted"""
    where: team_dashboards_bool_exp!
  ): team_dashboards_mutation_response

  """
  delete single row from the table: "unsubscribes"
  """
  deleteUnsubscribe(id: Int!): unsubscribes

  """
  delete data from the table: "unsubscribes"
  """
  deleteUnsubscribes(
    """filter the rows which have to be deleted"""
    where: unsubscribes_bool_exp!
  ): unsubscribes_mutation_response

  """
  delete single row from the table: "user_dashboards"
  """
  deleteUserDashboard(dashboardId: Int!, userId: Int!): user_dashboards

  """
  delete data from the table: "user_dashboards"
  """
  deleteUserDashboards(
    """filter the rows which have to be deleted"""
    where: user_dashboards_bool_exp!
  ): user_dashboards_mutation_response

  """
  delete single row from the table: "user_features"
  """
  deleteUserFeature(featureId: Int!, userId: Int!): user_features

  """
  delete data from the table: "user_features"
  """
  deleteUserFeatures(
    """filter the rows which have to be deleted"""
    where: user_features_bool_exp!
  ): user_features_mutation_response

  """
  delete single row from the table: "user_prefs"
  """
  deleteUserPreference(id: Int!): user_prefs

  """
  delete data from the table: "user_prefs"
  """
  deleteUserPreferences(
    """filter the rows which have to be deleted"""
    where: user_prefs_bool_exp!
  ): user_prefs_mutation_response

  """
  delete single row from the table: "user_roles"
  """
  deleteUserRole(id: Int!): user_roles

  """
  delete data from the table: "user_roles"
  """
  deleteUserRoles(
    """filter the rows which have to be deleted"""
    where: user_roles_bool_exp!
  ): user_roles_mutation_response

  """
  delete data from the table: "api_keys"
  """
  delete_api_keys(
    """filter the rows which have to be deleted"""
    where: api_keys_bool_exp!
  ): api_keys_mutation_response

  """
  delete single row from the table: "api_keys"
  """
  delete_api_keys_by_pk(
    """
    The first few characters of the `ApiKey`. Useful for identifying the key without revealing it entirely.
    """
    prefix: String!
  ): api_keys

  """
  delete data from the table: "branch_metadatas"
  """
  delete_branch_metadatas(
    """filter the rows which have to be deleted"""
    where: branch_metadatas_bool_exp!
  ): branch_metadatas_mutation_response

  """
  delete single row from the table: "branch_metadatas"
  """
  delete_branch_metadatas_by_pk(id: Int!): branch_metadatas

  """
  delete data from the table: "dashboard_layouts"
  """
  delete_dashboard_layouts(
    """filter the rows which have to be deleted"""
    where: dashboard_layouts_bool_exp!
  ): dashboard_layouts_mutation_response

  """
  delete single row from the table: "dashboard_layouts"
  """
  delete_dashboard_layouts_by_pk(value: String!): dashboard_layouts

  """
  delete data from the table: "dashboard_renderable_types"
  """
  delete_dashboard_renderable_types(
    """filter the rows which have to be deleted"""
    where: dashboard_renderable_types_bool_exp!
  ): dashboard_renderable_types_mutation_response

  """
  delete single row from the table: "dashboard_renderable_types"
  """
  delete_dashboard_renderable_types_by_pk(value: String!): dashboard_renderable_types

  """
  delete data from the table: "dashboard_section_types"
  """
  delete_dashboard_section_types(
    """filter the rows which have to be deleted"""
    where: dashboard_section_types_bool_exp!
  ): dashboard_section_types_mutation_response

  """
  delete single row from the table: "dashboard_section_types"
  """
  delete_dashboard_section_types_by_pk(value: String!): dashboard_section_types

  """
  delete data from the table: "dashboards"
  """
  delete_dashboards(
    """filter the rows which have to be deleted"""
    where: dashboards_bool_exp!
  ): dashboards_mutation_response

  """
  delete single row from the table: "dashboards"
  """
  delete_dashboards_by_pk(id: Int!): dashboards

  """
  delete data from the table: "data_source_versions"
  """
  delete_data_source_versions(
    """filter the rows which have to be deleted"""
    where: data_source_versions_bool_exp!
  ): data_source_versions_mutation_response

  """
  delete single row from the table: "data_source_versions"
  """
  delete_data_source_versions_by_pk(id: Int!): data_source_versions

  """
  delete data from the table: "dw_engines"
  """
  delete_dw_engines(
    """filter the rows which have to be deleted"""
    where: dw_engines_bool_exp!
  ): dw_engines_mutation_response

  """
  delete single row from the table: "dw_engines"
  """
  delete_dw_engines_by_pk(value: String!): dw_engines

  """
  delete data from the table: "metric_collection_view"
  """
  delete_metric_collection_view(
    """filter the rows which have to be deleted"""
    where: metric_collection_view_bool_exp!
  ): metric_collection_view_mutation_response

  """
  delete single row from the table: "metric_collection_view"
  """
  delete_metric_collection_view_by_pk(id: Int!): metric_collection_view

  """
  delete data from the table: "metric_current_description"
  """
  delete_metric_current_description(
    """filter the rows which have to be deleted"""
    where: metric_current_description_bool_exp!
  ): metric_current_description_mutation_response

  """
  delete data from the table: "metric_lineage_data_sources"
  """
  delete_metric_lineage_data_sources(
    """filter the rows which have to be deleted"""
    where: metric_lineage_data_sources_bool_exp!
  ): metric_lineage_data_sources_mutation_response

  """
  delete single row from the table: "metric_lineage_data_sources"
  """
  delete_metric_lineage_data_sources_by_pk(id: Int!): metric_lineage_data_sources

  """
  delete data from the table: "metric_versions"
  """
  delete_metric_versions(
    """filter the rows which have to be deleted"""
    where: metric_versions_bool_exp!
  ): metric_versions_mutation_response

  """
  delete single row from the table: "metric_versions"
  """
  delete_metric_versions_by_pk(id: bigint!): metric_versions

  """
  delete data from the table: "metric_view"
  """
  delete_metric_view(
    """filter the rows which have to be deleted"""
    where: metric_view_bool_exp!
  ): metric_view_mutation_response

  """
  delete data from the table: "model_data_sources"
  """
  delete_model_data_sources(
    """filter the rows which have to be deleted"""
    where: model_data_sources_bool_exp!
  ): model_data_sources_mutation_response

  """
  delete single row from the table: "model_data_sources"
  """
  delete_model_data_sources_by_pk(dataSourceVersionId: Int!, modelId: Int!): model_data_sources

  """
  delete data from the table: "model_metrics"
  """
  delete_model_metrics(
    """filter the rows which have to be deleted"""
    where: model_metrics_bool_exp!
  ): model_metrics_mutation_response

  """
  delete single row from the table: "model_metrics"
  """
  delete_model_metrics_by_pk(metricId: bigint!, metricVersionId: bigint!, modelId: bigint!): model_metrics

  """
  delete data from the table: "models"
  """
  delete_models(
    """filter the rows which have to be deleted"""
    where: models_bool_exp!
  ): models_mutation_response

  """
  delete single row from the table: "models"
  """
  delete_models_by_pk(id: bigint!): models

  """
  delete data from the table: "mql_heartbeats"
  """
  delete_mql_heartbeats(
    """filter the rows which have to be deleted"""
    where: mql_heartbeats_bool_exp!
  ): mql_heartbeats_mutation_response

  """
  delete single row from the table: "mql_heartbeats"
  """
  delete_mql_heartbeats_by_pk(id: Int!): mql_heartbeats

  """
  delete data from the table: "org_data_sources"
  """
  delete_org_data_sources(
    """filter the rows which have to be deleted"""
    where: org_data_sources_bool_exp!
  ): org_data_sources_mutation_response

  """
  delete single row from the table: "org_data_sources"
  """
  delete_org_data_sources_by_pk(id: Int!): org_data_sources

  """
  delete data from the table: "org_metrics_current_view"
  """
  delete_org_metrics_current_view(
    """filter the rows which have to be deleted"""
    where: org_metrics_current_view_bool_exp!
  ): org_metrics_current_view_mutation_response

  """
  delete single row from the table: "org_metrics_current_view"
  """
  delete_org_metrics_current_view_by_pk(id: Int!): org_metrics_current_view

  """
  delete data from the table: "org_mql_server_logs_types"
  """
  delete_org_mql_server_logs_types(
    """filter the rows which have to be deleted"""
    where: org_mql_server_logs_types_bool_exp!
  ): org_mql_server_logs_types_mutation_response

  """
  delete single row from the table: "org_mql_server_logs_types"
  """
  delete_org_mql_server_logs_types_by_pk(value: String!): org_mql_server_logs_types

  """
  delete data from the table: "priorities"
  """
  delete_priorities(
    """filter the rows which have to be deleted"""
    where: priorities_bool_exp!
  ): priorities_mutation_response

  """
  delete single row from the table: "priorities"
  """
  delete_priorities_by_pk(value: String!): priorities

  """
  delete data from the table: "questions"
  """
  delete_questions(
    """filter the rows which have to be deleted"""
    where: questions_bool_exp!
  ): questions_mutation_response

  """
  delete single row from the table: "questions"
  """
  delete_questions_by_pk(
    """The primary key for the `Question`"""
    id: Int!
  ): questions

  """
  delete data from the table: "saved_queries"
  """
  delete_saved_queries(
    """filter the rows which have to be deleted"""
    where: saved_queries_bool_exp!
  ): saved_queries_mutation_response

  """
  delete single row from the table: "saved_queries"
  """
  delete_saved_queries_by_pk(id: Int!): saved_queries

  """
  delete data from the table: "team_page_theme_colors"
  """
  delete_team_page_theme_colors(
    """filter the rows which have to be deleted"""
    where: team_page_theme_colors_bool_exp!
  ): team_page_theme_colors_mutation_response

  """
  delete single row from the table: "team_page_theme_colors"
  """
  delete_team_page_theme_colors_by_pk(value: String!): team_page_theme_colors

  """
  delete data from the table: "team_views"
  """
  delete_team_views(
    """filter the rows which have to be deleted"""
    where: team_views_bool_exp!
  ): team_views_mutation_response

  """
  delete single row from the table: "team_views"
  """
  delete_team_views_by_pk(id: Int!): team_views

  """
  delete data from the table: "teams"
  """
  delete_teams(
    """filter the rows which have to be deleted"""
    where: teams_bool_exp!
  ): teams_mutation_response

  """
  delete single row from the table: "teams"
  """
  delete_teams_by_pk(
    """A unique identifier for a Team"""
    id: Int!
  ): teams

  """
  delete data from the table: "user_role_types"
  """
  delete_user_role_types(
    """filter the rows which have to be deleted"""
    where: user_role_types_bool_exp!
  ): user_role_types_mutation_response

  """
  delete single row from the table: "user_role_types"
  """
  delete_user_role_types_by_pk(value: String!): user_role_types

  """
  delete data from the table: "users"
  """
  delete_users(
    """filter the rows which have to be deleted"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  delete single row from the table: "users"
  """
  delete_users_by_pk(id: Int!): users

  """
  insert a single row into the table: "question_directed_to"
  """
  directQuestionTo(
    """the row to be inserted"""
    object: question_directed_to_insert_input!

    """on conflict condition"""
    on_conflict: question_directed_to_on_conflict
  ): question_directed_to

  """
  insert data into the table: "question_directed_to"
  """
  directQuestionToMultiple(
    """the rows to be inserted"""
    objects: [question_directed_to_insert_input!]!

    """on conflict condition"""
    on_conflict: question_directed_to_on_conflict
  ): question_directed_to_mutation_response

  """
  insert data into the table: "api_keys"
  """
  insert_api_keys(
    """the rows to be inserted"""
    objects: [api_keys_insert_input!]!

    """on conflict condition"""
    on_conflict: api_keys_on_conflict
  ): api_keys_mutation_response

  """
  insert a single row into the table: "api_keys"
  """
  insert_api_keys_one(
    """the row to be inserted"""
    object: api_keys_insert_input!

    """on conflict condition"""
    on_conflict: api_keys_on_conflict
  ): api_keys

  """
  insert data into the table: "branch_metadatas"
  """
  insert_branch_metadatas(
    """the rows to be inserted"""
    objects: [branch_metadatas_insert_input!]!

    """on conflict condition"""
    on_conflict: branch_metadatas_on_conflict
  ): branch_metadatas_mutation_response

  """
  insert a single row into the table: "branch_metadatas"
  """
  insert_branch_metadatas_one(
    """the row to be inserted"""
    object: branch_metadatas_insert_input!

    """on conflict condition"""
    on_conflict: branch_metadatas_on_conflict
  ): branch_metadatas

  """
  insert data into the table: "dashboard_layouts"
  """
  insert_dashboard_layouts(
    """the rows to be inserted"""
    objects: [dashboard_layouts_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_layouts_on_conflict
  ): dashboard_layouts_mutation_response

  """
  insert a single row into the table: "dashboard_layouts"
  """
  insert_dashboard_layouts_one(
    """the row to be inserted"""
    object: dashboard_layouts_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_layouts_on_conflict
  ): dashboard_layouts

  """
  insert data into the table: "dashboard_renderable_types"
  """
  insert_dashboard_renderable_types(
    """the rows to be inserted"""
    objects: [dashboard_renderable_types_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_renderable_types_on_conflict
  ): dashboard_renderable_types_mutation_response

  """
  insert a single row into the table: "dashboard_renderable_types"
  """
  insert_dashboard_renderable_types_one(
    """the row to be inserted"""
    object: dashboard_renderable_types_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_renderable_types_on_conflict
  ): dashboard_renderable_types

  """
  insert data into the table: "dashboard_section_types"
  """
  insert_dashboard_section_types(
    """the rows to be inserted"""
    objects: [dashboard_section_types_insert_input!]!

    """on conflict condition"""
    on_conflict: dashboard_section_types_on_conflict
  ): dashboard_section_types_mutation_response

  """
  insert a single row into the table: "dashboard_section_types"
  """
  insert_dashboard_section_types_one(
    """the row to be inserted"""
    object: dashboard_section_types_insert_input!

    """on conflict condition"""
    on_conflict: dashboard_section_types_on_conflict
  ): dashboard_section_types

  """
  insert data into the table: "data_source_versions"
  """
  insert_data_source_versions(
    """the rows to be inserted"""
    objects: [data_source_versions_insert_input!]!

    """on conflict condition"""
    on_conflict: data_source_versions_on_conflict
  ): data_source_versions_mutation_response

  """
  insert a single row into the table: "data_source_versions"
  """
  insert_data_source_versions_one(
    """the row to be inserted"""
    object: data_source_versions_insert_input!

    """on conflict condition"""
    on_conflict: data_source_versions_on_conflict
  ): data_source_versions

  """
  insert data into the table: "dw_engines"
  """
  insert_dw_engines(
    """the rows to be inserted"""
    objects: [dw_engines_insert_input!]!

    """on conflict condition"""
    on_conflict: dw_engines_on_conflict
  ): dw_engines_mutation_response

  """
  insert a single row into the table: "dw_engines"
  """
  insert_dw_engines_one(
    """the row to be inserted"""
    object: dw_engines_insert_input!

    """on conflict condition"""
    on_conflict: dw_engines_on_conflict
  ): dw_engines

  """
  insert data into the table: "metric_current_description"
  """
  insert_metric_current_description(
    """the rows to be inserted"""
    objects: [metric_current_description_insert_input!]!
  ): metric_current_description_mutation_response

  """
  insert a single row into the table: "metric_current_description"
  """
  insert_metric_current_description_one(
    """the row to be inserted"""
    object: metric_current_description_insert_input!
  ): metric_current_description

  """
  insert data into the table: "metric_lineage_data_sources"
  """
  insert_metric_lineage_data_sources(
    """the rows to be inserted"""
    objects: [metric_lineage_data_sources_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_lineage_data_sources_on_conflict
  ): metric_lineage_data_sources_mutation_response

  """
  insert a single row into the table: "metric_lineage_data_sources"
  """
  insert_metric_lineage_data_sources_one(
    """the row to be inserted"""
    object: metric_lineage_data_sources_insert_input!

    """on conflict condition"""
    on_conflict: metric_lineage_data_sources_on_conflict
  ): metric_lineage_data_sources

  """
  insert data into the table: "metric_versions"
  """
  insert_metric_versions(
    """the rows to be inserted"""
    objects: [metric_versions_insert_input!]!

    """on conflict condition"""
    on_conflict: metric_versions_on_conflict
  ): metric_versions_mutation_response

  """
  insert a single row into the table: "metric_versions"
  """
  insert_metric_versions_one(
    """the row to be inserted"""
    object: metric_versions_insert_input!

    """on conflict condition"""
    on_conflict: metric_versions_on_conflict
  ): metric_versions

  """
  insert data into the table: "model_data_sources"
  """
  insert_model_data_sources(
    """the rows to be inserted"""
    objects: [model_data_sources_insert_input!]!

    """on conflict condition"""
    on_conflict: model_data_sources_on_conflict
  ): model_data_sources_mutation_response

  """
  insert a single row into the table: "model_data_sources"
  """
  insert_model_data_sources_one(
    """the row to be inserted"""
    object: model_data_sources_insert_input!

    """on conflict condition"""
    on_conflict: model_data_sources_on_conflict
  ): model_data_sources

  """
  insert data into the table: "model_metrics"
  """
  insert_model_metrics(
    """the rows to be inserted"""
    objects: [model_metrics_insert_input!]!

    """on conflict condition"""
    on_conflict: model_metrics_on_conflict
  ): model_metrics_mutation_response

  """
  insert a single row into the table: "model_metrics"
  """
  insert_model_metrics_one(
    """the row to be inserted"""
    object: model_metrics_insert_input!

    """on conflict condition"""
    on_conflict: model_metrics_on_conflict
  ): model_metrics

  """
  insert data into the table: "models"
  """
  insert_models(
    """the rows to be inserted"""
    objects: [models_insert_input!]!

    """on conflict condition"""
    on_conflict: models_on_conflict
  ): models_mutation_response

  """
  insert a single row into the table: "models"
  """
  insert_models_one(
    """the row to be inserted"""
    object: models_insert_input!

    """on conflict condition"""
    on_conflict: models_on_conflict
  ): models

  """
  insert data into the table: "org_data_sources"
  """
  insert_org_data_sources(
    """the rows to be inserted"""
    objects: [org_data_sources_insert_input!]!

    """on conflict condition"""
    on_conflict: org_data_sources_on_conflict
  ): org_data_sources_mutation_response

  """
  insert a single row into the table: "org_data_sources"
  """
  insert_org_data_sources_one(
    """the row to be inserted"""
    object: org_data_sources_insert_input!

    """on conflict condition"""
    on_conflict: org_data_sources_on_conflict
  ): org_data_sources

  """
  insert data into the table: "org_metrics_current_view"
  """
  insert_org_metrics_current_view(
    """the rows to be inserted"""
    objects: [org_metrics_current_view_insert_input!]!

    """on conflict condition"""
    on_conflict: org_metrics_current_view_on_conflict
  ): org_metrics_current_view_mutation_response

  """
  insert a single row into the table: "org_metrics_current_view"
  """
  insert_org_metrics_current_view_one(
    """the row to be inserted"""
    object: org_metrics_current_view_insert_input!

    """on conflict condition"""
    on_conflict: org_metrics_current_view_on_conflict
  ): org_metrics_current_view

  """
  insert data into the table: "org_mql_server_logs_types"
  """
  insert_org_mql_server_logs_types(
    """the rows to be inserted"""
    objects: [org_mql_server_logs_types_insert_input!]!

    """on conflict condition"""
    on_conflict: org_mql_server_logs_types_on_conflict
  ): org_mql_server_logs_types_mutation_response

  """
  insert a single row into the table: "org_mql_server_logs_types"
  """
  insert_org_mql_server_logs_types_one(
    """the row to be inserted"""
    object: org_mql_server_logs_types_insert_input!

    """on conflict condition"""
    on_conflict: org_mql_server_logs_types_on_conflict
  ): org_mql_server_logs_types

  """
  insert data into the table: "priorities"
  """
  insert_priorities(
    """the rows to be inserted"""
    objects: [priorities_insert_input!]!

    """on conflict condition"""
    on_conflict: priorities_on_conflict
  ): priorities_mutation_response

  """
  insert a single row into the table: "priorities"
  """
  insert_priorities_one(
    """the row to be inserted"""
    object: priorities_insert_input!

    """on conflict condition"""
    on_conflict: priorities_on_conflict
  ): priorities

  """
  insert data into the table: "team_page_theme_colors"
  """
  insert_team_page_theme_colors(
    """the rows to be inserted"""
    objects: [team_page_theme_colors_insert_input!]!

    """on conflict condition"""
    on_conflict: team_page_theme_colors_on_conflict
  ): team_page_theme_colors_mutation_response

  """
  insert a single row into the table: "team_page_theme_colors"
  """
  insert_team_page_theme_colors_one(
    """the row to be inserted"""
    object: team_page_theme_colors_insert_input!

    """on conflict condition"""
    on_conflict: team_page_theme_colors_on_conflict
  ): team_page_theme_colors

  """
  insert data into the table: "user_role_types"
  """
  insert_user_role_types(
    """the rows to be inserted"""
    objects: [user_role_types_insert_input!]!

    """on conflict condition"""
    on_conflict: user_role_types_on_conflict
  ): user_role_types_mutation_response

  """
  insert a single row into the table: "user_role_types"
  """
  insert_user_role_types_one(
    """the row to be inserted"""
    object: user_role_types_insert_input!

    """on conflict condition"""
    on_conflict: user_role_types_on_conflict
  ): user_role_types

  """
  insert data into the table: "users"
  """
  insert_users(
    """the rows to be inserted"""
    objects: [users_insert_input!]!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users_mutation_response

  """
  insert a single row into the table: "users"
  """
  insert_users_one(
    """the row to be inserted"""
    object: users_insert_input!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users

  """
  insert a single row into the table: "question_likes"
  """
  likeQuestion(
    """the row to be inserted"""
    object: question_likes_insert_input!

    """on conflict condition"""
    on_conflict: question_likes_on_conflict
  ): question_likes

  """
  insert data into the table: "question_likes"
  """
  likeQuestions(
    """the rows to be inserted"""
    objects: [question_likes_insert_input!]!

    """on conflict condition"""
    on_conflict: question_likes_on_conflict
  ): question_likes_mutation_response
  logMqlLog(level: String, message: String, tags: [String!]): LogMQLLogs

  """
  perform the action: "reactivateUser"
  """
  reactivateUser(input: ReactivateUserInput!): ReactivateUserOutput

  """
  delete single row from the table: "question_directed_to"
  """
  removeDirectQuestionTo(
    """Unique identifier for a target to whom the Question is directed"""
    id: Int!
  ): question_directed_to

  """
  delete data from the table: "question_directed_to"
  """
  removeDirectQuestionToMultiple(
    """filter the rows which have to be deleted"""
    where: question_directed_to_bool_exp!
  ): question_directed_to_mutation_response

  """
  delete single row from the table: "metric_approvals"
  """
  removeMetricApproval(id: Int!): metric_approvals

  """
  delete data from the table: "metric_approvals"
  """
  removeMetricApprovals(
    """filter the rows which have to be deleted"""
    where: metric_approvals_bool_exp!
  ): metric_approvals_mutation_response

  """
  delete single row from the table: "metric_collection_metrics"
  """
  removeMetricCollectionMetric(id: Int!): metric_collection_metrics

  """
  delete data from the table: "metric_collection_metrics"
  """
  removeMetricCollectionMetrics(
    """filter the rows which have to be deleted"""
    where: metric_collection_metrics_bool_exp!
  ): metric_collection_metrics_mutation_response

  """
  delete single row from the table: "team_members"
  """
  removeTeamMember(id: Int!): team_members

  """
  delete data from the table: "team_members"
  """
  removeTeamMembers(
    """filter the rows which have to be deleted"""
    where: team_members_bool_exp!
  ): team_members_mutation_response

  """
  perform the action: "removeUserRole"
  """
  removeUserRole(input: RemoveUserRoleInput!): RemoveUserRoleOutput

  """
  delete single row from the table: "question_likes"
  """
  unlikeQuestion(
    """A primary identifier for the Question Like"""
    id: Int!
  ): question_likes

  """
  delete data from the table: "question_likes"
  """
  unlikeQuestions(
    """filter the rows which have to be deleted"""
    where: question_likes_bool_exp!
  ): question_likes_mutation_response

  """
  update single row of the table: "annotations"
  """
  updateAnnotation(
    """increments the integer columns with given value of the filtered values"""
    _inc: annotations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: annotations_set_input
    pk_columns: annotations_pk_columns_input!
  ): annotations

  """
  update data of the table: "annotations"
  """
  updateAnnotations(
    """increments the integer columns with given value of the filtered values"""
    _inc: annotations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: annotations_set_input

    """filter the rows which have to be updated"""
    where: annotations_bool_exp!
  ): annotations_mutation_response

  """
  update single row of the table: "api_keys"
  """
  updateApiKey(
    """increments the integer columns with given value of the filtered values"""
    _inc: api_keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: api_keys_set_input
    pk_columns: api_keys_pk_columns_input!
  ): api_keys

  """
  update data of the table: "api_keys"
  """
  updateApiKeys(
    """increments the integer columns with given value of the filtered values"""
    _inc: api_keys_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: api_keys_set_input

    """filter the rows which have to be updated"""
    where: api_keys_bool_exp!
  ): api_keys_mutation_response

  """
  update single row of the table: "dashboards"
  """
  updateDashboard(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboards_set_input
    pk_columns: dashboards_pk_columns_input!
  ): dashboards

  """
  update single row of the table: "dashboard_item_configs"
  """
  updateDashboardItem(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboard_item_configs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_item_configs_set_input
    pk_columns: dashboard_item_configs_pk_columns_input!
  ): dashboard_item_configs

  """
  update data of the table: "dashboard_item_configs"
  """
  updateDashboardItems(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboard_item_configs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_item_configs_set_input

    """filter the rows which have to be updated"""
    where: dashboard_item_configs_bool_exp!
  ): dashboard_item_configs_mutation_response

  """
  update single row of the table: "dashboard_sections"
  """
  updateDashboardSection(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboard_sections_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_sections_set_input
    pk_columns: dashboard_sections_pk_columns_input!
  ): dashboard_sections

  """
  update data of the table: "dashboard_sections"
  """
  updateDashboardSections(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboard_sections_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_sections_set_input

    """filter the rows which have to be updated"""
    where: dashboard_sections_bool_exp!
  ): dashboard_sections_mutation_response

  """
  update data of the table: "dashboards"
  """
  updateDashboards(
    """increments the integer columns with given value of the filtered values"""
    _inc: dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: dashboards_set_input

    """filter the rows which have to be updated"""
    where: dashboards_bool_exp!
  ): dashboards_mutation_response

  """
  update single row of the table: "features"
  """
  updateFeature(
    """increments the integer columns with given value of the filtered values"""
    _inc: features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: features_set_input
    pk_columns: features_pk_columns_input!
  ): features

  """
  update data of the table: "features"
  """
  updateFeatures(
    """increments the integer columns with given value of the filtered values"""
    _inc: features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: features_set_input

    """filter the rows which have to be updated"""
    where: features_bool_exp!
  ): features_mutation_response

  """
  update single row of the table: "metric_annotations"
  """
  updateMetricAnnotation(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_annotations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_annotations_set_input
    pk_columns: metric_annotations_pk_columns_input!
  ): metric_annotations

  """
  update data of the table: "metric_annotations"
  """
  updateMetricAnnotations(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_annotations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_annotations_set_input

    """filter the rows which have to be updated"""
    where: metric_annotations_bool_exp!
  ): metric_annotations_mutation_response

  """
  update single row of the table: "metric_collections"
  """
  updateMetricCollection(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collections_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collections_set_input
    pk_columns: metric_collections_pk_columns_input!
  ): metric_collections

  """
  update data of the table: "metric_collections"
  """
  updateMetricCollections(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collections_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collections_set_input

    """filter the rows which have to be updated"""
    where: metric_collections_bool_exp!
  ): metric_collections_mutation_response

  """
  perform the action: "updateMyEmail"
  """
  updateMyEmail(input: UpdateMyEmailInput!): UpdateMyEmailOutput

  """
  update single row of the table: "org_mql_servers"
  """
  updateOrgMqlServer(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_mql_servers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_mql_servers_set_input
    pk_columns: org_mql_servers_pk_columns_input!
  ): org_mql_servers

  """
  update data of the table: "org_mql_servers"
  """
  updateOrgMqlServers(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_mql_servers_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_mql_servers_set_input

    """filter the rows which have to be updated"""
    where: org_mql_servers_bool_exp!
  ): org_mql_servers_mutation_response

  """
  update single row of the table: "organizations"
  """
  updateOrganization(
    """increments the integer columns with given value of the filtered values"""
    _inc: organizations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: organizations_set_input
    pk_columns: organizations_pk_columns_input!
  ): organizations

  """
  update single row of the table: "organization_features"
  """
  updateOrganizationFeature(
    """increments the integer columns with given value of the filtered values"""
    _inc: organization_features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: organization_features_set_input
    pk_columns: organization_features_pk_columns_input!
  ): organization_features

  """
  update data of the table: "organization_features"
  """
  updateOrganizationFeatures(
    """increments the integer columns with given value of the filtered values"""
    _inc: organization_features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: organization_features_set_input

    """filter the rows which have to be updated"""
    where: organization_features_bool_exp!
  ): organization_features_mutation_response

  """
  update data of the table: "organizations"
  """
  updateOrganizations(
    """increments the integer columns with given value of the filtered values"""
    _inc: organizations_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: organizations_set_input

    """filter the rows which have to be updated"""
    where: organizations_bool_exp!
  ): organizations_mutation_response

  """
  update single row of the table: "questions"
  """
  updateQuestion(
    """increments the integer columns with given value of the filtered values"""
    _inc: questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_set_input
    pk_columns: questions_pk_columns_input!
  ): questions

  """
  update data of the table: "question_replies"
  """
  updateQuestionReplies(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_replies_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_replies_set_input

    """filter the rows which have to be updated"""
    where: question_replies_bool_exp!
  ): question_replies_mutation_response

  """
  update single row of the table: "question_replies"
  """
  updateQuestionReply(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_replies_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_replies_set_input
    pk_columns: question_replies_pk_columns_input!
  ): question_replies

  """
  update data of the table: "questions"
  """
  updateQuestions(
    """increments the integer columns with given value of the filtered values"""
    _inc: questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_set_input

    """filter the rows which have to be updated"""
    where: questions_bool_exp!
  ): questions_mutation_response

  """
  update data of the table: "saved_queries"
  """
  updateSavedQueries(
    """increments the integer columns with given value of the filtered values"""
    _inc: saved_queries_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: saved_queries_set_input

    """filter the rows which have to be updated"""
    where: saved_queries_bool_exp!
  ): saved_queries_mutation_response

  """
  update single row of the table: "saved_queries"
  """
  updateSavedQuery(
    """increments the integer columns with given value of the filtered values"""
    _inc: saved_queries_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: saved_queries_set_input
    pk_columns: saved_queries_pk_columns_input!
  ): saved_queries

  """
  update single row of the table: "teams"
  """
  updateTeam(
    """increments the integer columns with given value of the filtered values"""
    _inc: teams_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teams_set_input
    pk_columns: teams_pk_columns_input!
  ): teams

  """
  update single row of the table: "team_dashboards"
  """
  updateTeamDashboard(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_dashboards_set_input
    pk_columns: team_dashboards_pk_columns_input!
  ): team_dashboards

  """
  update data of the table: "team_dashboards"
  """
  updateTeamDashboards(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_dashboards_set_input

    """filter the rows which have to be updated"""
    where: team_dashboards_bool_exp!
  ): team_dashboards_mutation_response

  """
  update single row of the table: "team_members"
  """
  updateTeamMember(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_members_set_input
    pk_columns: team_members_pk_columns_input!
  ): team_members

  """
  update data of the table: "team_members"
  """
  updateTeamMembers(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_members_set_input

    """filter the rows which have to be updated"""
    where: team_members_bool_exp!
  ): team_members_mutation_response

  """
  update data of the table: "teams"
  """
  updateTeams(
    """increments the integer columns with given value of the filtered values"""
    _inc: teams_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: teams_set_input

    """filter the rows which have to be updated"""
    where: teams_bool_exp!
  ): teams_mutation_response

  """
  update single row of the table: "users"
  """
  updateUser(
    """increments the integer columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input
    pk_columns: users_pk_columns_input!
  ): users

  """
  update single row of the table: "user_dashboards"
  """
  updateUserDashboard(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_dashboards_set_input
    pk_columns: user_dashboards_pk_columns_input!
  ): user_dashboards

  """
  update data of the table: "user_dashboards"
  """
  updateUserDashboards(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_dashboards_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_dashboards_set_input

    """filter the rows which have to be updated"""
    where: user_dashboards_bool_exp!
  ): user_dashboards_mutation_response

  """
  perform the action: "updateUserEmailForOrg"
  """
  updateUserEmailForOrg(input: UpdateUserEmailForOrgInput!): UpdateUserEmailForOrgOutput

  """
  update single row of the table: "user_features"
  """
  updateUserFeature(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_features_set_input
    pk_columns: user_features_pk_columns_input!
  ): user_features

  """
  update data of the table: "user_features"
  """
  updateUserFeatures(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_features_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_features_set_input

    """filter the rows which have to be updated"""
    where: user_features_bool_exp!
  ): user_features_mutation_response

  """
  update single row of the table: "user_prefs"
  """
  updateUserPreference(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_prefs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_prefs_set_input
    pk_columns: user_prefs_pk_columns_input!
  ): user_prefs

  """
  update data of the table: "user_prefs"
  """
  updateUserPreferences(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_prefs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_prefs_set_input

    """filter the rows which have to be updated"""
    where: user_prefs_bool_exp!
  ): user_prefs_mutation_response

  """
  update single row of the table: "user_roles"
  """
  updateUserRole(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_roles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_roles_set_input
    pk_columns: user_roles_pk_columns_input!
  ): user_roles

  """
  update data of the table: "user_roles"
  """
  updateUserRoles(
    """increments the integer columns with given value of the filtered values"""
    _inc: user_roles_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_roles_set_input

    """filter the rows which have to be updated"""
    where: user_roles_bool_exp!
  ): user_roles_mutation_response

  """
  update data of the table: "users"
  """
  updateUsers(
    """increments the integer columns with given value of the filtered values"""
    _inc: users_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """filter the rows which have to be updated"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  update data of the table: "branch_metadatas"
  """
  update_branch_metadatas(
    """increments the integer columns with given value of the filtered values"""
    _inc: branch_metadatas_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: branch_metadatas_set_input

    """filter the rows which have to be updated"""
    where: branch_metadatas_bool_exp!
  ): branch_metadatas_mutation_response

  """
  update single row of the table: "branch_metadatas"
  """
  update_branch_metadatas_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: branch_metadatas_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: branch_metadatas_set_input
    pk_columns: branch_metadatas_pk_columns_input!
  ): branch_metadatas

  """
  update data of the table: "dashboard_layouts"
  """
  update_dashboard_layouts(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_layouts_set_input

    """filter the rows which have to be updated"""
    where: dashboard_layouts_bool_exp!
  ): dashboard_layouts_mutation_response

  """
  update single row of the table: "dashboard_layouts"
  """
  update_dashboard_layouts_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_layouts_set_input
    pk_columns: dashboard_layouts_pk_columns_input!
  ): dashboard_layouts

  """
  update data of the table: "dashboard_renderable_types"
  """
  update_dashboard_renderable_types(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_renderable_types_set_input

    """filter the rows which have to be updated"""
    where: dashboard_renderable_types_bool_exp!
  ): dashboard_renderable_types_mutation_response

  """
  update single row of the table: "dashboard_renderable_types"
  """
  update_dashboard_renderable_types_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_renderable_types_set_input
    pk_columns: dashboard_renderable_types_pk_columns_input!
  ): dashboard_renderable_types

  """
  update data of the table: "dashboard_section_types"
  """
  update_dashboard_section_types(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_section_types_set_input

    """filter the rows which have to be updated"""
    where: dashboard_section_types_bool_exp!
  ): dashboard_section_types_mutation_response

  """
  update single row of the table: "dashboard_section_types"
  """
  update_dashboard_section_types_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: dashboard_section_types_set_input
    pk_columns: dashboard_section_types_pk_columns_input!
  ): dashboard_section_types

  """
  update data of the table: "data_source_versions"
  """
  update_data_source_versions(
    """increments the integer columns with given value of the filtered values"""
    _inc: data_source_versions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_source_versions_set_input

    """filter the rows which have to be updated"""
    where: data_source_versions_bool_exp!
  ): data_source_versions_mutation_response

  """
  update single row of the table: "data_source_versions"
  """
  update_data_source_versions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: data_source_versions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_source_versions_set_input
    pk_columns: data_source_versions_pk_columns_input!
  ): data_source_versions

  """
  update data of the table: "dw_engines"
  """
  update_dw_engines(
    """sets the columns of the filtered rows to the given values"""
    _set: dw_engines_set_input

    """filter the rows which have to be updated"""
    where: dw_engines_bool_exp!
  ): dw_engines_mutation_response

  """
  update single row of the table: "dw_engines"
  """
  update_dw_engines_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: dw_engines_set_input
    pk_columns: dw_engines_pk_columns_input!
  ): dw_engines

  """
  update data of the table: "metric_approvals"
  """
  update_metric_approvals(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_approvals_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_approvals_set_input

    """filter the rows which have to be updated"""
    where: metric_approvals_bool_exp!
  ): metric_approvals_mutation_response

  """
  update single row of the table: "metric_approvals"
  """
  update_metric_approvals_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_approvals_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_approvals_set_input
    pk_columns: metric_approvals_pk_columns_input!
  ): metric_approvals

  """
  update data of the table: "metric_collection_metrics"
  """
  update_metric_collection_metrics(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collection_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collection_metrics_set_input

    """filter the rows which have to be updated"""
    where: metric_collection_metrics_bool_exp!
  ): metric_collection_metrics_mutation_response

  """
  update single row of the table: "metric_collection_metrics"
  """
  update_metric_collection_metrics_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collection_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collection_metrics_set_input
    pk_columns: metric_collection_metrics_pk_columns_input!
  ): metric_collection_metrics

  """
  update data of the table: "metric_collection_view"
  """
  update_metric_collection_view(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collection_view_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collection_view_set_input

    """filter the rows which have to be updated"""
    where: metric_collection_view_bool_exp!
  ): metric_collection_view_mutation_response

  """
  update single row of the table: "metric_collection_view"
  """
  update_metric_collection_view_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_collection_view_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_collection_view_set_input
    pk_columns: metric_collection_view_pk_columns_input!
  ): metric_collection_view

  """
  update data of the table: "metric_current_description"
  """
  update_metric_current_description(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_current_description_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_current_description_set_input

    """filter the rows which have to be updated"""
    where: metric_current_description_bool_exp!
  ): metric_current_description_mutation_response

  """
  update data of the table: "metric_descriptions"
  """
  update_metric_descriptions(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_descriptions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_descriptions_set_input

    """filter the rows which have to be updated"""
    where: metric_descriptions_bool_exp!
  ): metric_descriptions_mutation_response

  """
  update single row of the table: "metric_descriptions"
  """
  update_metric_descriptions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_descriptions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_descriptions_set_input
    pk_columns: metric_descriptions_pk_columns_input!
  ): metric_descriptions

  """
  update data of the table: "metric_lineage_data_sources"
  """
  update_metric_lineage_data_sources(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_lineage_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_lineage_data_sources_set_input

    """filter the rows which have to be updated"""
    where: metric_lineage_data_sources_bool_exp!
  ): metric_lineage_data_sources_mutation_response

  """
  update single row of the table: "metric_lineage_data_sources"
  """
  update_metric_lineage_data_sources_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_lineage_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_lineage_data_sources_set_input
    pk_columns: metric_lineage_data_sources_pk_columns_input!
  ): metric_lineage_data_sources

  """
  update data of the table: "metric_team_owners"
  """
  update_metric_team_owners(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_team_owners_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_team_owners_set_input

    """filter the rows which have to be updated"""
    where: metric_team_owners_bool_exp!
  ): metric_team_owners_mutation_response

  """
  update single row of the table: "metric_team_owners"
  """
  update_metric_team_owners_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_team_owners_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_team_owners_set_input
    pk_columns: metric_team_owners_pk_columns_input!
  ): metric_team_owners

  """
  update data of the table: "metric_user_owners"
  """
  update_metric_user_owners(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_user_owners_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_user_owners_set_input

    """filter the rows which have to be updated"""
    where: metric_user_owners_bool_exp!
  ): metric_user_owners_mutation_response

  """
  update single row of the table: "metric_user_owners"
  """
  update_metric_user_owners_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_user_owners_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_user_owners_set_input
    pk_columns: metric_user_owners_pk_columns_input!
  ): metric_user_owners

  """
  update data of the table: "metric_versions"
  """
  update_metric_versions(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: metric_versions_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: metric_versions_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: metric_versions_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: metric_versions_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: metric_versions_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: metric_versions_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_versions_set_input

    """filter the rows which have to be updated"""
    where: metric_versions_bool_exp!
  ): metric_versions_mutation_response

  """
  update single row of the table: "metric_versions"
  """
  update_metric_versions_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: metric_versions_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: metric_versions_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: metric_versions_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: metric_versions_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: metric_versions_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: metric_versions_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_versions_set_input
    pk_columns: metric_versions_pk_columns_input!
  ): metric_versions

  """
  update data of the table: "metric_view"
  """
  update_metric_view(
    """increments the integer columns with given value of the filtered values"""
    _inc: metric_view_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_view_set_input

    """filter the rows which have to be updated"""
    where: metric_view_bool_exp!
  ): metric_view_mutation_response

  """
  update data of the table: "model_data_sources"
  """
  update_model_data_sources(
    """increments the integer columns with given value of the filtered values"""
    _inc: model_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: model_data_sources_set_input

    """filter the rows which have to be updated"""
    where: model_data_sources_bool_exp!
  ): model_data_sources_mutation_response

  """
  update single row of the table: "model_data_sources"
  """
  update_model_data_sources_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: model_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: model_data_sources_set_input
    pk_columns: model_data_sources_pk_columns_input!
  ): model_data_sources

  """
  update data of the table: "model_metrics"
  """
  update_model_metrics(
    """increments the integer columns with given value of the filtered values"""
    _inc: model_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: model_metrics_set_input

    """filter the rows which have to be updated"""
    where: model_metrics_bool_exp!
  ): model_metrics_mutation_response

  """
  update single row of the table: "model_metrics"
  """
  update_model_metrics_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: model_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: model_metrics_set_input
    pk_columns: model_metrics_pk_columns_input!
  ): model_metrics

  """
  update data of the table: "models"
  """
  update_models(
    """increments the integer columns with given value of the filtered values"""
    _inc: models_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: models_set_input

    """filter the rows which have to be updated"""
    where: models_bool_exp!
  ): models_mutation_response

  """
  update single row of the table: "models"
  """
  update_models_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: models_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: models_set_input
    pk_columns: models_pk_columns_input!
  ): models

  """
  update data of the table: "mql_heartbeats"
  """
  update_mql_heartbeats(
    """increments the integer columns with given value of the filtered values"""
    _inc: mql_heartbeats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mql_heartbeats_set_input

    """filter the rows which have to be updated"""
    where: mql_heartbeats_bool_exp!
  ): mql_heartbeats_mutation_response

  """
  update single row of the table: "mql_heartbeats"
  """
  update_mql_heartbeats_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: mql_heartbeats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mql_heartbeats_set_input
    pk_columns: mql_heartbeats_pk_columns_input!
  ): mql_heartbeats

  """
  update data of the table: "org_data_sources"
  """
  update_org_data_sources(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_data_sources_set_input

    """filter the rows which have to be updated"""
    where: org_data_sources_bool_exp!
  ): org_data_sources_mutation_response

  """
  update single row of the table: "org_data_sources"
  """
  update_org_data_sources_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_data_sources_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_data_sources_set_input
    pk_columns: org_data_sources_pk_columns_input!
  ): org_data_sources

  """
  update data of the table: "org_metrics_current_view"
  """
  update_org_metrics_current_view(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_metrics_current_view_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_metrics_current_view_set_input

    """filter the rows which have to be updated"""
    where: org_metrics_current_view_bool_exp!
  ): org_metrics_current_view_mutation_response

  """
  update single row of the table: "org_metrics_current_view"
  """
  update_org_metrics_current_view_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: org_metrics_current_view_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: org_metrics_current_view_set_input
    pk_columns: org_metrics_current_view_pk_columns_input!
  ): org_metrics_current_view

  """
  update data of the table: "org_mql_server_logs_types"
  """
  update_org_mql_server_logs_types(
    """sets the columns of the filtered rows to the given values"""
    _set: org_mql_server_logs_types_set_input

    """filter the rows which have to be updated"""
    where: org_mql_server_logs_types_bool_exp!
  ): org_mql_server_logs_types_mutation_response

  """
  update single row of the table: "org_mql_server_logs_types"
  """
  update_org_mql_server_logs_types_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: org_mql_server_logs_types_set_input
    pk_columns: org_mql_server_logs_types_pk_columns_input!
  ): org_mql_server_logs_types

  """
  update data of the table: "priorities"
  """
  update_priorities(
    """sets the columns of the filtered rows to the given values"""
    _set: priorities_set_input

    """filter the rows which have to be updated"""
    where: priorities_bool_exp!
  ): priorities_mutation_response

  """
  update single row of the table: "priorities"
  """
  update_priorities_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: priorities_set_input
    pk_columns: priorities_pk_columns_input!
  ): priorities

  """
  update data of the table: "question_directed_to"
  """
  update_question_directed_to(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_directed_to_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_directed_to_set_input

    """filter the rows which have to be updated"""
    where: question_directed_to_bool_exp!
  ): question_directed_to_mutation_response

  """
  update single row of the table: "question_directed_to"
  """
  update_question_directed_to_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_directed_to_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_directed_to_set_input
    pk_columns: question_directed_to_pk_columns_input!
  ): question_directed_to

  """
  update data of the table: "question_likes"
  """
  update_question_likes(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_likes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_likes_set_input

    """filter the rows which have to be updated"""
    where: question_likes_bool_exp!
  ): question_likes_mutation_response

  """
  update single row of the table: "question_likes"
  """
  update_question_likes_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: question_likes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: question_likes_set_input
    pk_columns: question_likes_pk_columns_input!
  ): question_likes

  """
  update data of the table: "saved_query_metrics"
  """
  update_saved_query_metrics(
    """increments the integer columns with given value of the filtered values"""
    _inc: saved_query_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: saved_query_metrics_set_input

    """filter the rows which have to be updated"""
    where: saved_query_metrics_bool_exp!
  ): saved_query_metrics_mutation_response

  """
  update single row of the table: "saved_query_metrics"
  """
  update_saved_query_metrics_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: saved_query_metrics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: saved_query_metrics_set_input
    pk_columns: saved_query_metrics_pk_columns_input!
  ): saved_query_metrics

  """
  update data of the table: "team_page_theme_colors"
  """
  update_team_page_theme_colors(
    """sets the columns of the filtered rows to the given values"""
    _set: team_page_theme_colors_set_input

    """filter the rows which have to be updated"""
    where: team_page_theme_colors_bool_exp!
  ): team_page_theme_colors_mutation_response

  """
  update single row of the table: "team_page_theme_colors"
  """
  update_team_page_theme_colors_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: team_page_theme_colors_set_input
    pk_columns: team_page_theme_colors_pk_columns_input!
  ): team_page_theme_colors

  """
  update data of the table: "team_views"
  """
  update_team_views(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_views_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_views_set_input

    """filter the rows which have to be updated"""
    where: team_views_bool_exp!
  ): team_views_mutation_response

  """
  update single row of the table: "team_views"
  """
  update_team_views_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: team_views_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: team_views_set_input
    pk_columns: team_views_pk_columns_input!
  ): team_views

  """
  update data of the table: "unsubscribes"
  """
  update_unsubscribes(
    """increments the integer columns with given value of the filtered values"""
    _inc: unsubscribes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unsubscribes_set_input

    """filter the rows which have to be updated"""
    where: unsubscribes_bool_exp!
  ): unsubscribes_mutation_response

  """
  update single row of the table: "unsubscribes"
  """
  update_unsubscribes_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: unsubscribes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: unsubscribes_set_input
    pk_columns: unsubscribes_pk_columns_input!
  ): unsubscribes

  """
  update data of the table: "user_role_types"
  """
  update_user_role_types(
    """sets the columns of the filtered rows to the given values"""
    _set: user_role_types_set_input

    """filter the rows which have to be updated"""
    where: user_role_types_bool_exp!
  ): user_role_types_mutation_response

  """
  update single row of the table: "user_role_types"
  """
  update_user_role_types_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_role_types_set_input
    pk_columns: user_role_types_pk_columns_input!
  ): user_role_types
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
Stable ID for a data source name, by organization


columns and relationships of "org_data_sources"

"""
type org_data_sources {
  createdAt: timestamptz!
  id: Int!

  """An array relationship"""
  metricVersions(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): [metric_versions!]!

  """An aggregated array relationship"""
  metricVersions_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): metric_versions_aggregate!

  """An array relationship"""
  modelDataSources(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): [model_data_sources!]!

  """An aggregated array relationship"""
  modelDataSources_aggregate(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): model_data_sources_aggregate!
  name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
}

"""
aggregated selection of "org_data_sources"
"""
type org_data_sources_aggregate {
  aggregate: org_data_sources_aggregate_fields
  nodes: [org_data_sources!]!
}

"""
aggregate fields of "org_data_sources"
"""
type org_data_sources_aggregate_fields {
  avg: org_data_sources_avg_fields
  count(columns: [org_data_sources_select_column!], distinct: Boolean): Int
  max: org_data_sources_max_fields
  min: org_data_sources_min_fields
  stddev: org_data_sources_stddev_fields
  stddev_pop: org_data_sources_stddev_pop_fields
  stddev_samp: org_data_sources_stddev_samp_fields
  sum: org_data_sources_sum_fields
  var_pop: org_data_sources_var_pop_fields
  var_samp: org_data_sources_var_samp_fields
  variance: org_data_sources_variance_fields
}

"""
order by aggregate values of table "org_data_sources"
"""
input org_data_sources_aggregate_order_by {
  avg: org_data_sources_avg_order_by
  count: order_by
  max: org_data_sources_max_order_by
  min: org_data_sources_min_order_by
  stddev: org_data_sources_stddev_order_by
  stddev_pop: org_data_sources_stddev_pop_order_by
  stddev_samp: org_data_sources_stddev_samp_order_by
  sum: org_data_sources_sum_order_by
  var_pop: org_data_sources_var_pop_order_by
  var_samp: org_data_sources_var_samp_order_by
  variance: org_data_sources_variance_order_by
}

"""
input type for inserting array relation for remote table "org_data_sources"
"""
input org_data_sources_arr_rel_insert_input {
  data: [org_data_sources_insert_input!]!
  on_conflict: org_data_sources_on_conflict
}

"""aggregate avg on columns"""
type org_data_sources_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "org_data_sources"
"""
input org_data_sources_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "org_data_sources". All fields are combined with a logical 'AND'.
"""
input org_data_sources_bool_exp {
  _and: [org_data_sources_bool_exp]
  _not: org_data_sources_bool_exp
  _or: [org_data_sources_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  metricVersions: metric_versions_bool_exp
  modelDataSources: model_data_sources_bool_exp
  name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
}

"""
unique or primary key constraints on table "org_data_sources"
"""
enum org_data_sources_constraint {
  """unique or primary key constraint"""
  org_data_sources_pkey
}

"""
input type for incrementing integer column in table "org_data_sources"
"""
input org_data_sources_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "org_data_sources"
"""
input org_data_sources_insert_input {
  createdAt: timestamptz
  id: Int
  metricVersions: metric_versions_arr_rel_insert_input
  modelDataSources: model_data_sources_arr_rel_insert_input
  name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
}

"""aggregate max on columns"""
type org_data_sources_max_fields {
  createdAt: timestamptz
  id: Int
  name: String
  organizationId: Int
}

"""
order by max() on columns of table "org_data_sources"
"""
input org_data_sources_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  organizationId: order_by
}

"""aggregate min on columns"""
type org_data_sources_min_fields {
  createdAt: timestamptz
  id: Int
  name: String
  organizationId: Int
}

"""
order by min() on columns of table "org_data_sources"
"""
input org_data_sources_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  organizationId: order_by
}

"""
response of any mutation on the table "org_data_sources"
"""
type org_data_sources_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [org_data_sources!]!
}

"""
input type for inserting object relation for remote table "org_data_sources"
"""
input org_data_sources_obj_rel_insert_input {
  data: org_data_sources_insert_input!
  on_conflict: org_data_sources_on_conflict
}

"""
on conflict condition type for table "org_data_sources"
"""
input org_data_sources_on_conflict {
  constraint: org_data_sources_constraint!
  update_columns: [org_data_sources_update_column!]!
  where: org_data_sources_bool_exp
}

"""
ordering options when selecting data from "org_data_sources"
"""
input org_data_sources_order_by {
  createdAt: order_by
  id: order_by
  metricVersions_aggregate: metric_versions_aggregate_order_by
  modelDataSources_aggregate: model_data_sources_aggregate_order_by
  name: order_by
  organization: organizations_order_by
  organizationId: order_by
}

"""
primary key columns input for table: "org_data_sources"
"""
input org_data_sources_pk_columns_input {
  id: Int!
}

"""
select columns of table "org_data_sources"
"""
enum org_data_sources_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId
}

"""
input type for updating data in table "org_data_sources"
"""
input org_data_sources_set_input {
  createdAt: timestamptz
  id: Int
  name: String
  organizationId: Int
}

"""aggregate stddev on columns"""
type org_data_sources_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "org_data_sources"
"""
input org_data_sources_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type org_data_sources_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "org_data_sources"
"""
input org_data_sources_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type org_data_sources_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "org_data_sources"
"""
input org_data_sources_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type org_data_sources_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "org_data_sources"
"""
input org_data_sources_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "org_data_sources"
"""
enum org_data_sources_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId
}

"""aggregate var_pop on columns"""
type org_data_sources_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "org_data_sources"
"""
input org_data_sources_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type org_data_sources_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "org_data_sources"
"""
input org_data_sources_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type org_data_sources_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "org_data_sources"
"""
input org_data_sources_variance_order_by {
  id: order_by
  organizationId: order_by
}

"""
A Materialized View of the Current state of all Metrics


columns and relationships of "org_metrics_current_view"

"""
type org_metrics_current_view {
  """An array relationship"""
  annotations(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): [metric_annotations!]!

  """An aggregated array relationship"""
  annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): metric_annotations_aggregate!

  """An array relationship"""
  approvals(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): [metric_approvals!]!

  """An aggregated array relationship"""
  approvals_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): metric_approvals_aggregate!
  createdAt: timestamptz!

  """An object relationship"""
  currentDescription: metric_current_description

  """An object relationship"""
  currentModelMetric: model_metrics
  definition: String!

  """An array relationship"""
  descriptions(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): [metric_descriptions!]!

  """An aggregated array relationship"""
  descriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): metric_descriptions_aggregate!
  displayName: String!
  id: Int!
  metadata(
    """JSON select path"""
    path: String
  ): json!

  """An array relationship"""
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): [metric_collection_metrics!]!

  """An aggregated array relationship"""
  metricCollections_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): metric_collection_metrics_aggregate!
  metricType: Int!

  """An object relationship"""
  model: models!
  modelId: Int!
  name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  params(
    """JSON select path"""
    path: String
  ): json!

  """An array relationship"""
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """An aggregated array relationship"""
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!
  removedAt: timestamptz

  """An array relationship"""
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): [saved_query_metrics!]!

  """An aggregated array relationship"""
  savedQueries_aggregate(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): saved_query_metrics_aggregate!

  """An array relationship"""
  teamOwners(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): [metric_team_owners!]!

  """An aggregated array relationship"""
  teamOwners_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): metric_team_owners_aggregate!
  tier: Int!
  updatedAt: timestamptz

  """An array relationship"""
  userOwners(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): [metric_user_owners!]!

  """An aggregated array relationship"""
  userOwners_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): metric_user_owners_aggregate!

  """An array relationship"""
  views(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): [metric_view!]!

  """An aggregated array relationship"""
  views_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): metric_view_aggregate!
}

"""
aggregated selection of "org_metrics_current_view"
"""
type org_metrics_current_view_aggregate {
  aggregate: org_metrics_current_view_aggregate_fields
  nodes: [org_metrics_current_view!]!
}

"""
aggregate fields of "org_metrics_current_view"
"""
type org_metrics_current_view_aggregate_fields {
  avg: org_metrics_current_view_avg_fields
  count(columns: [org_metrics_current_view_select_column!], distinct: Boolean): Int
  max: org_metrics_current_view_max_fields
  min: org_metrics_current_view_min_fields
  stddev: org_metrics_current_view_stddev_fields
  stddev_pop: org_metrics_current_view_stddev_pop_fields
  stddev_samp: org_metrics_current_view_stddev_samp_fields
  sum: org_metrics_current_view_sum_fields
  var_pop: org_metrics_current_view_var_pop_fields
  var_samp: org_metrics_current_view_var_samp_fields
  variance: org_metrics_current_view_variance_fields
}

"""
order by aggregate values of table "org_metrics_current_view"
"""
input org_metrics_current_view_aggregate_order_by {
  avg: org_metrics_current_view_avg_order_by
  count: order_by
  max: org_metrics_current_view_max_order_by
  min: org_metrics_current_view_min_order_by
  stddev: org_metrics_current_view_stddev_order_by
  stddev_pop: org_metrics_current_view_stddev_pop_order_by
  stddev_samp: org_metrics_current_view_stddev_samp_order_by
  sum: org_metrics_current_view_sum_order_by
  var_pop: org_metrics_current_view_var_pop_order_by
  var_samp: org_metrics_current_view_var_samp_order_by
  variance: org_metrics_current_view_variance_order_by
}

"""
input type for inserting array relation for remote table "org_metrics_current_view"
"""
input org_metrics_current_view_arr_rel_insert_input {
  data: [org_metrics_current_view_insert_input!]!
  on_conflict: org_metrics_current_view_on_conflict
}

"""aggregate avg on columns"""
type org_metrics_current_view_avg_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by avg() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_avg_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""
Boolean expression to filter rows from the table "org_metrics_current_view". All fields are combined with a logical 'AND'.
"""
input org_metrics_current_view_bool_exp {
  _and: [org_metrics_current_view_bool_exp]
  _not: org_metrics_current_view_bool_exp
  _or: [org_metrics_current_view_bool_exp]
  annotations: metric_annotations_bool_exp
  approvals: metric_approvals_bool_exp
  createdAt: timestamptz_comparison_exp
  currentDescription: metric_current_description_bool_exp
  currentModelMetric: model_metrics_bool_exp
  definition: String_comparison_exp
  descriptions: metric_descriptions_bool_exp
  displayName: String_comparison_exp
  id: Int_comparison_exp
  metadata: json_comparison_exp
  metricCollections: metric_collection_metrics_bool_exp
  metricType: Int_comparison_exp
  model: models_bool_exp
  modelId: Int_comparison_exp
  name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  params: json_comparison_exp
  questions: questions_bool_exp
  removedAt: timestamptz_comparison_exp
  savedQueries: saved_query_metrics_bool_exp
  teamOwners: metric_team_owners_bool_exp
  tier: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
  userOwners: metric_user_owners_bool_exp
  views: metric_view_bool_exp
}

"""
unique or primary key constraints on table "org_metrics_current_view"
"""
enum org_metrics_current_view_constraint {
  """unique or primary key constraint"""
  org_metrics_current_view_organization_id_name_key

  """unique or primary key constraint"""
  org_metrics_current_view_pkey
}

"""
input type for incrementing integer column in table "org_metrics_current_view"
"""
input org_metrics_current_view_inc_input {
  id: Int
  metricType: Int
  modelId: Int
  organizationId: Int
  tier: Int
}

"""
input type for inserting data into table "org_metrics_current_view"
"""
input org_metrics_current_view_insert_input {
  annotations: metric_annotations_arr_rel_insert_input
  approvals: metric_approvals_arr_rel_insert_input
  createdAt: timestamptz
  currentDescription: metric_current_description_obj_rel_insert_input
  currentModelMetric: model_metrics_obj_rel_insert_input
  definition: String
  descriptions: metric_descriptions_arr_rel_insert_input
  displayName: String
  id: Int
  metadata: json
  metricCollections: metric_collection_metrics_arr_rel_insert_input
  metricType: Int
  model: models_obj_rel_insert_input
  modelId: Int
  name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  params: json
  questions: questions_arr_rel_insert_input
  removedAt: timestamptz
  savedQueries: saved_query_metrics_arr_rel_insert_input
  teamOwners: metric_team_owners_arr_rel_insert_input
  tier: Int
  updatedAt: timestamptz
  userOwners: metric_user_owners_arr_rel_insert_input
  views: metric_view_arr_rel_insert_input
}

"""aggregate max on columns"""
type org_metrics_current_view_max_fields {
  createdAt: timestamptz
  definition: String
  displayName: String
  id: Int
  metricType: Int
  modelId: Int
  name: String
  organizationId: Int
  removedAt: timestamptz
  tier: Int
  updatedAt: timestamptz
}

"""
order by max() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_max_order_by {
  createdAt: order_by
  definition: order_by
  displayName: order_by
  id: order_by
  metricType: order_by
  modelId: order_by
  name: order_by
  organizationId: order_by
  removedAt: order_by
  tier: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type org_metrics_current_view_min_fields {
  createdAt: timestamptz
  definition: String
  displayName: String
  id: Int
  metricType: Int
  modelId: Int
  name: String
  organizationId: Int
  removedAt: timestamptz
  tier: Int
  updatedAt: timestamptz
}

"""
order by min() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_min_order_by {
  createdAt: order_by
  definition: order_by
  displayName: order_by
  id: order_by
  metricType: order_by
  modelId: order_by
  name: order_by
  organizationId: order_by
  removedAt: order_by
  tier: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "org_metrics_current_view"
"""
type org_metrics_current_view_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [org_metrics_current_view!]!
}

"""
input type for inserting object relation for remote table "org_metrics_current_view"
"""
input org_metrics_current_view_obj_rel_insert_input {
  data: org_metrics_current_view_insert_input!
  on_conflict: org_metrics_current_view_on_conflict
}

"""
on conflict condition type for table "org_metrics_current_view"
"""
input org_metrics_current_view_on_conflict {
  constraint: org_metrics_current_view_constraint!
  update_columns: [org_metrics_current_view_update_column!]!
  where: org_metrics_current_view_bool_exp
}

"""
ordering options when selecting data from "org_metrics_current_view"
"""
input org_metrics_current_view_order_by {
  annotations_aggregate: metric_annotations_aggregate_order_by
  approvals_aggregate: metric_approvals_aggregate_order_by
  createdAt: order_by
  currentDescription: metric_current_description_order_by
  currentModelMetric: model_metrics_order_by
  definition: order_by
  descriptions_aggregate: metric_descriptions_aggregate_order_by
  displayName: order_by
  id: order_by
  metadata: order_by
  metricCollections_aggregate: metric_collection_metrics_aggregate_order_by
  metricType: order_by
  model: models_order_by
  modelId: order_by
  name: order_by
  organization: organizations_order_by
  organizationId: order_by
  params: order_by
  questions_aggregate: questions_aggregate_order_by
  removedAt: order_by
  savedQueries_aggregate: saved_query_metrics_aggregate_order_by
  teamOwners_aggregate: metric_team_owners_aggregate_order_by
  tier: order_by
  updatedAt: order_by
  userOwners_aggregate: metric_user_owners_aggregate_order_by
  views_aggregate: metric_view_aggregate_order_by
}

"""
primary key columns input for table: "org_metrics_current_view"
"""
input org_metrics_current_view_pk_columns_input {
  id: Int!
}

"""
select columns of table "org_metrics_current_view"
"""
enum org_metrics_current_view_select_column {
  """column name"""
  createdAt

  """column name"""
  definition

  """column name"""
  displayName

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metricType

  """column name"""
  modelId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  params

  """column name"""
  removedAt

  """column name"""
  tier

  """column name"""
  updatedAt
}

"""
input type for updating data in table "org_metrics_current_view"
"""
input org_metrics_current_view_set_input {
  createdAt: timestamptz
  definition: String
  displayName: String
  id: Int
  metadata: json
  metricType: Int
  modelId: Int
  name: String
  organizationId: Int
  params: json
  removedAt: timestamptz
  tier: Int
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type org_metrics_current_view_stddev_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_stddev_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate stddev_pop on columns"""
type org_metrics_current_view_stddev_pop_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev_pop() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_stddev_pop_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate stddev_samp on columns"""
type org_metrics_current_view_stddev_samp_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by stddev_samp() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_stddev_samp_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate sum on columns"""
type org_metrics_current_view_sum_fields {
  id: Int
  metricType: Int
  modelId: Int
  organizationId: Int
  tier: Int
}

"""
order by sum() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_sum_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""
update columns of table "org_metrics_current_view"
"""
enum org_metrics_current_view_update_column {
  """column name"""
  createdAt

  """column name"""
  definition

  """column name"""
  displayName

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metricType

  """column name"""
  modelId

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  params

  """column name"""
  removedAt

  """column name"""
  tier

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type org_metrics_current_view_var_pop_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by var_pop() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_var_pop_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate var_samp on columns"""
type org_metrics_current_view_var_samp_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by var_samp() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_var_samp_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""aggregate variance on columns"""
type org_metrics_current_view_variance_fields {
  id: Float
  metricType: Float
  modelId: Float
  organizationId: Float
  tier: Float
}

"""
order by variance() on columns of table "org_metrics_current_view"
"""
input org_metrics_current_view_variance_order_by {
  id: order_by
  metricType: order_by
  modelId: order_by
  organizationId: order_by
  tier: order_by
}

"""
Contains options what we do with an org's MQL server logs


columns and relationships of "org_mql_server_logs_types"

"""
type org_mql_server_logs_types {
  comment: String!
  value: String!
}

"""
aggregated selection of "org_mql_server_logs_types"
"""
type org_mql_server_logs_types_aggregate {
  aggregate: org_mql_server_logs_types_aggregate_fields
  nodes: [org_mql_server_logs_types!]!
}

"""
aggregate fields of "org_mql_server_logs_types"
"""
type org_mql_server_logs_types_aggregate_fields {
  count(columns: [org_mql_server_logs_types_select_column!], distinct: Boolean): Int
  max: org_mql_server_logs_types_max_fields
  min: org_mql_server_logs_types_min_fields
}

"""
order by aggregate values of table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_aggregate_order_by {
  count: order_by
  max: org_mql_server_logs_types_max_order_by
  min: org_mql_server_logs_types_min_order_by
}

"""
input type for inserting array relation for remote table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_arr_rel_insert_input {
  data: [org_mql_server_logs_types_insert_input!]!
  on_conflict: org_mql_server_logs_types_on_conflict
}

"""
Boolean expression to filter rows from the table "org_mql_server_logs_types". All fields are combined with a logical 'AND'.
"""
input org_mql_server_logs_types_bool_exp {
  _and: [org_mql_server_logs_types_bool_exp]
  _not: org_mql_server_logs_types_bool_exp
  _or: [org_mql_server_logs_types_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "org_mql_server_logs_types"
"""
enum org_mql_server_logs_types_constraint {
  """unique or primary key constraint"""
  org_mql_server_logs_types_pkey
}

enum org_mql_server_logs_types_enum {
  """stream MQL logs back to transform backend"""
  ALWAYS

  """never upload mql server logs to transform backend"""
  NEVER

  """upload mql server logs to transform backend on error"""
  ON_ERROR
}

"""
expression to compare columns of type org_mql_server_logs_types_enum. All fields are combined with logical 'AND'.
"""
input org_mql_server_logs_types_enum_comparison_exp {
  _eq: org_mql_server_logs_types_enum
  _in: [org_mql_server_logs_types_enum!]
  _is_null: Boolean
  _neq: org_mql_server_logs_types_enum
  _nin: [org_mql_server_logs_types_enum!]
}

"""
input type for inserting data into table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type org_mql_server_logs_types_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type org_mql_server_logs_types_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "org_mql_server_logs_types"
"""
type org_mql_server_logs_types_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [org_mql_server_logs_types!]!
}

"""
input type for inserting object relation for remote table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_obj_rel_insert_input {
  data: org_mql_server_logs_types_insert_input!
  on_conflict: org_mql_server_logs_types_on_conflict
}

"""
on conflict condition type for table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_on_conflict {
  constraint: org_mql_server_logs_types_constraint!
  update_columns: [org_mql_server_logs_types_update_column!]!
  where: org_mql_server_logs_types_bool_exp
}

"""
ordering options when selecting data from "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_pk_columns_input {
  value: String!
}

"""
select columns of table "org_mql_server_logs_types"
"""
enum org_mql_server_logs_types_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "org_mql_server_logs_types"
"""
input org_mql_server_logs_types_set_input {
  comment: String
  value: String
}

"""
update columns of table "org_mql_server_logs_types"
"""
enum org_mql_server_logs_types_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
Allowing for multiple MQL Servers for an Organization enables the use of development environments and other non-production applications.


columns and relationships of "org_mql_servers"

"""
type org_mql_servers {
  configSecret: String
  createdAt: timestamptz!
  dw_engine: dw_engines_enum

  """An array relationship"""
  heartbeats(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): [mql_heartbeats!]!

  """An aggregated array relationship"""
  heartbeats_aggregate(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): mql_heartbeats_aggregate!
  id: Int!
  isOrgDefault: Boolean!
  name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  updatedAt: timestamptz!
  url: String!
}

"""
aggregated selection of "org_mql_servers"
"""
type org_mql_servers_aggregate {
  aggregate: org_mql_servers_aggregate_fields
  nodes: [org_mql_servers!]!
}

"""
aggregate fields of "org_mql_servers"
"""
type org_mql_servers_aggregate_fields {
  avg: org_mql_servers_avg_fields
  count(columns: [org_mql_servers_select_column!], distinct: Boolean): Int
  max: org_mql_servers_max_fields
  min: org_mql_servers_min_fields
  stddev: org_mql_servers_stddev_fields
  stddev_pop: org_mql_servers_stddev_pop_fields
  stddev_samp: org_mql_servers_stddev_samp_fields
  sum: org_mql_servers_sum_fields
  var_pop: org_mql_servers_var_pop_fields
  var_samp: org_mql_servers_var_samp_fields
  variance: org_mql_servers_variance_fields
}

"""
order by aggregate values of table "org_mql_servers"
"""
input org_mql_servers_aggregate_order_by {
  avg: org_mql_servers_avg_order_by
  count: order_by
  max: org_mql_servers_max_order_by
  min: org_mql_servers_min_order_by
  stddev: org_mql_servers_stddev_order_by
  stddev_pop: org_mql_servers_stddev_pop_order_by
  stddev_samp: org_mql_servers_stddev_samp_order_by
  sum: org_mql_servers_sum_order_by
  var_pop: org_mql_servers_var_pop_order_by
  var_samp: org_mql_servers_var_samp_order_by
  variance: org_mql_servers_variance_order_by
}

"""
input type for inserting array relation for remote table "org_mql_servers"
"""
input org_mql_servers_arr_rel_insert_input {
  data: [org_mql_servers_insert_input!]!
  on_conflict: org_mql_servers_on_conflict
}

"""aggregate avg on columns"""
type org_mql_servers_avg_fields {
  id: Float
  organizationId: Float
}

"""
order by avg() on columns of table "org_mql_servers"
"""
input org_mql_servers_avg_order_by {
  id: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "org_mql_servers". All fields are combined with a logical 'AND'.
"""
input org_mql_servers_bool_exp {
  _and: [org_mql_servers_bool_exp]
  _not: org_mql_servers_bool_exp
  _or: [org_mql_servers_bool_exp]
  configSecret: String_comparison_exp
  createdAt: timestamptz_comparison_exp
  dw_engine: dw_engines_enum_comparison_exp
  heartbeats: mql_heartbeats_bool_exp
  id: Int_comparison_exp
  isOrgDefault: Boolean_comparison_exp
  name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
  url: String_comparison_exp
}

"""
unique or primary key constraints on table "org_mql_servers"
"""
enum org_mql_servers_constraint {
  """unique or primary key constraint"""
  org_mql_servers_organization_id_name_key

  """unique or primary key constraint"""
  org_mql_servers_pkey
}

"""
input type for incrementing integer column in table "org_mql_servers"
"""
input org_mql_servers_inc_input {
  id: Int
  organizationId: Int
}

"""
input type for inserting data into table "org_mql_servers"
"""
input org_mql_servers_insert_input {
  configSecret: String
  createdAt: timestamptz
  dw_engine: dw_engines_enum
  heartbeats: mql_heartbeats_arr_rel_insert_input
  id: Int
  isOrgDefault: Boolean
  name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  updatedAt: timestamptz
  url: String
}

"""aggregate max on columns"""
type org_mql_servers_max_fields {
  configSecret: String
  createdAt: timestamptz
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamptz
  url: String
}

"""
order by max() on columns of table "org_mql_servers"
"""
input org_mql_servers_max_order_by {
  configSecret: order_by
  createdAt: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
  url: order_by
}

"""aggregate min on columns"""
type org_mql_servers_min_fields {
  configSecret: String
  createdAt: timestamptz
  id: Int
  name: String
  organizationId: Int
  updatedAt: timestamptz
  url: String
}

"""
order by min() on columns of table "org_mql_servers"
"""
input org_mql_servers_min_order_by {
  configSecret: order_by
  createdAt: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  updatedAt: order_by
  url: order_by
}

"""
response of any mutation on the table "org_mql_servers"
"""
type org_mql_servers_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [org_mql_servers!]!
}

"""
input type for inserting object relation for remote table "org_mql_servers"
"""
input org_mql_servers_obj_rel_insert_input {
  data: org_mql_servers_insert_input!
  on_conflict: org_mql_servers_on_conflict
}

"""
on conflict condition type for table "org_mql_servers"
"""
input org_mql_servers_on_conflict {
  constraint: org_mql_servers_constraint!
  update_columns: [org_mql_servers_update_column!]!
  where: org_mql_servers_bool_exp
}

"""
ordering options when selecting data from "org_mql_servers"
"""
input org_mql_servers_order_by {
  configSecret: order_by
  createdAt: order_by
  dw_engine: order_by
  heartbeats_aggregate: mql_heartbeats_aggregate_order_by
  id: order_by
  isOrgDefault: order_by
  name: order_by
  organization: organizations_order_by
  organizationId: order_by
  updatedAt: order_by
  url: order_by
}

"""
primary key columns input for table: "org_mql_servers"
"""
input org_mql_servers_pk_columns_input {
  id: Int!
}

"""
select columns of table "org_mql_servers"
"""
enum org_mql_servers_select_column {
  """column name"""
  configSecret

  """column name"""
  createdAt

  """column name"""
  dw_engine

  """column name"""
  id

  """column name"""
  isOrgDefault

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  url
}

"""
input type for updating data in table "org_mql_servers"
"""
input org_mql_servers_set_input {
  configSecret: String
  createdAt: timestamptz
  dw_engine: dw_engines_enum
  id: Int
  isOrgDefault: Boolean
  name: String
  organizationId: Int
  updatedAt: timestamptz
  url: String
}

"""aggregate stddev on columns"""
type org_mql_servers_stddev_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "org_mql_servers"
"""
input org_mql_servers_stddev_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type org_mql_servers_stddev_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "org_mql_servers"
"""
input org_mql_servers_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type org_mql_servers_stddev_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "org_mql_servers"
"""
input org_mql_servers_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type org_mql_servers_sum_fields {
  id: Int
  organizationId: Int
}

"""
order by sum() on columns of table "org_mql_servers"
"""
input org_mql_servers_sum_order_by {
  id: order_by
  organizationId: order_by
}

"""
update columns of table "org_mql_servers"
"""
enum org_mql_servers_update_column {
  """column name"""
  configSecret

  """column name"""
  createdAt

  """column name"""
  dw_engine

  """column name"""
  id

  """column name"""
  isOrgDefault

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  url
}

"""aggregate var_pop on columns"""
type org_mql_servers_var_pop_fields {
  id: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "org_mql_servers"
"""
input org_mql_servers_var_pop_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type org_mql_servers_var_samp_fields {
  id: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "org_mql_servers"
"""
input org_mql_servers_var_samp_order_by {
  id: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type org_mql_servers_variance_fields {
  id: Float
  organizationId: Float
}

"""
order by variance() on columns of table "org_mql_servers"
"""
input org_mql_servers_variance_order_by {
  id: order_by
  organizationId: order_by
}

"""
columns and relationships of "organization_features"
"""
type organization_features {
  """An object relationship"""
  feature: features!
  featureId: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
}

"""
aggregated selection of "organization_features"
"""
type organization_features_aggregate {
  aggregate: organization_features_aggregate_fields
  nodes: [organization_features!]!
}

"""
aggregate fields of "organization_features"
"""
type organization_features_aggregate_fields {
  avg: organization_features_avg_fields
  count(columns: [organization_features_select_column!], distinct: Boolean): Int
  max: organization_features_max_fields
  min: organization_features_min_fields
  stddev: organization_features_stddev_fields
  stddev_pop: organization_features_stddev_pop_fields
  stddev_samp: organization_features_stddev_samp_fields
  sum: organization_features_sum_fields
  var_pop: organization_features_var_pop_fields
  var_samp: organization_features_var_samp_fields
  variance: organization_features_variance_fields
}

"""
order by aggregate values of table "organization_features"
"""
input organization_features_aggregate_order_by {
  avg: organization_features_avg_order_by
  count: order_by
  max: organization_features_max_order_by
  min: organization_features_min_order_by
  stddev: organization_features_stddev_order_by
  stddev_pop: organization_features_stddev_pop_order_by
  stddev_samp: organization_features_stddev_samp_order_by
  sum: organization_features_sum_order_by
  var_pop: organization_features_var_pop_order_by
  var_samp: organization_features_var_samp_order_by
  variance: organization_features_variance_order_by
}

"""
input type for inserting array relation for remote table "organization_features"
"""
input organization_features_arr_rel_insert_input {
  data: [organization_features_insert_input!]!
  on_conflict: organization_features_on_conflict
}

"""aggregate avg on columns"""
type organization_features_avg_fields {
  featureId: Float
  organizationId: Float
}

"""
order by avg() on columns of table "organization_features"
"""
input organization_features_avg_order_by {
  featureId: order_by
  organizationId: order_by
}

"""
Boolean expression to filter rows from the table "organization_features". All fields are combined with a logical 'AND'.
"""
input organization_features_bool_exp {
  _and: [organization_features_bool_exp]
  _not: organization_features_bool_exp
  _or: [organization_features_bool_exp]
  feature: features_bool_exp
  featureId: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
}

"""
unique or primary key constraints on table "organization_features"
"""
enum organization_features_constraint {
  """unique or primary key constraint"""
  organization_features_pkey
}

"""
input type for incrementing integer column in table "organization_features"
"""
input organization_features_inc_input {
  featureId: Int
  organizationId: Int
}

"""
input type for inserting data into table "organization_features"
"""
input organization_features_insert_input {
  feature: features_obj_rel_insert_input
  featureId: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
}

"""aggregate max on columns"""
type organization_features_max_fields {
  featureId: Int
  organizationId: Int
}

"""
order by max() on columns of table "organization_features"
"""
input organization_features_max_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate min on columns"""
type organization_features_min_fields {
  featureId: Int
  organizationId: Int
}

"""
order by min() on columns of table "organization_features"
"""
input organization_features_min_order_by {
  featureId: order_by
  organizationId: order_by
}

"""
response of any mutation on the table "organization_features"
"""
type organization_features_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [organization_features!]!
}

"""
input type for inserting object relation for remote table "organization_features"
"""
input organization_features_obj_rel_insert_input {
  data: organization_features_insert_input!
  on_conflict: organization_features_on_conflict
}

"""
on conflict condition type for table "organization_features"
"""
input organization_features_on_conflict {
  constraint: organization_features_constraint!
  update_columns: [organization_features_update_column!]!
  where: organization_features_bool_exp
}

"""
ordering options when selecting data from "organization_features"
"""
input organization_features_order_by {
  feature: features_order_by
  featureId: order_by
  organization: organizations_order_by
  organizationId: order_by
}

"""
primary key columns input for table: "organization_features"
"""
input organization_features_pk_columns_input {
  featureId: Int!
  organizationId: Int!
}

"""
select columns of table "organization_features"
"""
enum organization_features_select_column {
  """column name"""
  featureId

  """column name"""
  organizationId
}

"""
input type for updating data in table "organization_features"
"""
input organization_features_set_input {
  featureId: Int
  organizationId: Int
}

"""aggregate stddev on columns"""
type organization_features_stddev_fields {
  featureId: Float
  organizationId: Float
}

"""
order by stddev() on columns of table "organization_features"
"""
input organization_features_stddev_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate stddev_pop on columns"""
type organization_features_stddev_pop_fields {
  featureId: Float
  organizationId: Float
}

"""
order by stddev_pop() on columns of table "organization_features"
"""
input organization_features_stddev_pop_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate stddev_samp on columns"""
type organization_features_stddev_samp_fields {
  featureId: Float
  organizationId: Float
}

"""
order by stddev_samp() on columns of table "organization_features"
"""
input organization_features_stddev_samp_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate sum on columns"""
type organization_features_sum_fields {
  featureId: Int
  organizationId: Int
}

"""
order by sum() on columns of table "organization_features"
"""
input organization_features_sum_order_by {
  featureId: order_by
  organizationId: order_by
}

"""
update columns of table "organization_features"
"""
enum organization_features_update_column {
  """column name"""
  featureId

  """column name"""
  organizationId
}

"""aggregate var_pop on columns"""
type organization_features_var_pop_fields {
  featureId: Float
  organizationId: Float
}

"""
order by var_pop() on columns of table "organization_features"
"""
input organization_features_var_pop_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate var_samp on columns"""
type organization_features_var_samp_fields {
  featureId: Float
  organizationId: Float
}

"""
order by var_samp() on columns of table "organization_features"
"""
input organization_features_var_samp_order_by {
  featureId: order_by
  organizationId: order_by
}

"""aggregate variance on columns"""
type organization_features_variance_fields {
  featureId: Float
  organizationId: Float
}

"""
order by variance() on columns of table "organization_features"
"""
input organization_features_variance_order_by {
  featureId: order_by
  organizationId: order_by
}

"""
An Organization is a company that is a customer of Transform


columns and relationships of "organizations"

"""
type organizations {
  """An array relationship"""
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """An aggregated array relationship"""
  annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!

  """An array relationship"""
  api_keys(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): [api_keys!]!

  """An aggregated array relationship"""
  api_keys_aggregate(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): api_keys_aggregate!

  """Timestamp indicating when the `Organization` was created"""
  createdAt: timestamptz

  """An object relationship"""
  currentModel: model_current

  """An array relationship"""
  dashboards(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): [dashboards!]!

  """An aggregated array relationship"""
  dashboards_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): dashboards_aggregate!

  """An array relationship"""
  dataSources(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): [org_data_sources!]!

  """An aggregated array relationship"""
  dataSources_aggregate(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): org_data_sources_aggregate!
  date_create: Int
  date_delete: Int

  """
  This is a soft delete for the Organization model. If the Organization has been deactivated, this value will reflect the timestamp of that operation. If the Organization is active, this value will be null.
  """
  deactivatedAt: timestamptz
  domain: String

  """An array relationship"""
  features(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): [organization_features!]!

  """An aggregated array relationship"""
  features_aggregate(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): organization_features_aggregate!

  """A unique identifier for the `Organization`"""
  id: Int!
  isHosted: Boolean!

  """
  A string representing a URL where an image of the `Organization`'s logo can be found
  """
  logoUrl: String

  """An array relationship"""
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): [metric_collections!]!

  """An aggregated array relationship"""
  metricCollections_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): metric_collections_aggregate!

  """An array relationship"""
  metric_annotations(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): [metric_annotations!]!

  """An aggregated array relationship"""
  metric_annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): metric_annotations_aggregate!

  """An array relationship"""
  metric_approvals(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): [metric_approvals!]!

  """An aggregated array relationship"""
  metric_approvals_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): metric_approvals_aggregate!

  """An array relationship"""
  metric_team_owners(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): [metric_team_owners!]!

  """An aggregated array relationship"""
  metric_team_owners_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): metric_team_owners_aggregate!

  """An array relationship"""
  metric_views(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): [metric_view!]!

  """An aggregated array relationship"""
  metric_views_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): metric_view_aggregate!

  """An array relationship"""
  metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """An aggregated array relationship"""
  metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """An array relationship"""
  models(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): [models!]!

  """An aggregated array relationship"""
  models_aggregate(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): models_aggregate!

  """An array relationship"""
  mqlHeartbeats(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): [mql_heartbeats!]!

  """An aggregated array relationship"""
  mqlHeartbeats_aggregate(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): mql_heartbeats_aggregate!
  mqlServerLogs: org_mql_server_logs_types_enum

  """The URL of your MQL Server"""
  mqlServerUrl: String

  """An array relationship"""
  mqlServers(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): [org_mql_servers!]!

  """An aggregated array relationship"""
  mqlServers_aggregate(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): org_mql_servers_aggregate!

  """The name of the `Organization`"""
  name: String!

  """The branch name representing the current config (default "main")"""
  primaryConfigBranch: String!

  """
  The repo name — not the full URL — for the repository storing the Transform config
  """
  primaryConfigRepo: String!

  """An array relationship"""
  question_directed_tos(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """An aggregated array relationship"""
  question_directed_tos_aggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """An array relationship"""
  question_likes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """An aggregated array relationship"""
  question_likes_aggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """An array relationship"""
  question_replies(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): [question_replies!]!

  """An aggregated array relationship"""
  question_replies_aggregate(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): question_replies_aggregate!

  """An array relationship"""
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """An aggregated array relationship"""
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """An array relationship"""
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): [saved_queries!]!

  """An aggregated array relationship"""
  savedQueries_aggregate(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): saved_queries_aggregate!
  shardId: Int

  """
  The slug is a URL-friendly string used to identify an organization in the App
  """
  slug: String

  """
  The URL of your source control system, used for generating links to config files
  """
  sourceControlUrl: String

  """An array relationship"""
  team_members(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): [team_members!]!

  """An aggregated array relationship"""
  team_members_aggregate(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): team_members_aggregate!

  """An array relationship"""
  teams(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): [teams!]!

  """An aggregated array relationship"""
  teams_aggregate(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): teams_aggregate!

  """Timestamp representing the last update to the Organization"""
  updatedAt: timestamptz

  """
  A computed field, executes function "user_is_org_admin"
  """
  userIsOrgAdmin: Boolean

  """An array relationship"""
  user_prefs(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): [user_prefs!]!

  """An aggregated array relationship"""
  user_prefs_aggregate(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): user_prefs_aggregate!

  """An array relationship"""
  user_roles(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): [user_roles!]!

  """An aggregated array relationship"""
  user_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): user_roles_aggregate!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """An aggregated array relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!
}

"""
aggregated selection of "organizations"
"""
type organizations_aggregate {
  aggregate: organizations_aggregate_fields
  nodes: [organizations!]!
}

"""
aggregate fields of "organizations"
"""
type organizations_aggregate_fields {
  avg: organizations_avg_fields
  count(columns: [organizations_select_column!], distinct: Boolean): Int
  max: organizations_max_fields
  min: organizations_min_fields
  stddev: organizations_stddev_fields
  stddev_pop: organizations_stddev_pop_fields
  stddev_samp: organizations_stddev_samp_fields
  sum: organizations_sum_fields
  var_pop: organizations_var_pop_fields
  var_samp: organizations_var_samp_fields
  variance: organizations_variance_fields
}

"""
order by aggregate values of table "organizations"
"""
input organizations_aggregate_order_by {
  avg: organizations_avg_order_by
  count: order_by
  max: organizations_max_order_by
  min: organizations_min_order_by
  stddev: organizations_stddev_order_by
  stddev_pop: organizations_stddev_pop_order_by
  stddev_samp: organizations_stddev_samp_order_by
  sum: organizations_sum_order_by
  var_pop: organizations_var_pop_order_by
  var_samp: organizations_var_samp_order_by
  variance: organizations_variance_order_by
}

"""
input type for inserting array relation for remote table "organizations"
"""
input organizations_arr_rel_insert_input {
  data: [organizations_insert_input!]!
  on_conflict: organizations_on_conflict
}

"""aggregate avg on columns"""
type organizations_avg_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by avg() on columns of table "organizations"
"""
input organizations_avg_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""
Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'.
"""
input organizations_bool_exp {
  _and: [organizations_bool_exp]
  _not: organizations_bool_exp
  _or: [organizations_bool_exp]
  annotations: annotations_bool_exp
  api_keys: api_keys_bool_exp
  createdAt: timestamptz_comparison_exp
  currentModel: model_current_bool_exp
  dashboards: dashboards_bool_exp
  dataSources: org_data_sources_bool_exp
  date_create: Int_comparison_exp
  date_delete: Int_comparison_exp
  deactivatedAt: timestamptz_comparison_exp
  domain: String_comparison_exp
  features: organization_features_bool_exp
  id: Int_comparison_exp
  isHosted: Boolean_comparison_exp
  logoUrl: String_comparison_exp
  metricCollections: metric_collections_bool_exp
  metric_annotations: metric_annotations_bool_exp
  metric_approvals: metric_approvals_bool_exp
  metric_team_owners: metric_team_owners_bool_exp
  metric_views: metric_view_bool_exp
  metrics: org_metrics_current_view_bool_exp
  models: models_bool_exp
  mqlHeartbeats: mql_heartbeats_bool_exp
  mqlServerLogs: org_mql_server_logs_types_enum_comparison_exp
  mqlServerUrl: String_comparison_exp
  mqlServers: org_mql_servers_bool_exp
  name: String_comparison_exp
  primaryConfigBranch: String_comparison_exp
  primaryConfigRepo: String_comparison_exp
  question_directed_tos: question_directed_to_bool_exp
  question_likes: question_likes_bool_exp
  question_replies: question_replies_bool_exp
  questions: questions_bool_exp
  savedQueries: saved_queries_bool_exp
  shardId: Int_comparison_exp
  slug: String_comparison_exp
  sourceControlUrl: String_comparison_exp
  team_members: team_members_bool_exp
  teams: teams_bool_exp
  updatedAt: timestamptz_comparison_exp
  user_prefs: user_prefs_bool_exp
  user_roles: user_roles_bool_exp
  users: users_bool_exp
}

"""
unique or primary key constraints on table "organizations"
"""
enum organizations_constraint {
  """unique or primary key constraint"""
  organizations_pkey
}

"""
input type for incrementing integer column in table "organizations"
"""
input organizations_inc_input {
  date_create: Int
  date_delete: Int
  id: Int
  shardId: Int
}

"""
input type for inserting data into table "organizations"
"""
input organizations_insert_input {
  annotations: annotations_arr_rel_insert_input
  api_keys: api_keys_arr_rel_insert_input
  createdAt: timestamptz
  dashboards: dashboards_arr_rel_insert_input
  dataSources: org_data_sources_arr_rel_insert_input
  date_create: Int
  date_delete: Int
  deactivatedAt: timestamptz
  domain: String
  features: organization_features_arr_rel_insert_input
  id: Int
  isHosted: Boolean
  logoUrl: String
  metricCollections: metric_collections_arr_rel_insert_input
  metric_annotations: metric_annotations_arr_rel_insert_input
  metric_approvals: metric_approvals_arr_rel_insert_input
  metric_team_owners: metric_team_owners_arr_rel_insert_input
  metric_views: metric_view_arr_rel_insert_input
  metrics: org_metrics_current_view_arr_rel_insert_input
  models: models_arr_rel_insert_input
  mqlHeartbeats: mql_heartbeats_arr_rel_insert_input
  mqlServerLogs: org_mql_server_logs_types_enum
  mqlServerUrl: String
  mqlServers: org_mql_servers_arr_rel_insert_input
  name: String
  primaryConfigBranch: String
  primaryConfigRepo: String
  question_directed_tos: question_directed_to_arr_rel_insert_input
  question_likes: question_likes_arr_rel_insert_input
  question_replies: question_replies_arr_rel_insert_input
  questions: questions_arr_rel_insert_input
  savedQueries: saved_queries_arr_rel_insert_input
  shardId: Int
  slug: String
  sourceControlUrl: String
  team_members: team_members_arr_rel_insert_input
  teams: teams_arr_rel_insert_input
  updatedAt: timestamptz
  user_prefs: user_prefs_arr_rel_insert_input
  user_roles: user_roles_arr_rel_insert_input
  users: users_arr_rel_insert_input
}

"""aggregate max on columns"""
type organizations_max_fields {
  createdAt: timestamptz
  date_create: Int
  date_delete: Int
  deactivatedAt: timestamptz
  domain: String
  id: Int
  logoUrl: String
  mqlServerUrl: String
  name: String
  primaryConfigBranch: String
  primaryConfigRepo: String
  shardId: Int
  slug: String
  sourceControlUrl: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "organizations"
"""
input organizations_max_order_by {
  createdAt: order_by
  date_create: order_by
  date_delete: order_by
  deactivatedAt: order_by
  domain: order_by
  id: order_by
  logoUrl: order_by
  mqlServerUrl: order_by
  name: order_by
  primaryConfigBranch: order_by
  primaryConfigRepo: order_by
  shardId: order_by
  slug: order_by
  sourceControlUrl: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type organizations_min_fields {
  createdAt: timestamptz
  date_create: Int
  date_delete: Int
  deactivatedAt: timestamptz
  domain: String
  id: Int
  logoUrl: String
  mqlServerUrl: String
  name: String
  primaryConfigBranch: String
  primaryConfigRepo: String
  shardId: Int
  slug: String
  sourceControlUrl: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "organizations"
"""
input organizations_min_order_by {
  createdAt: order_by
  date_create: order_by
  date_delete: order_by
  deactivatedAt: order_by
  domain: order_by
  id: order_by
  logoUrl: order_by
  mqlServerUrl: order_by
  name: order_by
  primaryConfigBranch: order_by
  primaryConfigRepo: order_by
  shardId: order_by
  slug: order_by
  sourceControlUrl: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "organizations"
"""
type organizations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [organizations!]!
}

"""
input type for inserting object relation for remote table "organizations"
"""
input organizations_obj_rel_insert_input {
  data: organizations_insert_input!
  on_conflict: organizations_on_conflict
}

"""
on conflict condition type for table "organizations"
"""
input organizations_on_conflict {
  constraint: organizations_constraint!
  update_columns: [organizations_update_column!]!
  where: organizations_bool_exp
}

"""
ordering options when selecting data from "organizations"
"""
input organizations_order_by {
  annotations_aggregate: annotations_aggregate_order_by
  api_keys_aggregate: api_keys_aggregate_order_by
  createdAt: order_by
  currentModel: model_current_order_by
  dashboards_aggregate: dashboards_aggregate_order_by
  dataSources_aggregate: org_data_sources_aggregate_order_by
  date_create: order_by
  date_delete: order_by
  deactivatedAt: order_by
  domain: order_by
  features_aggregate: organization_features_aggregate_order_by
  id: order_by
  isHosted: order_by
  logoUrl: order_by
  metricCollections_aggregate: metric_collections_aggregate_order_by
  metric_annotations_aggregate: metric_annotations_aggregate_order_by
  metric_approvals_aggregate: metric_approvals_aggregate_order_by
  metric_team_owners_aggregate: metric_team_owners_aggregate_order_by
  metric_views_aggregate: metric_view_aggregate_order_by
  metrics_aggregate: org_metrics_current_view_aggregate_order_by
  models_aggregate: models_aggregate_order_by
  mqlHeartbeats_aggregate: mql_heartbeats_aggregate_order_by
  mqlServerLogs: order_by
  mqlServerUrl: order_by
  mqlServers_aggregate: org_mql_servers_aggregate_order_by
  name: order_by
  primaryConfigBranch: order_by
  primaryConfigRepo: order_by
  question_directed_tos_aggregate: question_directed_to_aggregate_order_by
  question_likes_aggregate: question_likes_aggregate_order_by
  question_replies_aggregate: question_replies_aggregate_order_by
  questions_aggregate: questions_aggregate_order_by
  savedQueries_aggregate: saved_queries_aggregate_order_by
  shardId: order_by
  slug: order_by
  sourceControlUrl: order_by
  team_members_aggregate: team_members_aggregate_order_by
  teams_aggregate: teams_aggregate_order_by
  updatedAt: order_by
  user_prefs_aggregate: user_prefs_aggregate_order_by
  user_roles_aggregate: user_roles_aggregate_order_by
  users_aggregate: users_aggregate_order_by
}

"""
primary key columns input for table: "organizations"
"""
input organizations_pk_columns_input {
  """A unique identifier for the `Organization`"""
  id: Int!
}

"""
select columns of table "organizations"
"""
enum organizations_select_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_delete

  """column name"""
  deactivatedAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  isHosted

  """column name"""
  logoUrl

  """column name"""
  mqlServerLogs

  """column name"""
  mqlServerUrl

  """column name"""
  name

  """column name"""
  primaryConfigBranch

  """column name"""
  primaryConfigRepo

  """column name"""
  shardId

  """column name"""
  slug

  """column name"""
  sourceControlUrl

  """column name"""
  updatedAt
}

"""
input type for updating data in table "organizations"
"""
input organizations_set_input {
  createdAt: timestamptz
  date_create: Int
  date_delete: Int
  deactivatedAt: timestamptz
  domain: String
  id: Int
  isHosted: Boolean
  logoUrl: String
  mqlServerLogs: org_mql_server_logs_types_enum
  mqlServerUrl: String
  name: String
  primaryConfigBranch: String
  primaryConfigRepo: String
  shardId: Int
  slug: String
  sourceControlUrl: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type organizations_stddev_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by stddev() on columns of table "organizations"
"""
input organizations_stddev_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""aggregate stddev_pop on columns"""
type organizations_stddev_pop_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by stddev_pop() on columns of table "organizations"
"""
input organizations_stddev_pop_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""aggregate stddev_samp on columns"""
type organizations_stddev_samp_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by stddev_samp() on columns of table "organizations"
"""
input organizations_stddev_samp_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""aggregate sum on columns"""
type organizations_sum_fields {
  date_create: Int
  date_delete: Int
  id: Int
  shardId: Int
}

"""
order by sum() on columns of table "organizations"
"""
input organizations_sum_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""
update columns of table "organizations"
"""
enum organizations_update_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_delete

  """column name"""
  deactivatedAt

  """column name"""
  domain

  """column name"""
  id

  """column name"""
  isHosted

  """column name"""
  logoUrl

  """column name"""
  mqlServerLogs

  """column name"""
  mqlServerUrl

  """column name"""
  name

  """column name"""
  primaryConfigBranch

  """column name"""
  primaryConfigRepo

  """column name"""
  shardId

  """column name"""
  slug

  """column name"""
  sourceControlUrl

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type organizations_var_pop_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by var_pop() on columns of table "organizations"
"""
input organizations_var_pop_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""aggregate var_samp on columns"""
type organizations_var_samp_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by var_samp() on columns of table "organizations"
"""
input organizations_var_samp_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""aggregate variance on columns"""
type organizations_variance_fields {
  date_create: Float
  date_delete: Float
  id: Float
  shardId: Float
}

"""
order by variance() on columns of table "organizations"
"""
input organizations_variance_order_by {
  date_create: order_by
  date_delete: order_by
  id: order_by
  shardId: order_by
}

"""
columns and relationships of "priorities"
"""
type priorities {
  comment: String
  value: String!
}

"""
aggregated selection of "priorities"
"""
type priorities_aggregate {
  aggregate: priorities_aggregate_fields
  nodes: [priorities!]!
}

"""
aggregate fields of "priorities"
"""
type priorities_aggregate_fields {
  count(columns: [priorities_select_column!], distinct: Boolean): Int
  max: priorities_max_fields
  min: priorities_min_fields
}

"""
order by aggregate values of table "priorities"
"""
input priorities_aggregate_order_by {
  count: order_by
  max: priorities_max_order_by
  min: priorities_min_order_by
}

"""
input type for inserting array relation for remote table "priorities"
"""
input priorities_arr_rel_insert_input {
  data: [priorities_insert_input!]!
  on_conflict: priorities_on_conflict
}

"""
Boolean expression to filter rows from the table "priorities". All fields are combined with a logical 'AND'.
"""
input priorities_bool_exp {
  _and: [priorities_bool_exp]
  _not: priorities_bool_exp
  _or: [priorities_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "priorities"
"""
enum priorities_constraint {
  """unique or primary key constraint"""
  priorities_name_key

  """unique or primary key constraint"""
  priorities_pkey
}

enum priorities_enum {
  CRITICAL
  HIGH
  LOW
  MEDIUM
  NO_PRIORITY
}

"""
expression to compare columns of type priorities_enum. All fields are combined with logical 'AND'.
"""
input priorities_enum_comparison_exp {
  _eq: priorities_enum
  _in: [priorities_enum!]
  _is_null: Boolean
  _neq: priorities_enum
  _nin: [priorities_enum!]
}

"""
input type for inserting data into table "priorities"
"""
input priorities_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type priorities_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "priorities"
"""
input priorities_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type priorities_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "priorities"
"""
input priorities_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "priorities"
"""
type priorities_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [priorities!]!
}

"""
input type for inserting object relation for remote table "priorities"
"""
input priorities_obj_rel_insert_input {
  data: priorities_insert_input!
  on_conflict: priorities_on_conflict
}

"""
on conflict condition type for table "priorities"
"""
input priorities_on_conflict {
  constraint: priorities_constraint!
  update_columns: [priorities_update_column!]!
  where: priorities_bool_exp
}

"""
ordering options when selecting data from "priorities"
"""
input priorities_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "priorities"
"""
input priorities_pk_columns_input {
  value: String!
}

"""
select columns of table "priorities"
"""
enum priorities_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "priorities"
"""
input priorities_set_input {
  comment: String
  value: String
}

"""
update columns of table "priorities"
"""
enum priorities_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""query root"""
type query_root {
  """fetch data from the table: "annotations" using primary key columns"""
  annotation(
    """ID field to identify an Annotation"""
    id: Int!
  ): annotations

  """
  fetch data from the table: "annotations"
  """
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """
  fetch aggregated fields from the table: "annotations"
  """
  annotationsAggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!

  """fetch data from the table: "api_keys" using primary key columns"""
  apiKey(
    """
    The first few characters of the `ApiKey`. Useful for identifying the key without revealing it entirely.
    """
    prefix: String!
  ): api_keys

  """
  fetch data from the table: "api_keys"
  """
  apiKeys(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): [api_keys!]!

  """
  fetch aggregated fields from the table: "api_keys"
  """
  apiKeysAggregate(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): api_keys_aggregate!
  auth0Profile(auth0Id: String!): Auth0Profile

  """
  fetch data from the table: "branch_metadatas"
  """
  branch_metadatas(
    """distinct select on columns"""
    distinct_on: [branch_metadatas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [branch_metadatas_order_by!]

    """filter the rows returned"""
    where: branch_metadatas_bool_exp
  ): [branch_metadatas!]!

  """
  fetch aggregated fields from the table: "branch_metadatas"
  """
  branch_metadatas_aggregate(
    """distinct select on columns"""
    distinct_on: [branch_metadatas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [branch_metadatas_order_by!]

    """filter the rows returned"""
    where: branch_metadatas_bool_exp
  ): branch_metadatas_aggregate!

  """
  fetch data from the table: "branch_metadatas" using primary key columns
  """
  branch_metadatas_by_pk(id: Int!): branch_metadatas

  """fetch data from the table: "dashboards" using primary key columns"""
  dashboard(id: Int!): dashboards

  """
  fetch data from the table: "dashboard_item_configs" using primary key columns
  """
  dashboardItemConfig(id: Int!): dashboard_item_configs

  """
  fetch data from the table: "dashboard_item_configs"
  """
  dashboardItemConfigs(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): [dashboard_item_configs!]!

  """
  fetch aggregated fields from the table: "dashboard_item_configs"
  """
  dashboardItemConfigsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): dashboard_item_configs_aggregate!

  """
  fetch data from the table: "dashboard_layouts" using primary key columns
  """
  dashboardLayout(value: String!): dashboard_layouts

  """
  fetch data from the table: "dashboard_layouts"
  """
  dashboardLayouts(
    """distinct select on columns"""
    distinct_on: [dashboard_layouts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_layouts_order_by!]

    """filter the rows returned"""
    where: dashboard_layouts_bool_exp
  ): [dashboard_layouts!]!

  """
  fetch data from the table: "dashboard_renderable_types" using primary key columns
  """
  dashboardRenderableType(value: String!): dashboard_renderable_types

  """
  fetch data from the table: "dashboard_renderable_types"
  """
  dashboardRenderableTypes(
    """distinct select on columns"""
    distinct_on: [dashboard_renderable_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_renderable_types_order_by!]

    """filter the rows returned"""
    where: dashboard_renderable_types_bool_exp
  ): [dashboard_renderable_types!]!

  """
  fetch data from the table: "dashboard_sections" using primary key columns
  """
  dashboardSection(id: Int!): dashboard_sections

  """
  fetch data from the table: "dashboard_section_types" using primary key columns
  """
  dashboardSectionType(value: String!): dashboard_section_types

  """
  fetch data from the table: "dashboard_section_types"
  """
  dashboardSectionTypes(
    """distinct select on columns"""
    distinct_on: [dashboard_section_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_section_types_order_by!]

    """filter the rows returned"""
    where: dashboard_section_types_bool_exp
  ): [dashboard_section_types!]!

  """
  fetch data from the table: "dashboard_sections"
  """
  dashboardSections(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): [dashboard_sections!]!

  """
  fetch aggregated fields from the table: "dashboard_sections"
  """
  dashboardSectionsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): dashboard_sections_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_layouts"
  """
  dashboard_layouts_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_layouts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_layouts_order_by!]

    """filter the rows returned"""
    where: dashboard_layouts_bool_exp
  ): dashboard_layouts_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_renderable_types"
  """
  dashboard_renderable_types_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_renderable_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_renderable_types_order_by!]

    """filter the rows returned"""
    where: dashboard_renderable_types_bool_exp
  ): dashboard_renderable_types_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_section_types"
  """
  dashboard_section_types_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_section_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_section_types_order_by!]

    """filter the rows returned"""
    where: dashboard_section_types_bool_exp
  ): dashboard_section_types_aggregate!

  """
  fetch data from the table: "dashboards"
  """
  dashboards(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): [dashboards!]!

  """
  fetch aggregated fields from the table: "dashboards"
  """
  dashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): dashboards_aggregate!

  """
  fetch data from the table: "org_data_sources" using primary key columns
  """
  dataSource(id: Int!): org_data_sources

  """
  fetch data from the table: "data_source_versions" using primary key columns
  """
  dataSourceVersion(id: Int!): data_source_versions

  """
  fetch data from the table: "data_source_versions"
  """
  dataSourceVersions(
    """distinct select on columns"""
    distinct_on: [data_source_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_source_versions_order_by!]

    """filter the rows returned"""
    where: data_source_versions_bool_exp
  ): [data_source_versions!]!

  """
  fetch aggregated fields from the table: "data_source_versions"
  """
  dataSourceVersionsAggregate(
    """distinct select on columns"""
    distinct_on: [data_source_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_source_versions_order_by!]

    """filter the rows returned"""
    where: data_source_versions_bool_exp
  ): data_source_versions_aggregate!

  """
  fetch data from the table: "org_data_sources"
  """
  dataSources(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): [org_data_sources!]!

  """
  fetch aggregated fields from the table: "org_data_sources"
  """
  dataSourcesAggregate(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): org_data_sources_aggregate!

  """
  fetch data from the table: "dw_engines"
  """
  dw_engines(
    """distinct select on columns"""
    distinct_on: [dw_engines_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dw_engines_order_by!]

    """filter the rows returned"""
    where: dw_engines_bool_exp
  ): [dw_engines!]!

  """
  fetch aggregated fields from the table: "dw_engines"
  """
  dw_engines_aggregate(
    """distinct select on columns"""
    distinct_on: [dw_engines_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dw_engines_order_by!]

    """filter the rows returned"""
    where: dw_engines_bool_exp
  ): dw_engines_aggregate!

  """fetch data from the table: "dw_engines" using primary key columns"""
  dw_engines_by_pk(value: String!): dw_engines

  """fetch data from the table: "features" using primary key columns"""
  feature(id: Int!): features

  """
  fetch data from the table: "features"
  """
  features(
    """distinct select on columns"""
    distinct_on: [features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [features_order_by!]

    """filter the rows returned"""
    where: features_bool_exp
  ): [features!]!

  """
  fetch aggregated fields from the table: "features"
  """
  featuresAggregate(
    """distinct select on columns"""
    distinct_on: [features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [features_order_by!]

    """filter the rows returned"""
    where: features_bool_exp
  ): features_aggregate!
  latestMqlServer: MQLServerVersion

  """
  execute function "me" which returns "users"
  """
  me(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  execute function "me" and query aggregates on result of table type "users"
  """
  me_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """
  fetch data from the table: "metric_annotations" using primary key columns
  """
  metricAnnotation(id: Int!): metric_annotations

  """
  fetch data from the table: "metric_annotations"
  """
  metricAnnotations(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): [metric_annotations!]!

  """
  fetch aggregated fields from the table: "metric_annotations"
  """
  metricAnnotationsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): metric_annotations_aggregate!

  """
  fetch data from the table: "metric_approvals" using primary key columns
  """
  metricApproval(id: Int!): metric_approvals

  """
  fetch data from the table: "metric_approvals"
  """
  metricApprovals(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): [metric_approvals!]!

  """
  fetch aggregated fields from the table: "metric_approvals"
  """
  metricApprovalsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): metric_approvals_aggregate!

  """
  fetch data from the table: "org_metrics_current_view" using primary key columns
  """
  metricByIdTemp(id: Int!): org_metrics_current_view

  """
  fetch data from the table: "metric_collections" using primary key columns
  """
  metricCollection(id: Int!): metric_collections

  """
  fetch data from the table: "metric_collection_metrics" using primary key columns
  """
  metricCollectionMetric(id: Int!): metric_collection_metrics

  """
  fetch data from the table: "metric_collection_metrics"
  """
  metricCollectionMetrics(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): [metric_collection_metrics!]!

  """
  fetch aggregated fields from the table: "metric_collection_metrics"
  """
  metricCollectionMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): metric_collection_metrics_aggregate!

  """
  fetch data from the table: "metric_collection_view" using primary key columns
  """
  metricCollectionView(id: Int!): metric_collection_view

  """
  fetch aggregated fields from the table: "metric_collection_view"
  """
  metricCollectionViewAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): metric_collection_view_aggregate!

  """
  fetch data from the table: "metric_collection_view"
  """
  metricCollectionViews(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): [metric_collection_view!]!

  """
  fetch data from the table: "metric_collections"
  """
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): [metric_collections!]!

  """
  fetch aggregated fields from the table: "metric_collections"
  """
  metricCollectionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): metric_collections_aggregate!

  """
  fetch data from the table: "metric_current_description"
  """
  metricCurrentDescriptions(
    """distinct select on columns"""
    distinct_on: [metric_current_description_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_current_description_order_by!]

    """filter the rows returned"""
    where: metric_current_description_bool_exp
  ): [metric_current_description!]!

  """
  fetch data from the table: "metric_descriptions" using primary key columns
  """
  metricDescription(id: Int!): metric_descriptions

  """
  fetch data from the table: "metric_descriptions"
  """
  metricDescriptions(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): [metric_descriptions!]!

  """
  fetch aggregated fields from the table: "metric_descriptions"
  """
  metricDescriptionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): metric_descriptions_aggregate!

  """
  fetch data from the table: "metric_team_owners" using primary key columns
  """
  metricTeamOwner(id: Int!): metric_team_owners

  """
  fetch data from the table: "metric_team_owners"
  """
  metricTeamOwners(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): [metric_team_owners!]!

  """
  fetch aggregated fields from the table: "metric_team_owners"
  """
  metricTeamOwnersAggregate(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): metric_team_owners_aggregate!

  """
  fetch data from the table: "metric_user_owners" using primary key columns
  """
  metricUserOwner(id: Int!): metric_user_owners

  """
  fetch data from the table: "metric_user_owners"
  """
  metricUserOwners(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): [metric_user_owners!]!

  """
  fetch aggregated fields from the table: "metric_user_owners"
  """
  metricUserOwnersAggregate(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): metric_user_owners_aggregate!

  """fetch data from the table: "metric_versions" using primary key columns"""
  metricVersion(id: bigint!): metric_versions

  """
  fetch data from the table: "metric_versions"
  """
  metricVersions(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): [metric_versions!]!

  """
  fetch aggregated fields from the table: "metric_versions"
  """
  metricVersionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): metric_versions_aggregate!

  """
  fetch data from the table: "metric_view"
  """
  metricViews(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): [metric_view!]!

  """
  fetch aggregated fields from the table: "metric_view"
  """
  metricViewsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): metric_view_aggregate!

  """
  fetch aggregated fields from the table: "metric_current_description"
  """
  metric_current_description_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_current_description_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_current_description_order_by!]

    """filter the rows returned"""
    where: metric_current_description_bool_exp
  ): metric_current_description_aggregate!

  """
  fetch data from the table: "metric_lineage_data_sources"
  """
  metric_lineage_data_sources(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): [metric_lineage_data_sources!]!

  """
  fetch aggregated fields from the table: "metric_lineage_data_sources"
  """
  metric_lineage_data_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): metric_lineage_data_sources_aggregate!

  """
  fetch data from the table: "metric_lineage_data_sources" using primary key columns
  """
  metric_lineage_data_sources_by_pk(id: Int!): metric_lineage_data_sources

  """
  fetch data from the table: "org_metrics_current_view"
  """
  metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """
  fetch aggregated fields from the table: "org_metrics_current_view"
  """
  metricsAggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """fetch data from the table: "models" using primary key columns"""
  model(id: bigint!): models

  """
  fetch data from the table: "model_data_sources" using primary key columns
  """
  modelDataSource(dataSourceVersionId: Int!, modelId: Int!): model_data_sources

  """
  fetch data from the table: "model_data_sources"
  """
  modelDataSources(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): [model_data_sources!]!

  """
  fetch aggregated fields from the table: "model_data_sources"
  """
  modelDataSourcesAggregate(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): model_data_sources_aggregate!

  """fetch data from the table: "model_metrics" using primary key columns"""
  modelMetric(metricId: bigint!, metricVersionId: bigint!, modelId: bigint!): model_metrics

  """
  fetch data from the table: "model_metrics"
  """
  modelMetrics(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): [model_metrics!]!

  """
  fetch aggregated fields from the table: "model_metrics"
  """
  modelMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): model_metrics_aggregate!

  """
  fetch data from the table: "model_current"
  """
  model_current(
    """distinct select on columns"""
    distinct_on: [model_current_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_current_order_by!]

    """filter the rows returned"""
    where: model_current_bool_exp
  ): [model_current!]!

  """
  fetch aggregated fields from the table: "model_current"
  """
  model_current_aggregate(
    """distinct select on columns"""
    distinct_on: [model_current_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_current_order_by!]

    """filter the rows returned"""
    where: model_current_bool_exp
  ): model_current_aggregate!

  """
  fetch data from the table: "models"
  """
  models(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): [models!]!

  """
  fetch aggregated fields from the table: "models"
  """
  modelsAggregate(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): models_aggregate!

  """fetch data from the table: "mql_heartbeats" using primary key columns"""
  mqlHeartbeat(id: Int!): mql_heartbeats

  """
  fetch data from the table: "mql_heartbeats"
  """
  mqlHeartbeats(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): [mql_heartbeats!]!

  """
  fetch aggregated fields from the table: "mql_heartbeats"
  """
  mqlHeartbeatsAggregate(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): mql_heartbeats_aggregate!
  mqlServerUrl: String

  """
  execute function "my_most_viewed_metrics" which returns "org_metrics_current_view"
  """
  my_most_viewed_metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """
  execute function "my_most_viewed_metrics" and query aggregates on result of table type "org_metrics_current_view"
  """
  my_most_viewed_metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """
  execute function "my_org" which returns "organizations"
  """
  my_org(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  execute function "my_org" and query aggregates on result of table type "organizations"
  """
  my_org_aggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """fetch data from the table: "org_mql_servers" using primary key columns"""
  orgMqlServer(id: Int!): org_mql_servers

  """
  fetch data from the table: "org_mql_servers"
  """
  orgMqlServers(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): [org_mql_servers!]!

  """
  fetch aggregated fields from the table: "org_mql_servers"
  """
  orgMqlServersAggregate(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): org_mql_servers_aggregate!

  """
  fetch data from the table: "org_mql_server_logs_types"
  """
  org_mql_server_logs_types(
    """distinct select on columns"""
    distinct_on: [org_mql_server_logs_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_server_logs_types_order_by!]

    """filter the rows returned"""
    where: org_mql_server_logs_types_bool_exp
  ): [org_mql_server_logs_types!]!

  """
  fetch aggregated fields from the table: "org_mql_server_logs_types"
  """
  org_mql_server_logs_types_aggregate(
    """distinct select on columns"""
    distinct_on: [org_mql_server_logs_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_server_logs_types_order_by!]

    """filter the rows returned"""
    where: org_mql_server_logs_types_bool_exp
  ): org_mql_server_logs_types_aggregate!

  """
  fetch data from the table: "org_mql_server_logs_types" using primary key columns
  """
  org_mql_server_logs_types_by_pk(value: String!): org_mql_server_logs_types

  """fetch data from the table: "organizations" using primary key columns"""
  organization(
    """A unique identifier for the `Organization`"""
    id: Int!
  ): organizations

  """
  fetch data from the table: "organization_features" using primary key columns
  """
  organizationFeature(featureId: Int!, organizationId: Int!): organization_features

  """
  fetch data from the table: "organization_features"
  """
  organizationFeatures(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): [organization_features!]!

  """
  fetch aggregated fields from the table: "organization_features"
  """
  organizationFeaturesAggregate(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): organization_features_aggregate!

  """
  fetch data from the table: "organizations"
  """
  organizations(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  fetch aggregated fields from the table: "organizations"
  """
  organizationsAggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """
  fetch data from the table: "priorities"
  """
  priorities(
    """distinct select on columns"""
    distinct_on: [priorities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [priorities_order_by!]

    """filter the rows returned"""
    where: priorities_bool_exp
  ): [priorities!]!

  """
  fetch aggregated fields from the table: "priorities"
  """
  priorities_aggregate(
    """distinct select on columns"""
    distinct_on: [priorities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [priorities_order_by!]

    """filter the rows returned"""
    where: priorities_bool_exp
  ): priorities_aggregate!

  """fetch data from the table: "priorities" using primary key columns"""
  priorities_by_pk(value: String!): priorities

  """fetch data from the table: "questions" using primary key columns"""
  question(
    """The primary key for the `Question`"""
    id: Int!
  ): questions

  """
  fetch data from the table: "question_directed_to"
  """
  questionDirectedTo(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """
  fetch aggregated fields from the table: "question_directed_to"
  """
  questionDirectedToAggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """
  fetch data from the table: "question_directed_to" using primary key columns
  """
  questionDirectedToByPK(
    """Unique identifier for a target to whom the Question is directed"""
    id: Int!
  ): question_directed_to

  """fetch data from the table: "question_likes" using primary key columns"""
  questionLike(
    """A primary identifier for the Question Like"""
    id: Int!
  ): question_likes

  """
  fetch data from the table: "question_likes"
  """
  questionLikes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """
  fetch aggregated fields from the table: "question_likes"
  """
  questionLikesAggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """
  fetch data from the table: "question_replies"
  """
  questionReplies(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): [question_replies!]!

  """
  fetch aggregated fields from the table: "question_replies"
  """
  questionRepliesAggregate(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): question_replies_aggregate!

  """
  fetch data from the table: "question_replies" using primary key columns
  """
  questionReply(
    """A unique identifier for the Question Reply"""
    id: Int!
  ): question_replies

  """
  fetch data from the table: "questions"
  """
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """
  fetch aggregated fields from the table: "questions"
  """
  questionsAggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """
  fetch data from the table: "saved_queries"
  """
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): [saved_queries!]!

  """
  fetch aggregated fields from the table: "saved_queries"
  """
  savedQueriesAggregate(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): saved_queries_aggregate!

  """fetch data from the table: "saved_queries" using primary key columns"""
  savedQuery(id: Int!): saved_queries

  """
  fetch data from the table: "saved_query_metrics" using primary key columns
  """
  savedQueryMetric(id: Int!): saved_query_metrics

  """
  fetch data from the table: "saved_query_metrics"
  """
  savedQueryMetrics(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): [saved_query_metrics!]!

  """
  fetch aggregated fields from the table: "saved_query_metrics"
  """
  savedQueryMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): saved_query_metrics_aggregate!

  """fetch data from the table: "teams" using primary key columns"""
  team(
    """A unique identifier for a Team"""
    id: Int!
  ): teams

  """fetch data from the table: "team_dashboards" using primary key columns"""
  teamDashboard(dashboardId: Int!, team_id: Int!): team_dashboards

  """
  fetch data from the table: "team_dashboards"
  """
  teamDashboards(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): [team_dashboards!]!

  """
  fetch aggregated fields from the table: "team_dashboards"
  """
  teamDashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): team_dashboards_aggregate!

  """fetch data from the table: "team_members" using primary key columns"""
  teamMember(id: Int!): team_members

  """
  fetch data from the table: "team_members"
  """
  teamMembers(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): [team_members!]!

  """
  fetch aggregated fields from the table: "team_members"
  """
  teamMembersAggregate(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): team_members_aggregate!

  """
  fetch aggregated fields from the table: "team_views"
  """
  teamViewsAggregate(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): team_views_aggregate!

  """
  fetch data from the table: "team_page_theme_colors"
  """
  team_page_theme_colors(
    """distinct select on columns"""
    distinct_on: [team_page_theme_colors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_page_theme_colors_order_by!]

    """filter the rows returned"""
    where: team_page_theme_colors_bool_exp
  ): [team_page_theme_colors!]!

  """
  fetch aggregated fields from the table: "team_page_theme_colors"
  """
  team_page_theme_colors_aggregate(
    """distinct select on columns"""
    distinct_on: [team_page_theme_colors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_page_theme_colors_order_by!]

    """filter the rows returned"""
    where: team_page_theme_colors_bool_exp
  ): team_page_theme_colors_aggregate!

  """
  fetch data from the table: "team_page_theme_colors" using primary key columns
  """
  team_page_theme_colors_by_pk(value: String!): team_page_theme_colors

  """
  fetch data from the table: "team_views"
  """
  team_views(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): [team_views!]!

  """fetch data from the table: "team_views" using primary key columns"""
  team_views_by_pk(id: Int!): team_views

  """
  fetch data from the table: "teams"
  """
  teams(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): [teams!]!

  """
  fetch aggregated fields from the table: "teams"
  """
  teamsAggregate(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): teams_aggregate!

  """
  fetch data from the table: "unsubscribes"
  """
  unsubscribes(
    """distinct select on columns"""
    distinct_on: [unsubscribes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unsubscribes_order_by!]

    """filter the rows returned"""
    where: unsubscribes_bool_exp
  ): [unsubscribes!]!

  """
  fetch aggregated fields from the table: "unsubscribes"
  """
  unsubscribes_aggregate(
    """distinct select on columns"""
    distinct_on: [unsubscribes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unsubscribes_order_by!]

    """filter the rows returned"""
    where: unsubscribes_bool_exp
  ): unsubscribes_aggregate!

  """fetch data from the table: "unsubscribes" using primary key columns"""
  unsubscribes_by_pk(id: Int!): unsubscribes

  """fetch data from the table: "users" using primary key columns"""
  user(id: Int!): users

  """fetch data from the table: "user_dashboards" using primary key columns"""
  userDashboard(dashboardId: Int!, userId: Int!): user_dashboards

  """
  fetch data from the table: "user_dashboards"
  """
  userDashboards(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): [user_dashboards!]!

  """
  fetch aggregated fields from the table: "user_dashboards"
  """
  userDashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): user_dashboards_aggregate!

  """fetch data from the table: "user_features" using primary key columns"""
  userFeature(featureId: Int!, userId: Int!): user_features

  """
  fetch data from the table: "user_features"
  """
  userFeatures(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): [user_features!]!

  """
  fetch aggregated fields from the table: "user_features"
  """
  userFeaturesAggregate(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): user_features_aggregate!

  """fetch data from the table: "user_prefs" using primary key columns"""
  userPreference(id: Int!): user_prefs

  """
  fetch data from the table: "user_prefs"
  """
  userPreferences(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): [user_prefs!]!

  """
  fetch aggregated fields from the table: "user_prefs"
  """
  userPreferencesAggregate(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): user_prefs_aggregate!

  """fetch data from the table: "user_roles" using primary key columns"""
  userRole(id: Int!): user_roles

  """
  fetch data from the table: "user_roles"
  """
  userRoles(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): [user_roles!]!

  """
  fetch aggregated fields from the table: "user_roles"
  """
  userRolesAggregate(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): user_roles_aggregate!

  """
  fetch data from the table: "user_role_types"
  """
  user_role_types(
    """distinct select on columns"""
    distinct_on: [user_role_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_role_types_order_by!]

    """filter the rows returned"""
    where: user_role_types_bool_exp
  ): [user_role_types!]!

  """
  fetch aggregated fields from the table: "user_role_types"
  """
  user_role_types_aggregate(
    """distinct select on columns"""
    distinct_on: [user_role_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_role_types_order_by!]

    """filter the rows returned"""
    where: user_role_types_bool_exp
  ): user_role_types_aggregate!

  """fetch data from the table: "user_role_types" using primary key columns"""
  user_role_types_by_pk(value: String!): user_role_types

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  usersAggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!
}

"""
Indicates to which User or Team a Question is directed.


columns and relationships of "question_directed_to"

"""
type question_directed_to {
  """Timestamp indicated when a Question Directed To entry was created"""
  createdAt: timestamptz
  entity_id: Int
  entity_type: entity

  """Unique identifier for a target to whom the Question is directed"""
  id: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  question: questions!
  questionid: Int!

  """An object relationship"""
  team: teams
  teamId: Int

  """An object relationship"""
  user: users
  userId: Int
}

"""
aggregated selection of "question_directed_to"
"""
type question_directed_to_aggregate {
  aggregate: question_directed_to_aggregate_fields
  nodes: [question_directed_to!]!
}

"""
aggregate fields of "question_directed_to"
"""
type question_directed_to_aggregate_fields {
  avg: question_directed_to_avg_fields
  count(columns: [question_directed_to_select_column!], distinct: Boolean): Int
  max: question_directed_to_max_fields
  min: question_directed_to_min_fields
  stddev: question_directed_to_stddev_fields
  stddev_pop: question_directed_to_stddev_pop_fields
  stddev_samp: question_directed_to_stddev_samp_fields
  sum: question_directed_to_sum_fields
  var_pop: question_directed_to_var_pop_fields
  var_samp: question_directed_to_var_samp_fields
  variance: question_directed_to_variance_fields
}

"""
order by aggregate values of table "question_directed_to"
"""
input question_directed_to_aggregate_order_by {
  avg: question_directed_to_avg_order_by
  count: order_by
  max: question_directed_to_max_order_by
  min: question_directed_to_min_order_by
  stddev: question_directed_to_stddev_order_by
  stddev_pop: question_directed_to_stddev_pop_order_by
  stddev_samp: question_directed_to_stddev_samp_order_by
  sum: question_directed_to_sum_order_by
  var_pop: question_directed_to_var_pop_order_by
  var_samp: question_directed_to_var_samp_order_by
  variance: question_directed_to_variance_order_by
}

"""
input type for inserting array relation for remote table "question_directed_to"
"""
input question_directed_to_arr_rel_insert_input {
  data: [question_directed_to_insert_input!]!
  on_conflict: question_directed_to_on_conflict
}

"""aggregate avg on columns"""
type question_directed_to_avg_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by avg() on columns of table "question_directed_to"
"""
input question_directed_to_avg_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "question_directed_to". All fields are combined with a logical 'AND'.
"""
input question_directed_to_bool_exp {
  _and: [question_directed_to_bool_exp]
  _not: question_directed_to_bool_exp
  _or: [question_directed_to_bool_exp]
  createdAt: timestamptz_comparison_exp
  entity_id: Int_comparison_exp
  entity_type: entity_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  question: questions_bool_exp
  questionid: Int_comparison_exp
  team: teams_bool_exp
  teamId: Int_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "question_directed_to"
"""
enum question_directed_to_constraint {
  """unique or primary key constraint"""
  question_directed_to_id_key

  """unique or primary key constraint"""
  question_directed_to_pkey
}

"""
input type for incrementing integer column in table "question_directed_to"
"""
input question_directed_to_inc_input {
  entity_id: Int
  id: Int
  organizationId: Int
  questionid: Int
  teamId: Int
  userId: Int
}

"""
input type for inserting data into table "question_directed_to"
"""
input question_directed_to_insert_input {
  createdAt: timestamptz
  entity_id: Int
  entity_type: entity
  id: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  question: questions_obj_rel_insert_input
  questionid: Int
  team: teams_obj_rel_insert_input
  teamId: Int
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type question_directed_to_max_fields {
  createdAt: timestamptz
  entity_id: Int
  id: Int
  organizationId: Int
  questionid: Int
  teamId: Int
  userId: Int
}

"""
order by max() on columns of table "question_directed_to"
"""
input question_directed_to_max_order_by {
  createdAt: order_by
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type question_directed_to_min_fields {
  createdAt: timestamptz
  entity_id: Int
  id: Int
  organizationId: Int
  questionid: Int
  teamId: Int
  userId: Int
}

"""
order by min() on columns of table "question_directed_to"
"""
input question_directed_to_min_order_by {
  createdAt: order_by
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""
response of any mutation on the table "question_directed_to"
"""
type question_directed_to_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [question_directed_to!]!
}

"""
input type for inserting object relation for remote table "question_directed_to"
"""
input question_directed_to_obj_rel_insert_input {
  data: question_directed_to_insert_input!
  on_conflict: question_directed_to_on_conflict
}

"""
on conflict condition type for table "question_directed_to"
"""
input question_directed_to_on_conflict {
  constraint: question_directed_to_constraint!
  update_columns: [question_directed_to_update_column!]!
  where: question_directed_to_bool_exp
}

"""
ordering options when selecting data from "question_directed_to"
"""
input question_directed_to_order_by {
  createdAt: order_by
  entity_id: order_by
  entity_type: order_by
  id: order_by
  organization: organizations_order_by
  organizationId: order_by
  question: questions_order_by
  questionid: order_by
  team: teams_order_by
  teamId: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "question_directed_to"
"""
input question_directed_to_pk_columns_input {
  """Unique identifier for a target to whom the Question is directed"""
  id: Int!
}

"""
select columns of table "question_directed_to"
"""
enum question_directed_to_select_column {
  """column name"""
  createdAt

  """column name"""
  entity_id

  """column name"""
  entity_type

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionid

  """column name"""
  teamId

  """column name"""
  userId
}

"""
input type for updating data in table "question_directed_to"
"""
input question_directed_to_set_input {
  createdAt: timestamptz
  entity_id: Int
  entity_type: entity
  id: Int
  organizationId: Int
  questionid: Int
  teamId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type question_directed_to_stddev_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by stddev() on columns of table "question_directed_to"
"""
input question_directed_to_stddev_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type question_directed_to_stddev_pop_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "question_directed_to"
"""
input question_directed_to_stddev_pop_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type question_directed_to_stddev_samp_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "question_directed_to"
"""
input question_directed_to_stddev_samp_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type question_directed_to_sum_fields {
  entity_id: Int
  id: Int
  organizationId: Int
  questionid: Int
  teamId: Int
  userId: Int
}

"""
order by sum() on columns of table "question_directed_to"
"""
input question_directed_to_sum_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""
update columns of table "question_directed_to"
"""
enum question_directed_to_update_column {
  """column name"""
  createdAt

  """column name"""
  entity_id

  """column name"""
  entity_type

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionid

  """column name"""
  teamId

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type question_directed_to_var_pop_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "question_directed_to"
"""
input question_directed_to_var_pop_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type question_directed_to_var_samp_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "question_directed_to"
"""
input question_directed_to_var_samp_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type question_directed_to_variance_fields {
  entity_id: Float
  id: Float
  organizationId: Float
  questionid: Float
  teamId: Float
  userId: Float
}

"""
order by variance() on columns of table "question_directed_to"
"""
input question_directed_to_variance_order_by {
  entity_id: order_by
  id: order_by
  organizationId: order_by
  questionid: order_by
  teamId: order_by
  userId: order_by
}

"""
Question Likes are signals that you think the Question being liked is important and worth focusing on


columns and relationships of "question_likes"

"""
type question_likes {
  """Timestamp indicating when the Question was liked"""
  createdAt: timestamptz

  """A primary identifier for the Question Like"""
  id: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  question: questions
  questionId: Int

  """An object relationship"""
  questionReply: question_replies
  questionReplyId: Int
  question_or_reply: questionorreply
  question_or_reply_id: Int

  """An object relationship"""
  user: users!
  userId: Int!
}

"""
aggregated selection of "question_likes"
"""
type question_likes_aggregate {
  aggregate: question_likes_aggregate_fields
  nodes: [question_likes!]!
}

"""
aggregate fields of "question_likes"
"""
type question_likes_aggregate_fields {
  avg: question_likes_avg_fields
  count(columns: [question_likes_select_column!], distinct: Boolean): Int
  max: question_likes_max_fields
  min: question_likes_min_fields
  stddev: question_likes_stddev_fields
  stddev_pop: question_likes_stddev_pop_fields
  stddev_samp: question_likes_stddev_samp_fields
  sum: question_likes_sum_fields
  var_pop: question_likes_var_pop_fields
  var_samp: question_likes_var_samp_fields
  variance: question_likes_variance_fields
}

"""
order by aggregate values of table "question_likes"
"""
input question_likes_aggregate_order_by {
  avg: question_likes_avg_order_by
  count: order_by
  max: question_likes_max_order_by
  min: question_likes_min_order_by
  stddev: question_likes_stddev_order_by
  stddev_pop: question_likes_stddev_pop_order_by
  stddev_samp: question_likes_stddev_samp_order_by
  sum: question_likes_sum_order_by
  var_pop: question_likes_var_pop_order_by
  var_samp: question_likes_var_samp_order_by
  variance: question_likes_variance_order_by
}

"""
input type for inserting array relation for remote table "question_likes"
"""
input question_likes_arr_rel_insert_input {
  data: [question_likes_insert_input!]!
  on_conflict: question_likes_on_conflict
}

"""aggregate avg on columns"""
type question_likes_avg_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by avg() on columns of table "question_likes"
"""
input question_likes_avg_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "question_likes". All fields are combined with a logical 'AND'.
"""
input question_likes_bool_exp {
  _and: [question_likes_bool_exp]
  _not: question_likes_bool_exp
  _or: [question_likes_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  question: questions_bool_exp
  questionId: Int_comparison_exp
  questionReply: question_replies_bool_exp
  questionReplyId: Int_comparison_exp
  question_or_reply: questionorreply_comparison_exp
  question_or_reply_id: Int_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "question_likes"
"""
enum question_likes_constraint {
  """unique or primary key constraint"""
  question_likes_id_key

  """unique or primary key constraint"""
  question_likes_pkey

  """unique or primary key constraint"""
  question_likes_user_id_question_id_key

  """unique or primary key constraint"""
  question_likes_user_id_question_reply_id_key
}

"""
input type for incrementing integer column in table "question_likes"
"""
input question_likes_inc_input {
  id: Int
  organizationId: Int
  questionId: Int
  questionReplyId: Int
  question_or_reply_id: Int
  userId: Int
}

"""
input type for inserting data into table "question_likes"
"""
input question_likes_insert_input {
  createdAt: timestamptz
  id: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  question: questions_obj_rel_insert_input
  questionId: Int
  questionReply: question_replies_obj_rel_insert_input
  questionReplyId: Int
  question_or_reply: questionorreply
  question_or_reply_id: Int
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type question_likes_max_fields {
  createdAt: timestamptz
  id: Int
  organizationId: Int
  questionId: Int
  questionReplyId: Int
  question_or_reply_id: Int
  userId: Int
}

"""
order by max() on columns of table "question_likes"
"""
input question_likes_max_order_by {
  createdAt: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate min on columns"""
type question_likes_min_fields {
  createdAt: timestamptz
  id: Int
  organizationId: Int
  questionId: Int
  questionReplyId: Int
  question_or_reply_id: Int
  userId: Int
}

"""
order by min() on columns of table "question_likes"
"""
input question_likes_min_order_by {
  createdAt: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""
response of any mutation on the table "question_likes"
"""
type question_likes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [question_likes!]!
}

"""
input type for inserting object relation for remote table "question_likes"
"""
input question_likes_obj_rel_insert_input {
  data: question_likes_insert_input!
  on_conflict: question_likes_on_conflict
}

"""
on conflict condition type for table "question_likes"
"""
input question_likes_on_conflict {
  constraint: question_likes_constraint!
  update_columns: [question_likes_update_column!]!
  where: question_likes_bool_exp
}

"""
ordering options when selecting data from "question_likes"
"""
input question_likes_order_by {
  createdAt: order_by
  id: order_by
  organization: organizations_order_by
  organizationId: order_by
  question: questions_order_by
  questionId: order_by
  questionReply: question_replies_order_by
  questionReplyId: order_by
  question_or_reply: order_by
  question_or_reply_id: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "question_likes"
"""
input question_likes_pk_columns_input {
  """A primary identifier for the Question Like"""
  id: Int!
}

"""
select columns of table "question_likes"
"""
enum question_likes_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionId

  """column name"""
  questionReplyId

  """column name"""
  question_or_reply

  """column name"""
  question_or_reply_id

  """column name"""
  userId
}

"""
input type for updating data in table "question_likes"
"""
input question_likes_set_input {
  createdAt: timestamptz
  id: Int
  organizationId: Int
  questionId: Int
  questionReplyId: Int
  question_or_reply: questionorreply
  question_or_reply_id: Int
  userId: Int
}

"""aggregate stddev on columns"""
type question_likes_stddev_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by stddev() on columns of table "question_likes"
"""
input question_likes_stddev_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type question_likes_stddev_pop_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "question_likes"
"""
input question_likes_stddev_pop_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type question_likes_stddev_samp_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "question_likes"
"""
input question_likes_stddev_samp_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type question_likes_sum_fields {
  id: Int
  organizationId: Int
  questionId: Int
  questionReplyId: Int
  question_or_reply_id: Int
  userId: Int
}

"""
order by sum() on columns of table "question_likes"
"""
input question_likes_sum_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""
update columns of table "question_likes"
"""
enum question_likes_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionId

  """column name"""
  questionReplyId

  """column name"""
  question_or_reply

  """column name"""
  question_or_reply_id

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type question_likes_var_pop_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by var_pop() on columns of table "question_likes"
"""
input question_likes_var_pop_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type question_likes_var_samp_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by var_samp() on columns of table "question_likes"
"""
input question_likes_var_samp_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type question_likes_variance_fields {
  id: Float
  organizationId: Float
  questionId: Float
  questionReplyId: Float
  question_or_reply_id: Float
  userId: Float
}

"""
order by variance() on columns of table "question_likes"
"""
input question_likes_variance_order_by {
  id: order_by
  organizationId: order_by
  questionId: order_by
  questionReplyId: order_by
  question_or_reply_id: order_by
  userId: order_by
}

"""
A reply from a User in answer to a Question


columns and relationships of "question_replies"

"""
type question_replies {
  """An object relationship"""
  author: users!
  authorId: Int!

  """Timestamp indicating when the Question Reply was created"""
  createdAt: timestamptz
  created_ts: Int

  """A unique identifier for the Question Reply"""
  id: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  question: questions!
  questionId: Int!

  """An array relationship"""
  questionLikes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """An aggregated array relationship"""
  questionLikes_aggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """The content of the Question Reply"""
  text: String!

  """Timestamp indicating when the Question Reply was last updated"""
  updatedAt: timestamptz

  """
  A computed field, executes function "user_has_liked_reply"
  """
  userHasLiked: Boolean
}

"""
aggregated selection of "question_replies"
"""
type question_replies_aggregate {
  aggregate: question_replies_aggregate_fields
  nodes: [question_replies!]!
}

"""
aggregate fields of "question_replies"
"""
type question_replies_aggregate_fields {
  avg: question_replies_avg_fields
  count(columns: [question_replies_select_column!], distinct: Boolean): Int
  max: question_replies_max_fields
  min: question_replies_min_fields
  stddev: question_replies_stddev_fields
  stddev_pop: question_replies_stddev_pop_fields
  stddev_samp: question_replies_stddev_samp_fields
  sum: question_replies_sum_fields
  var_pop: question_replies_var_pop_fields
  var_samp: question_replies_var_samp_fields
  variance: question_replies_variance_fields
}

"""
order by aggregate values of table "question_replies"
"""
input question_replies_aggregate_order_by {
  avg: question_replies_avg_order_by
  count: order_by
  max: question_replies_max_order_by
  min: question_replies_min_order_by
  stddev: question_replies_stddev_order_by
  stddev_pop: question_replies_stddev_pop_order_by
  stddev_samp: question_replies_stddev_samp_order_by
  sum: question_replies_sum_order_by
  var_pop: question_replies_var_pop_order_by
  var_samp: question_replies_var_samp_order_by
  variance: question_replies_variance_order_by
}

"""
input type for inserting array relation for remote table "question_replies"
"""
input question_replies_arr_rel_insert_input {
  data: [question_replies_insert_input!]!
  on_conflict: question_replies_on_conflict
}

"""aggregate avg on columns"""
type question_replies_avg_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by avg() on columns of table "question_replies"
"""
input question_replies_avg_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""
Boolean expression to filter rows from the table "question_replies". All fields are combined with a logical 'AND'.
"""
input question_replies_bool_exp {
  _and: [question_replies_bool_exp]
  _not: question_replies_bool_exp
  _or: [question_replies_bool_exp]
  author: users_bool_exp
  authorId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  created_ts: Int_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  question: questions_bool_exp
  questionId: Int_comparison_exp
  questionLikes: question_likes_bool_exp
  text: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "question_replies"
"""
enum question_replies_constraint {
  """unique or primary key constraint"""
  question_replies_pkey
}

"""
input type for incrementing integer column in table "question_replies"
"""
input question_replies_inc_input {
  authorId: Int
  created_ts: Int
  id: Int
  organizationId: Int
  questionId: Int
}

"""
input type for inserting data into table "question_replies"
"""
input question_replies_insert_input {
  author: users_obj_rel_insert_input
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  question: questions_obj_rel_insert_input
  questionId: Int
  questionLikes: question_likes_arr_rel_insert_input
  text: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type question_replies_max_fields {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  organizationId: Int
  questionId: Int
  text: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "question_replies"
"""
input question_replies_max_order_by {
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
  text: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type question_replies_min_fields {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  organizationId: Int
  questionId: Int
  text: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "question_replies"
"""
input question_replies_min_order_by {
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
  text: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "question_replies"
"""
type question_replies_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [question_replies!]!
}

"""
input type for inserting object relation for remote table "question_replies"
"""
input question_replies_obj_rel_insert_input {
  data: question_replies_insert_input!
  on_conflict: question_replies_on_conflict
}

"""
on conflict condition type for table "question_replies"
"""
input question_replies_on_conflict {
  constraint: question_replies_constraint!
  update_columns: [question_replies_update_column!]!
  where: question_replies_bool_exp
}

"""
ordering options when selecting data from "question_replies"
"""
input question_replies_order_by {
  author: users_order_by
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  organization: organizations_order_by
  organizationId: order_by
  question: questions_order_by
  questionId: order_by
  questionLikes_aggregate: question_likes_aggregate_order_by
  text: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "question_replies"
"""
input question_replies_pk_columns_input {
  """A unique identifier for the Question Reply"""
  id: Int!
}

"""
select columns of table "question_replies"
"""
enum question_replies_select_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionId

  """column name"""
  text

  """column name"""
  updatedAt
}

"""
input type for updating data in table "question_replies"
"""
input question_replies_set_input {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  organizationId: Int
  questionId: Int
  text: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type question_replies_stddev_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by stddev() on columns of table "question_replies"
"""
input question_replies_stddev_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""aggregate stddev_pop on columns"""
type question_replies_stddev_pop_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by stddev_pop() on columns of table "question_replies"
"""
input question_replies_stddev_pop_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""aggregate stddev_samp on columns"""
type question_replies_stddev_samp_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by stddev_samp() on columns of table "question_replies"
"""
input question_replies_stddev_samp_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""aggregate sum on columns"""
type question_replies_sum_fields {
  authorId: Int
  created_ts: Int
  id: Int
  organizationId: Int
  questionId: Int
}

"""
order by sum() on columns of table "question_replies"
"""
input question_replies_sum_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""
update columns of table "question_replies"
"""
enum question_replies_update_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  questionId

  """column name"""
  text

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type question_replies_var_pop_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by var_pop() on columns of table "question_replies"
"""
input question_replies_var_pop_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""aggregate var_samp on columns"""
type question_replies_var_samp_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by var_samp() on columns of table "question_replies"
"""
input question_replies_var_samp_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

"""aggregate variance on columns"""
type question_replies_variance_fields {
  authorId: Float
  created_ts: Float
  id: Float
  organizationId: Float
  questionId: Float
}

"""
order by variance() on columns of table "question_replies"
"""
input question_replies_variance_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  organizationId: order_by
  questionId: order_by
}

scalar questionorreply

"""
expression to compare columns of type questionorreply. All fields are combined with logical 'AND'.
"""
input questionorreply_comparison_exp {
  _eq: questionorreply
  _gt: questionorreply
  _gte: questionorreply
  _in: [questionorreply!]
  _is_null: Boolean
  _lt: questionorreply
  _lte: questionorreply
  _neq: questionorreply
  _nin: [questionorreply!]
}

"""
Questions are asked by team members about metrics. We record these discussions to provide future explorers with all the context behind a metric.


columns and relationships of "questions"

"""
type questions {
  """An object relationship"""
  author: users!
  authorId: Int!

  """Timestamp indicating when the `Question` was created."""
  createdAt: timestamptz
  created_ts: Int

  """The primary key for the `Question`"""
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view
  metricId: Int
  metricName: String!
  notified_at: timestamptz

  """An object relationship"""
  organization: organizations!
  organizationId: Int!
  priority: priorities_enum!

  """An array relationship"""
  questionDirectedTos(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """An aggregated array relationship"""
  questionDirectedTos_aggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """An array relationship"""
  questionLikes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """An aggregated array relationship"""
  questionLikes_aggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """An array relationship"""
  questionReplies(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): [question_replies!]!

  """An aggregated array relationship"""
  questionReplies_aggregate(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): question_replies_aggregate!
  resolved: Boolean

  """Timestamp indicating when the `Question` was resolved."""
  resolvedAt: timestamptz
  resolvedBy: Int
  resolved_ts: Int
  text: String!

  """Timestamp indicating the last time the `Question` was updated"""
  updatedAt: timestamptz

  """An object relationship"""
  userByResolvedBy: users

  """
  A computed field, executes function "user_has_liked_question"
  """
  userHasLiked: Boolean
}

"""
aggregated selection of "questions"
"""
type questions_aggregate {
  aggregate: questions_aggregate_fields
  nodes: [questions!]!
}

"""
aggregate fields of "questions"
"""
type questions_aggregate_fields {
  avg: questions_avg_fields
  count(columns: [questions_select_column!], distinct: Boolean): Int
  max: questions_max_fields
  min: questions_min_fields
  stddev: questions_stddev_fields
  stddev_pop: questions_stddev_pop_fields
  stddev_samp: questions_stddev_samp_fields
  sum: questions_sum_fields
  var_pop: questions_var_pop_fields
  var_samp: questions_var_samp_fields
  variance: questions_variance_fields
}

"""
order by aggregate values of table "questions"
"""
input questions_aggregate_order_by {
  avg: questions_avg_order_by
  count: order_by
  max: questions_max_order_by
  min: questions_min_order_by
  stddev: questions_stddev_order_by
  stddev_pop: questions_stddev_pop_order_by
  stddev_samp: questions_stddev_samp_order_by
  sum: questions_sum_order_by
  var_pop: questions_var_pop_order_by
  var_samp: questions_var_samp_order_by
  variance: questions_variance_order_by
}

"""
input type for inserting array relation for remote table "questions"
"""
input questions_arr_rel_insert_input {
  data: [questions_insert_input!]!
  on_conflict: questions_on_conflict
}

"""aggregate avg on columns"""
type questions_avg_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by avg() on columns of table "questions"
"""
input questions_avg_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""
Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'.
"""
input questions_bool_exp {
  _and: [questions_bool_exp]
  _not: questions_bool_exp
  _or: [questions_bool_exp]
  author: users_bool_exp
  authorId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  created_ts: Int_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  metricName: String_comparison_exp
  notified_at: timestamptz_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  priority: priorities_enum_comparison_exp
  questionDirectedTos: question_directed_to_bool_exp
  questionLikes: question_likes_bool_exp
  questionReplies: question_replies_bool_exp
  resolved: Boolean_comparison_exp
  resolvedAt: timestamptz_comparison_exp
  resolvedBy: Int_comparison_exp
  resolved_ts: Int_comparison_exp
  text: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
  userByResolvedBy: users_bool_exp
}

"""
unique or primary key constraints on table "questions"
"""
enum questions_constraint {
  """unique or primary key constraint"""
  questions_id_key

  """unique or primary key constraint"""
  questions_pkey
}

"""
input type for incrementing integer column in table "questions"
"""
input questions_inc_input {
  authorId: Int
  created_ts: Int
  id: Int
  metricId: Int
  organizationId: Int
  resolvedBy: Int
  resolved_ts: Int
}

"""
input type for inserting data into table "questions"
"""
input questions_insert_input {
  author: users_obj_rel_insert_input
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  metricName: String
  notified_at: timestamptz
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  priority: priorities_enum
  questionDirectedTos: question_directed_to_arr_rel_insert_input
  questionLikes: question_likes_arr_rel_insert_input
  questionReplies: question_replies_arr_rel_insert_input
  resolved: Boolean
  resolvedAt: timestamptz
  resolvedBy: Int
  resolved_ts: Int
  text: String
  updatedAt: timestamptz
  userByResolvedBy: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type questions_max_fields {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metricName: String
  notified_at: timestamptz
  organizationId: Int
  resolvedAt: timestamptz
  resolvedBy: Int
  resolved_ts: Int
  text: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "questions"
"""
input questions_max_order_by {
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  metricName: order_by
  notified_at: order_by
  organizationId: order_by
  resolvedAt: order_by
  resolvedBy: order_by
  resolved_ts: order_by
  text: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type questions_min_fields {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metricName: String
  notified_at: timestamptz
  organizationId: Int
  resolvedAt: timestamptz
  resolvedBy: Int
  resolved_ts: Int
  text: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "questions"
"""
input questions_min_order_by {
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  metricName: order_by
  notified_at: order_by
  organizationId: order_by
  resolvedAt: order_by
  resolvedBy: order_by
  resolved_ts: order_by
  text: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "questions"
"""
type questions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [questions!]!
}

"""
input type for inserting object relation for remote table "questions"
"""
input questions_obj_rel_insert_input {
  data: questions_insert_input!
  on_conflict: questions_on_conflict
}

"""
on conflict condition type for table "questions"
"""
input questions_on_conflict {
  constraint: questions_constraint!
  update_columns: [questions_update_column!]!
  where: questions_bool_exp
}

"""
ordering options when selecting data from "questions"
"""
input questions_order_by {
  author: users_order_by
  authorId: order_by
  createdAt: order_by
  created_ts: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  metricName: order_by
  notified_at: order_by
  organization: organizations_order_by
  organizationId: order_by
  priority: order_by
  questionDirectedTos_aggregate: question_directed_to_aggregate_order_by
  questionLikes_aggregate: question_likes_aggregate_order_by
  questionReplies_aggregate: question_replies_aggregate_order_by
  resolved: order_by
  resolvedAt: order_by
  resolvedBy: order_by
  resolved_ts: order_by
  text: order_by
  updatedAt: order_by
  userByResolvedBy: users_order_by
}

"""
primary key columns input for table: "questions"
"""
input questions_pk_columns_input {
  """The primary key for the `Question`"""
  id: Int!
}

"""
select columns of table "questions"
"""
enum questions_select_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metricName

  """column name"""
  notified_at

  """column name"""
  organizationId

  """column name"""
  priority

  """column name"""
  resolved

  """column name"""
  resolvedAt

  """column name"""
  resolvedBy

  """column name"""
  resolved_ts

  """column name"""
  text

  """column name"""
  updatedAt
}

"""
input type for updating data in table "questions"
"""
input questions_set_input {
  authorId: Int
  createdAt: timestamptz
  created_ts: Int
  id: Int
  metricId: Int
  metricName: String
  notified_at: timestamptz
  organizationId: Int
  priority: priorities_enum
  resolved: Boolean
  resolvedAt: timestamptz
  resolvedBy: Int
  resolved_ts: Int
  text: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type questions_stddev_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by stddev() on columns of table "questions"
"""
input questions_stddev_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""aggregate stddev_pop on columns"""
type questions_stddev_pop_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by stddev_pop() on columns of table "questions"
"""
input questions_stddev_pop_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""aggregate stddev_samp on columns"""
type questions_stddev_samp_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by stddev_samp() on columns of table "questions"
"""
input questions_stddev_samp_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""aggregate sum on columns"""
type questions_sum_fields {
  authorId: Int
  created_ts: Int
  id: Int
  metricId: Int
  organizationId: Int
  resolvedBy: Int
  resolved_ts: Int
}

"""
order by sum() on columns of table "questions"
"""
input questions_sum_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""
update columns of table "questions"
"""
enum questions_update_column {
  """column name"""
  authorId

  """column name"""
  createdAt

  """column name"""
  created_ts

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  metricName

  """column name"""
  notified_at

  """column name"""
  organizationId

  """column name"""
  priority

  """column name"""
  resolved

  """column name"""
  resolvedAt

  """column name"""
  resolvedBy

  """column name"""
  resolved_ts

  """column name"""
  text

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type questions_var_pop_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by var_pop() on columns of table "questions"
"""
input questions_var_pop_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""aggregate var_samp on columns"""
type questions_var_samp_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by var_samp() on columns of table "questions"
"""
input questions_var_samp_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""aggregate variance on columns"""
type questions_variance_fields {
  authorId: Float
  created_ts: Float
  id: Float
  metricId: Float
  organizationId: Float
  resolvedBy: Float
  resolved_ts: Float
}

"""
order by variance() on columns of table "questions"
"""
input questions_variance_order_by {
  authorId: order_by
  created_ts: order_by
  id: order_by
  metricId: order_by
  organizationId: order_by
  resolvedBy: order_by
  resolved_ts: order_by
}

"""
Saved Queries are like "Presets" that save the state of a query for reusability and reporting.


columns and relationships of "saved_queries"

"""
type saved_queries {
  createdAt: timestamptz

  """User ID for the creator of the query"""
  createdBy: Int!

  """An object relationship"""
  createdByUser: users!
  deletedAt: timestamptz
  id: Int!

  """An array relationship"""
  metrics(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): [saved_query_metrics!]!

  """An aggregated array relationship"""
  metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): saved_query_metrics_aggregate!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  ownerTeam: teams

  """Team ID for the team that owns the query if a team owns the query"""
  ownerTeamId: Int

  """JSON representative of the full query"""
  serializedQuery(
    """JSON select path"""
    path: String
  ): json!
  title: String!
  updatedAt: timestamptz
}

"""
aggregated selection of "saved_queries"
"""
type saved_queries_aggregate {
  aggregate: saved_queries_aggregate_fields
  nodes: [saved_queries!]!
}

"""
aggregate fields of "saved_queries"
"""
type saved_queries_aggregate_fields {
  avg: saved_queries_avg_fields
  count(columns: [saved_queries_select_column!], distinct: Boolean): Int
  max: saved_queries_max_fields
  min: saved_queries_min_fields
  stddev: saved_queries_stddev_fields
  stddev_pop: saved_queries_stddev_pop_fields
  stddev_samp: saved_queries_stddev_samp_fields
  sum: saved_queries_sum_fields
  var_pop: saved_queries_var_pop_fields
  var_samp: saved_queries_var_samp_fields
  variance: saved_queries_variance_fields
}

"""
order by aggregate values of table "saved_queries"
"""
input saved_queries_aggregate_order_by {
  avg: saved_queries_avg_order_by
  count: order_by
  max: saved_queries_max_order_by
  min: saved_queries_min_order_by
  stddev: saved_queries_stddev_order_by
  stddev_pop: saved_queries_stddev_pop_order_by
  stddev_samp: saved_queries_stddev_samp_order_by
  sum: saved_queries_sum_order_by
  var_pop: saved_queries_var_pop_order_by
  var_samp: saved_queries_var_samp_order_by
  variance: saved_queries_variance_order_by
}

"""
input type for inserting array relation for remote table "saved_queries"
"""
input saved_queries_arr_rel_insert_input {
  data: [saved_queries_insert_input!]!
  on_conflict: saved_queries_on_conflict
}

"""aggregate avg on columns"""
type saved_queries_avg_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by avg() on columns of table "saved_queries"
"""
input saved_queries_avg_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""
Boolean expression to filter rows from the table "saved_queries". All fields are combined with a logical 'AND'.
"""
input saved_queries_bool_exp {
  _and: [saved_queries_bool_exp]
  _not: saved_queries_bool_exp
  _or: [saved_queries_bool_exp]
  createdAt: timestamptz_comparison_exp
  createdBy: Int_comparison_exp
  createdByUser: users_bool_exp
  deletedAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  metrics: saved_query_metrics_bool_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  ownerTeam: teams_bool_exp
  ownerTeamId: Int_comparison_exp
  serializedQuery: json_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "saved_queries"
"""
enum saved_queries_constraint {
  """unique or primary key constraint"""
  saved_queries_pkey
}

"""
input type for incrementing integer column in table "saved_queries"
"""
input saved_queries_inc_input {
  createdBy: Int
  id: Int
  organizationId: Int
  ownerTeamId: Int
}

"""
input type for inserting data into table "saved_queries"
"""
input saved_queries_insert_input {
  createdAt: timestamptz
  createdBy: Int
  createdByUser: users_obj_rel_insert_input
  deletedAt: timestamptz
  id: Int
  metrics: saved_query_metrics_arr_rel_insert_input
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  ownerTeam: teams_obj_rel_insert_input
  ownerTeamId: Int
  serializedQuery: json
  title: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type saved_queries_max_fields {
  createdAt: timestamptz
  createdBy: Int
  deletedAt: timestamptz
  id: Int
  organizationId: Int
  ownerTeamId: Int
  title: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "saved_queries"
"""
input saved_queries_max_order_by {
  createdAt: order_by
  createdBy: order_by
  deletedAt: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  title: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type saved_queries_min_fields {
  createdAt: timestamptz
  createdBy: Int
  deletedAt: timestamptz
  id: Int
  organizationId: Int
  ownerTeamId: Int
  title: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "saved_queries"
"""
input saved_queries_min_order_by {
  createdAt: order_by
  createdBy: order_by
  deletedAt: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
  title: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "saved_queries"
"""
type saved_queries_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [saved_queries!]!
}

"""
input type for inserting object relation for remote table "saved_queries"
"""
input saved_queries_obj_rel_insert_input {
  data: saved_queries_insert_input!
  on_conflict: saved_queries_on_conflict
}

"""
on conflict condition type for table "saved_queries"
"""
input saved_queries_on_conflict {
  constraint: saved_queries_constraint!
  update_columns: [saved_queries_update_column!]!
  where: saved_queries_bool_exp
}

"""
ordering options when selecting data from "saved_queries"
"""
input saved_queries_order_by {
  createdAt: order_by
  createdBy: order_by
  createdByUser: users_order_by
  deletedAt: order_by
  id: order_by
  metrics_aggregate: saved_query_metrics_aggregate_order_by
  organization: organizations_order_by
  organizationId: order_by
  ownerTeam: teams_order_by
  ownerTeamId: order_by
  serializedQuery: order_by
  title: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "saved_queries"
"""
input saved_queries_pk_columns_input {
  id: Int!
}

"""
select columns of table "saved_queries"
"""
enum saved_queries_select_column {
  """column name"""
  createdAt

  """column name"""
  createdBy

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  ownerTeamId

  """column name"""
  serializedQuery

  """column name"""
  title

  """column name"""
  updatedAt
}

"""
input type for updating data in table "saved_queries"
"""
input saved_queries_set_input {
  createdAt: timestamptz
  createdBy: Int
  deletedAt: timestamptz
  id: Int
  organizationId: Int
  ownerTeamId: Int
  serializedQuery: json
  title: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type saved_queries_stddev_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by stddev() on columns of table "saved_queries"
"""
input saved_queries_stddev_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""aggregate stddev_pop on columns"""
type saved_queries_stddev_pop_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by stddev_pop() on columns of table "saved_queries"
"""
input saved_queries_stddev_pop_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""aggregate stddev_samp on columns"""
type saved_queries_stddev_samp_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by stddev_samp() on columns of table "saved_queries"
"""
input saved_queries_stddev_samp_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""aggregate sum on columns"""
type saved_queries_sum_fields {
  createdBy: Int
  id: Int
  organizationId: Int
  ownerTeamId: Int
}

"""
order by sum() on columns of table "saved_queries"
"""
input saved_queries_sum_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""
update columns of table "saved_queries"
"""
enum saved_queries_update_column {
  """column name"""
  createdAt

  """column name"""
  createdBy

  """column name"""
  deletedAt

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  ownerTeamId

  """column name"""
  serializedQuery

  """column name"""
  title

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type saved_queries_var_pop_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by var_pop() on columns of table "saved_queries"
"""
input saved_queries_var_pop_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""aggregate var_samp on columns"""
type saved_queries_var_samp_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by var_samp() on columns of table "saved_queries"
"""
input saved_queries_var_samp_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""aggregate variance on columns"""
type saved_queries_variance_fields {
  createdBy: Float
  id: Float
  organizationId: Float
  ownerTeamId: Float
}

"""
order by variance() on columns of table "saved_queries"
"""
input saved_queries_variance_order_by {
  createdBy: order_by
  id: order_by
  organizationId: order_by
  ownerTeamId: order_by
}

"""
Join Table linking Saved Queries and the Metrics they include


columns and relationships of "saved_query_metrics"

"""
type saved_query_metrics {
  createdAt: timestamptz!
  id: Int!

  """An object relationship"""
  metric: org_metrics_current_view!
  metricId: Int!

  """An object relationship"""
  savedQuery: saved_queries!
  savedQueryId: Int!
  updatedAt: timestamptz!
}

"""
aggregated selection of "saved_query_metrics"
"""
type saved_query_metrics_aggregate {
  aggregate: saved_query_metrics_aggregate_fields
  nodes: [saved_query_metrics!]!
}

"""
aggregate fields of "saved_query_metrics"
"""
type saved_query_metrics_aggregate_fields {
  avg: saved_query_metrics_avg_fields
  count(columns: [saved_query_metrics_select_column!], distinct: Boolean): Int
  max: saved_query_metrics_max_fields
  min: saved_query_metrics_min_fields
  stddev: saved_query_metrics_stddev_fields
  stddev_pop: saved_query_metrics_stddev_pop_fields
  stddev_samp: saved_query_metrics_stddev_samp_fields
  sum: saved_query_metrics_sum_fields
  var_pop: saved_query_metrics_var_pop_fields
  var_samp: saved_query_metrics_var_samp_fields
  variance: saved_query_metrics_variance_fields
}

"""
order by aggregate values of table "saved_query_metrics"
"""
input saved_query_metrics_aggregate_order_by {
  avg: saved_query_metrics_avg_order_by
  count: order_by
  max: saved_query_metrics_max_order_by
  min: saved_query_metrics_min_order_by
  stddev: saved_query_metrics_stddev_order_by
  stddev_pop: saved_query_metrics_stddev_pop_order_by
  stddev_samp: saved_query_metrics_stddev_samp_order_by
  sum: saved_query_metrics_sum_order_by
  var_pop: saved_query_metrics_var_pop_order_by
  var_samp: saved_query_metrics_var_samp_order_by
  variance: saved_query_metrics_variance_order_by
}

"""
input type for inserting array relation for remote table "saved_query_metrics"
"""
input saved_query_metrics_arr_rel_insert_input {
  data: [saved_query_metrics_insert_input!]!
  on_conflict: saved_query_metrics_on_conflict
}

"""aggregate avg on columns"""
type saved_query_metrics_avg_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by avg() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_avg_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""
Boolean expression to filter rows from the table "saved_query_metrics". All fields are combined with a logical 'AND'.
"""
input saved_query_metrics_bool_exp {
  _and: [saved_query_metrics_bool_exp]
  _not: saved_query_metrics_bool_exp
  _or: [saved_query_metrics_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  metric: org_metrics_current_view_bool_exp
  metricId: Int_comparison_exp
  savedQuery: saved_queries_bool_exp
  savedQueryId: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "saved_query_metrics"
"""
enum saved_query_metrics_constraint {
  """unique or primary key constraint"""
  saved_query_metrics_metric_id_saved_query_id_key

  """unique or primary key constraint"""
  saved_query_metrics_pkey
}

"""
input type for incrementing integer column in table "saved_query_metrics"
"""
input saved_query_metrics_inc_input {
  id: Int
  metricId: Int
  savedQueryId: Int
}

"""
input type for inserting data into table "saved_query_metrics"
"""
input saved_query_metrics_insert_input {
  createdAt: timestamptz
  id: Int
  metric: org_metrics_current_view_obj_rel_insert_input
  metricId: Int
  savedQuery: saved_queries_obj_rel_insert_input
  savedQueryId: Int
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type saved_query_metrics_max_fields {
  createdAt: timestamptz
  id: Int
  metricId: Int
  savedQueryId: Int
  updatedAt: timestamptz
}

"""
order by max() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_max_order_by {
  createdAt: order_by
  id: order_by
  metricId: order_by
  savedQueryId: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type saved_query_metrics_min_fields {
  createdAt: timestamptz
  id: Int
  metricId: Int
  savedQueryId: Int
  updatedAt: timestamptz
}

"""
order by min() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_min_order_by {
  createdAt: order_by
  id: order_by
  metricId: order_by
  savedQueryId: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "saved_query_metrics"
"""
type saved_query_metrics_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [saved_query_metrics!]!
}

"""
input type for inserting object relation for remote table "saved_query_metrics"
"""
input saved_query_metrics_obj_rel_insert_input {
  data: saved_query_metrics_insert_input!
  on_conflict: saved_query_metrics_on_conflict
}

"""
on conflict condition type for table "saved_query_metrics"
"""
input saved_query_metrics_on_conflict {
  constraint: saved_query_metrics_constraint!
  update_columns: [saved_query_metrics_update_column!]!
  where: saved_query_metrics_bool_exp
}

"""
ordering options when selecting data from "saved_query_metrics"
"""
input saved_query_metrics_order_by {
  createdAt: order_by
  id: order_by
  metric: org_metrics_current_view_order_by
  metricId: order_by
  savedQuery: saved_queries_order_by
  savedQueryId: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "saved_query_metrics"
"""
input saved_query_metrics_pk_columns_input {
  id: Int!
}

"""
select columns of table "saved_query_metrics"
"""
enum saved_query_metrics_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  savedQueryId

  """column name"""
  updatedAt
}

"""
input type for updating data in table "saved_query_metrics"
"""
input saved_query_metrics_set_input {
  createdAt: timestamptz
  id: Int
  metricId: Int
  savedQueryId: Int
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type saved_query_metrics_stddev_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by stddev() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_stddev_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""aggregate stddev_pop on columns"""
type saved_query_metrics_stddev_pop_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by stddev_pop() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_stddev_pop_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""aggregate stddev_samp on columns"""
type saved_query_metrics_stddev_samp_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by stddev_samp() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_stddev_samp_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""aggregate sum on columns"""
type saved_query_metrics_sum_fields {
  id: Int
  metricId: Int
  savedQueryId: Int
}

"""
order by sum() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_sum_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""
update columns of table "saved_query_metrics"
"""
enum saved_query_metrics_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  metricId

  """column name"""
  savedQueryId

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type saved_query_metrics_var_pop_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by var_pop() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_var_pop_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""aggregate var_samp on columns"""
type saved_query_metrics_var_samp_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by var_samp() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_var_samp_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""aggregate variance on columns"""
type saved_query_metrics_variance_fields {
  id: Float
  metricId: Float
  savedQueryId: Float
}

"""
order by variance() on columns of table "saved_query_metrics"
"""
input saved_query_metrics_variance_order_by {
  id: order_by
  metricId: order_by
  savedQueryId: order_by
}

"""subscription root"""
type subscription_root {
  """fetch data from the table: "annotations" using primary key columns"""
  annotation(
    """ID field to identify an Annotation"""
    id: Int!
  ): annotations

  """
  fetch data from the table: "annotations"
  """
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """
  fetch aggregated fields from the table: "annotations"
  """
  annotationsAggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!

  """fetch data from the table: "api_keys" using primary key columns"""
  apiKey(
    """
    The first few characters of the `ApiKey`. Useful for identifying the key without revealing it entirely.
    """
    prefix: String!
  ): api_keys

  """
  fetch data from the table: "api_keys"
  """
  apiKeys(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): [api_keys!]!

  """
  fetch aggregated fields from the table: "api_keys"
  """
  apiKeysAggregate(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): api_keys_aggregate!

  """
  fetch data from the table: "branch_metadatas"
  """
  branch_metadatas(
    """distinct select on columns"""
    distinct_on: [branch_metadatas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [branch_metadatas_order_by!]

    """filter the rows returned"""
    where: branch_metadatas_bool_exp
  ): [branch_metadatas!]!

  """
  fetch aggregated fields from the table: "branch_metadatas"
  """
  branch_metadatas_aggregate(
    """distinct select on columns"""
    distinct_on: [branch_metadatas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [branch_metadatas_order_by!]

    """filter the rows returned"""
    where: branch_metadatas_bool_exp
  ): branch_metadatas_aggregate!

  """
  fetch data from the table: "branch_metadatas" using primary key columns
  """
  branch_metadatas_by_pk(id: Int!): branch_metadatas

  """fetch data from the table: "dashboards" using primary key columns"""
  dashboard(id: Int!): dashboards

  """
  fetch data from the table: "dashboard_item_configs" using primary key columns
  """
  dashboardItemConfig(id: Int!): dashboard_item_configs

  """
  fetch data from the table: "dashboard_item_configs"
  """
  dashboardItemConfigs(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): [dashboard_item_configs!]!

  """
  fetch aggregated fields from the table: "dashboard_item_configs"
  """
  dashboardItemConfigsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_item_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_item_configs_order_by!]

    """filter the rows returned"""
    where: dashboard_item_configs_bool_exp
  ): dashboard_item_configs_aggregate!

  """
  fetch data from the table: "dashboard_layouts" using primary key columns
  """
  dashboardLayout(value: String!): dashboard_layouts

  """
  fetch data from the table: "dashboard_layouts"
  """
  dashboardLayouts(
    """distinct select on columns"""
    distinct_on: [dashboard_layouts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_layouts_order_by!]

    """filter the rows returned"""
    where: dashboard_layouts_bool_exp
  ): [dashboard_layouts!]!

  """
  fetch data from the table: "dashboard_renderable_types" using primary key columns
  """
  dashboardRenderableType(value: String!): dashboard_renderable_types

  """
  fetch data from the table: "dashboard_renderable_types"
  """
  dashboardRenderableTypes(
    """distinct select on columns"""
    distinct_on: [dashboard_renderable_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_renderable_types_order_by!]

    """filter the rows returned"""
    where: dashboard_renderable_types_bool_exp
  ): [dashboard_renderable_types!]!

  """
  fetch data from the table: "dashboard_sections" using primary key columns
  """
  dashboardSection(id: Int!): dashboard_sections

  """
  fetch data from the table: "dashboard_section_types" using primary key columns
  """
  dashboardSectionType(value: String!): dashboard_section_types

  """
  fetch data from the table: "dashboard_section_types"
  """
  dashboardSectionTypes(
    """distinct select on columns"""
    distinct_on: [dashboard_section_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_section_types_order_by!]

    """filter the rows returned"""
    where: dashboard_section_types_bool_exp
  ): [dashboard_section_types!]!

  """
  fetch data from the table: "dashboard_sections"
  """
  dashboardSections(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): [dashboard_sections!]!

  """
  fetch aggregated fields from the table: "dashboard_sections"
  """
  dashboardSectionsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_sections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_sections_order_by!]

    """filter the rows returned"""
    where: dashboard_sections_bool_exp
  ): dashboard_sections_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_layouts"
  """
  dashboard_layouts_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_layouts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_layouts_order_by!]

    """filter the rows returned"""
    where: dashboard_layouts_bool_exp
  ): dashboard_layouts_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_renderable_types"
  """
  dashboard_renderable_types_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_renderable_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_renderable_types_order_by!]

    """filter the rows returned"""
    where: dashboard_renderable_types_bool_exp
  ): dashboard_renderable_types_aggregate!

  """
  fetch aggregated fields from the table: "dashboard_section_types"
  """
  dashboard_section_types_aggregate(
    """distinct select on columns"""
    distinct_on: [dashboard_section_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboard_section_types_order_by!]

    """filter the rows returned"""
    where: dashboard_section_types_bool_exp
  ): dashboard_section_types_aggregate!

  """
  fetch data from the table: "dashboards"
  """
  dashboards(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): [dashboards!]!

  """
  fetch aggregated fields from the table: "dashboards"
  """
  dashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dashboards_order_by!]

    """filter the rows returned"""
    where: dashboards_bool_exp
  ): dashboards_aggregate!

  """
  fetch data from the table: "org_data_sources" using primary key columns
  """
  dataSource(id: Int!): org_data_sources

  """
  fetch data from the table: "data_source_versions" using primary key columns
  """
  dataSourceVersion(id: Int!): data_source_versions

  """
  fetch data from the table: "data_source_versions"
  """
  dataSourceVersions(
    """distinct select on columns"""
    distinct_on: [data_source_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_source_versions_order_by!]

    """filter the rows returned"""
    where: data_source_versions_bool_exp
  ): [data_source_versions!]!

  """
  fetch aggregated fields from the table: "data_source_versions"
  """
  dataSourceVersionsAggregate(
    """distinct select on columns"""
    distinct_on: [data_source_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_source_versions_order_by!]

    """filter the rows returned"""
    where: data_source_versions_bool_exp
  ): data_source_versions_aggregate!

  """
  fetch data from the table: "org_data_sources"
  """
  dataSources(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): [org_data_sources!]!

  """
  fetch aggregated fields from the table: "org_data_sources"
  """
  dataSourcesAggregate(
    """distinct select on columns"""
    distinct_on: [org_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_data_sources_order_by!]

    """filter the rows returned"""
    where: org_data_sources_bool_exp
  ): org_data_sources_aggregate!

  """
  fetch data from the table: "dw_engines"
  """
  dw_engines(
    """distinct select on columns"""
    distinct_on: [dw_engines_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dw_engines_order_by!]

    """filter the rows returned"""
    where: dw_engines_bool_exp
  ): [dw_engines!]!

  """
  fetch aggregated fields from the table: "dw_engines"
  """
  dw_engines_aggregate(
    """distinct select on columns"""
    distinct_on: [dw_engines_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dw_engines_order_by!]

    """filter the rows returned"""
    where: dw_engines_bool_exp
  ): dw_engines_aggregate!

  """fetch data from the table: "dw_engines" using primary key columns"""
  dw_engines_by_pk(value: String!): dw_engines

  """fetch data from the table: "features" using primary key columns"""
  feature(id: Int!): features

  """
  fetch data from the table: "features"
  """
  features(
    """distinct select on columns"""
    distinct_on: [features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [features_order_by!]

    """filter the rows returned"""
    where: features_bool_exp
  ): [features!]!

  """
  fetch aggregated fields from the table: "features"
  """
  featuresAggregate(
    """distinct select on columns"""
    distinct_on: [features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [features_order_by!]

    """filter the rows returned"""
    where: features_bool_exp
  ): features_aggregate!

  """
  execute function "me" which returns "users"
  """
  me(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  execute function "me" and query aggregates on result of table type "users"
  """
  me_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """
  fetch data from the table: "metric_annotations" using primary key columns
  """
  metricAnnotation(id: Int!): metric_annotations

  """
  fetch data from the table: "metric_annotations"
  """
  metricAnnotations(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): [metric_annotations!]!

  """
  fetch aggregated fields from the table: "metric_annotations"
  """
  metricAnnotationsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_annotations_order_by!]

    """filter the rows returned"""
    where: metric_annotations_bool_exp
  ): metric_annotations_aggregate!

  """
  fetch data from the table: "metric_approvals" using primary key columns
  """
  metricApproval(id: Int!): metric_approvals

  """
  fetch data from the table: "metric_approvals"
  """
  metricApprovals(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): [metric_approvals!]!

  """
  fetch aggregated fields from the table: "metric_approvals"
  """
  metricApprovalsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): metric_approvals_aggregate!

  """
  fetch data from the table: "org_metrics_current_view" using primary key columns
  """
  metricByIdTemp(id: Int!): org_metrics_current_view

  """
  fetch data from the table: "metric_collections" using primary key columns
  """
  metricCollection(id: Int!): metric_collections

  """
  fetch data from the table: "metric_collection_metrics" using primary key columns
  """
  metricCollectionMetric(id: Int!): metric_collection_metrics

  """
  fetch data from the table: "metric_collection_metrics"
  """
  metricCollectionMetrics(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): [metric_collection_metrics!]!

  """
  fetch aggregated fields from the table: "metric_collection_metrics"
  """
  metricCollectionMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_metrics_order_by!]

    """filter the rows returned"""
    where: metric_collection_metrics_bool_exp
  ): metric_collection_metrics_aggregate!

  """
  fetch data from the table: "metric_collection_view" using primary key columns
  """
  metricCollectionView(id: Int!): metric_collection_view

  """
  fetch aggregated fields from the table: "metric_collection_view"
  """
  metricCollectionViewAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): metric_collection_view_aggregate!

  """
  fetch data from the table: "metric_collection_view"
  """
  metricCollectionViews(
    """distinct select on columns"""
    distinct_on: [metric_collection_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collection_view_order_by!]

    """filter the rows returned"""
    where: metric_collection_view_bool_exp
  ): [metric_collection_view!]!

  """
  fetch data from the table: "metric_collections"
  """
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): [metric_collections!]!

  """
  fetch aggregated fields from the table: "metric_collections"
  """
  metricCollectionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): metric_collections_aggregate!

  """
  fetch data from the table: "metric_current_description"
  """
  metricCurrentDescriptions(
    """distinct select on columns"""
    distinct_on: [metric_current_description_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_current_description_order_by!]

    """filter the rows returned"""
    where: metric_current_description_bool_exp
  ): [metric_current_description!]!

  """
  fetch data from the table: "metric_descriptions" using primary key columns
  """
  metricDescription(id: Int!): metric_descriptions

  """
  fetch data from the table: "metric_descriptions"
  """
  metricDescriptions(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): [metric_descriptions!]!

  """
  fetch aggregated fields from the table: "metric_descriptions"
  """
  metricDescriptionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_descriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_descriptions_order_by!]

    """filter the rows returned"""
    where: metric_descriptions_bool_exp
  ): metric_descriptions_aggregate!

  """
  fetch data from the table: "metric_team_owners" using primary key columns
  """
  metricTeamOwner(id: Int!): metric_team_owners

  """
  fetch data from the table: "metric_team_owners"
  """
  metricTeamOwners(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): [metric_team_owners!]!

  """
  fetch aggregated fields from the table: "metric_team_owners"
  """
  metricTeamOwnersAggregate(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): metric_team_owners_aggregate!

  """
  fetch data from the table: "metric_user_owners" using primary key columns
  """
  metricUserOwner(id: Int!): metric_user_owners

  """
  fetch data from the table: "metric_user_owners"
  """
  metricUserOwners(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): [metric_user_owners!]!

  """
  fetch aggregated fields from the table: "metric_user_owners"
  """
  metricUserOwnersAggregate(
    """distinct select on columns"""
    distinct_on: [metric_user_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_user_owners_order_by!]

    """filter the rows returned"""
    where: metric_user_owners_bool_exp
  ): metric_user_owners_aggregate!

  """fetch data from the table: "metric_versions" using primary key columns"""
  metricVersion(id: bigint!): metric_versions

  """
  fetch data from the table: "metric_versions"
  """
  metricVersions(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): [metric_versions!]!

  """
  fetch aggregated fields from the table: "metric_versions"
  """
  metricVersionsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_versions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_versions_order_by!]

    """filter the rows returned"""
    where: metric_versions_bool_exp
  ): metric_versions_aggregate!

  """
  fetch data from the table: "metric_view"
  """
  metricViews(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): [metric_view!]!

  """
  fetch aggregated fields from the table: "metric_view"
  """
  metricViewsAggregate(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): metric_view_aggregate!

  """
  fetch aggregated fields from the table: "metric_current_description"
  """
  metric_current_description_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_current_description_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_current_description_order_by!]

    """filter the rows returned"""
    where: metric_current_description_bool_exp
  ): metric_current_description_aggregate!

  """
  fetch data from the table: "metric_lineage_data_sources"
  """
  metric_lineage_data_sources(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): [metric_lineage_data_sources!]!

  """
  fetch aggregated fields from the table: "metric_lineage_data_sources"
  """
  metric_lineage_data_sources_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_lineage_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_lineage_data_sources_order_by!]

    """filter the rows returned"""
    where: metric_lineage_data_sources_bool_exp
  ): metric_lineage_data_sources_aggregate!

  """
  fetch data from the table: "metric_lineage_data_sources" using primary key columns
  """
  metric_lineage_data_sources_by_pk(id: Int!): metric_lineage_data_sources

  """
  fetch data from the table: "org_metrics_current_view"
  """
  metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """
  fetch aggregated fields from the table: "org_metrics_current_view"
  """
  metricsAggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """fetch data from the table: "models" using primary key columns"""
  model(id: bigint!): models

  """
  fetch data from the table: "model_data_sources" using primary key columns
  """
  modelDataSource(dataSourceVersionId: Int!, modelId: Int!): model_data_sources

  """
  fetch data from the table: "model_data_sources"
  """
  modelDataSources(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): [model_data_sources!]!

  """
  fetch aggregated fields from the table: "model_data_sources"
  """
  modelDataSourcesAggregate(
    """distinct select on columns"""
    distinct_on: [model_data_sources_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_data_sources_order_by!]

    """filter the rows returned"""
    where: model_data_sources_bool_exp
  ): model_data_sources_aggregate!

  """fetch data from the table: "model_metrics" using primary key columns"""
  modelMetric(metricId: bigint!, metricVersionId: bigint!, modelId: bigint!): model_metrics

  """
  fetch data from the table: "model_metrics"
  """
  modelMetrics(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): [model_metrics!]!

  """
  fetch aggregated fields from the table: "model_metrics"
  """
  modelMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [model_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_metrics_order_by!]

    """filter the rows returned"""
    where: model_metrics_bool_exp
  ): model_metrics_aggregate!

  """
  fetch data from the table: "model_current"
  """
  model_current(
    """distinct select on columns"""
    distinct_on: [model_current_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_current_order_by!]

    """filter the rows returned"""
    where: model_current_bool_exp
  ): [model_current!]!

  """
  fetch aggregated fields from the table: "model_current"
  """
  model_current_aggregate(
    """distinct select on columns"""
    distinct_on: [model_current_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [model_current_order_by!]

    """filter the rows returned"""
    where: model_current_bool_exp
  ): model_current_aggregate!

  """
  fetch data from the table: "models"
  """
  models(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): [models!]!

  """
  fetch aggregated fields from the table: "models"
  """
  modelsAggregate(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): models_aggregate!

  """fetch data from the table: "mql_heartbeats" using primary key columns"""
  mqlHeartbeat(id: Int!): mql_heartbeats

  """
  fetch data from the table: "mql_heartbeats"
  """
  mqlHeartbeats(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): [mql_heartbeats!]!

  """
  fetch aggregated fields from the table: "mql_heartbeats"
  """
  mqlHeartbeatsAggregate(
    """distinct select on columns"""
    distinct_on: [mql_heartbeats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mql_heartbeats_order_by!]

    """filter the rows returned"""
    where: mql_heartbeats_bool_exp
  ): mql_heartbeats_aggregate!

  """
  execute function "my_most_viewed_metrics" which returns "org_metrics_current_view"
  """
  my_most_viewed_metrics(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): [org_metrics_current_view!]!

  """
  execute function "my_most_viewed_metrics" and query aggregates on result of table type "org_metrics_current_view"
  """
  my_most_viewed_metrics_aggregate(
    """distinct select on columns"""
    distinct_on: [org_metrics_current_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_metrics_current_view_order_by!]

    """filter the rows returned"""
    where: org_metrics_current_view_bool_exp
  ): org_metrics_current_view_aggregate!

  """
  execute function "my_org" which returns "organizations"
  """
  my_org(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  execute function "my_org" and query aggregates on result of table type "organizations"
  """
  my_org_aggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """fetch data from the table: "org_mql_servers" using primary key columns"""
  orgMqlServer(id: Int!): org_mql_servers

  """
  fetch data from the table: "org_mql_servers"
  """
  orgMqlServers(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): [org_mql_servers!]!

  """
  fetch aggregated fields from the table: "org_mql_servers"
  """
  orgMqlServersAggregate(
    """distinct select on columns"""
    distinct_on: [org_mql_servers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_servers_order_by!]

    """filter the rows returned"""
    where: org_mql_servers_bool_exp
  ): org_mql_servers_aggregate!

  """
  fetch data from the table: "org_mql_server_logs_types"
  """
  org_mql_server_logs_types(
    """distinct select on columns"""
    distinct_on: [org_mql_server_logs_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_server_logs_types_order_by!]

    """filter the rows returned"""
    where: org_mql_server_logs_types_bool_exp
  ): [org_mql_server_logs_types!]!

  """
  fetch aggregated fields from the table: "org_mql_server_logs_types"
  """
  org_mql_server_logs_types_aggregate(
    """distinct select on columns"""
    distinct_on: [org_mql_server_logs_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [org_mql_server_logs_types_order_by!]

    """filter the rows returned"""
    where: org_mql_server_logs_types_bool_exp
  ): org_mql_server_logs_types_aggregate!

  """
  fetch data from the table: "org_mql_server_logs_types" using primary key columns
  """
  org_mql_server_logs_types_by_pk(value: String!): org_mql_server_logs_types

  """fetch data from the table: "organizations" using primary key columns"""
  organization(
    """A unique identifier for the `Organization`"""
    id: Int!
  ): organizations

  """
  fetch data from the table: "organization_features" using primary key columns
  """
  organizationFeature(featureId: Int!, organizationId: Int!): organization_features

  """
  fetch data from the table: "organization_features"
  """
  organizationFeatures(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): [organization_features!]!

  """
  fetch aggregated fields from the table: "organization_features"
  """
  organizationFeaturesAggregate(
    """distinct select on columns"""
    distinct_on: [organization_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organization_features_order_by!]

    """filter the rows returned"""
    where: organization_features_bool_exp
  ): organization_features_aggregate!

  """
  fetch data from the table: "organizations"
  """
  organizations(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  fetch aggregated fields from the table: "organizations"
  """
  organizationsAggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """
  fetch data from the table: "priorities"
  """
  priorities(
    """distinct select on columns"""
    distinct_on: [priorities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [priorities_order_by!]

    """filter the rows returned"""
    where: priorities_bool_exp
  ): [priorities!]!

  """
  fetch aggregated fields from the table: "priorities"
  """
  priorities_aggregate(
    """distinct select on columns"""
    distinct_on: [priorities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [priorities_order_by!]

    """filter the rows returned"""
    where: priorities_bool_exp
  ): priorities_aggregate!

  """fetch data from the table: "priorities" using primary key columns"""
  priorities_by_pk(value: String!): priorities

  """fetch data from the table: "questions" using primary key columns"""
  question(
    """The primary key for the `Question`"""
    id: Int!
  ): questions

  """
  fetch data from the table: "question_directed_to"
  """
  questionDirectedTo(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """
  fetch aggregated fields from the table: "question_directed_to"
  """
  questionDirectedToAggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """
  fetch data from the table: "question_directed_to" using primary key columns
  """
  questionDirectedToByPK(
    """Unique identifier for a target to whom the Question is directed"""
    id: Int!
  ): question_directed_to

  """fetch data from the table: "question_likes" using primary key columns"""
  questionLike(
    """A primary identifier for the Question Like"""
    id: Int!
  ): question_likes

  """
  fetch data from the table: "question_likes"
  """
  questionLikes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """
  fetch aggregated fields from the table: "question_likes"
  """
  questionLikesAggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """
  fetch data from the table: "question_replies"
  """
  questionReplies(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): [question_replies!]!

  """
  fetch aggregated fields from the table: "question_replies"
  """
  questionRepliesAggregate(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): question_replies_aggregate!

  """
  fetch data from the table: "question_replies" using primary key columns
  """
  questionReply(
    """A unique identifier for the Question Reply"""
    id: Int!
  ): question_replies

  """
  fetch data from the table: "questions"
  """
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """
  fetch aggregated fields from the table: "questions"
  """
  questionsAggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """
  fetch data from the table: "saved_queries"
  """
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): [saved_queries!]!

  """
  fetch aggregated fields from the table: "saved_queries"
  """
  savedQueriesAggregate(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): saved_queries_aggregate!

  """fetch data from the table: "saved_queries" using primary key columns"""
  savedQuery(id: Int!): saved_queries

  """
  fetch data from the table: "saved_query_metrics" using primary key columns
  """
  savedQueryMetric(id: Int!): saved_query_metrics

  """
  fetch data from the table: "saved_query_metrics"
  """
  savedQueryMetrics(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): [saved_query_metrics!]!

  """
  fetch aggregated fields from the table: "saved_query_metrics"
  """
  savedQueryMetricsAggregate(
    """distinct select on columns"""
    distinct_on: [saved_query_metrics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_query_metrics_order_by!]

    """filter the rows returned"""
    where: saved_query_metrics_bool_exp
  ): saved_query_metrics_aggregate!

  """fetch data from the table: "teams" using primary key columns"""
  team(
    """A unique identifier for a Team"""
    id: Int!
  ): teams

  """fetch data from the table: "team_dashboards" using primary key columns"""
  teamDashboard(dashboardId: Int!, team_id: Int!): team_dashboards

  """
  fetch data from the table: "team_dashboards"
  """
  teamDashboards(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): [team_dashboards!]!

  """
  fetch aggregated fields from the table: "team_dashboards"
  """
  teamDashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): team_dashboards_aggregate!

  """fetch data from the table: "team_members" using primary key columns"""
  teamMember(id: Int!): team_members

  """
  fetch data from the table: "team_members"
  """
  teamMembers(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): [team_members!]!

  """
  fetch aggregated fields from the table: "team_members"
  """
  teamMembersAggregate(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): team_members_aggregate!

  """
  fetch aggregated fields from the table: "team_views"
  """
  teamViewsAggregate(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): team_views_aggregate!

  """
  fetch data from the table: "team_page_theme_colors"
  """
  team_page_theme_colors(
    """distinct select on columns"""
    distinct_on: [team_page_theme_colors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_page_theme_colors_order_by!]

    """filter the rows returned"""
    where: team_page_theme_colors_bool_exp
  ): [team_page_theme_colors!]!

  """
  fetch aggregated fields from the table: "team_page_theme_colors"
  """
  team_page_theme_colors_aggregate(
    """distinct select on columns"""
    distinct_on: [team_page_theme_colors_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_page_theme_colors_order_by!]

    """filter the rows returned"""
    where: team_page_theme_colors_bool_exp
  ): team_page_theme_colors_aggregate!

  """
  fetch data from the table: "team_page_theme_colors" using primary key columns
  """
  team_page_theme_colors_by_pk(value: String!): team_page_theme_colors

  """
  fetch data from the table: "team_views"
  """
  team_views(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): [team_views!]!

  """fetch data from the table: "team_views" using primary key columns"""
  team_views_by_pk(id: Int!): team_views

  """
  fetch data from the table: "teams"
  """
  teams(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): [teams!]!

  """
  fetch aggregated fields from the table: "teams"
  """
  teamsAggregate(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): teams_aggregate!

  """
  fetch data from the table: "unsubscribes"
  """
  unsubscribes(
    """distinct select on columns"""
    distinct_on: [unsubscribes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unsubscribes_order_by!]

    """filter the rows returned"""
    where: unsubscribes_bool_exp
  ): [unsubscribes!]!

  """
  fetch aggregated fields from the table: "unsubscribes"
  """
  unsubscribes_aggregate(
    """distinct select on columns"""
    distinct_on: [unsubscribes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [unsubscribes_order_by!]

    """filter the rows returned"""
    where: unsubscribes_bool_exp
  ): unsubscribes_aggregate!

  """fetch data from the table: "unsubscribes" using primary key columns"""
  unsubscribes_by_pk(id: Int!): unsubscribes

  """fetch data from the table: "users" using primary key columns"""
  user(id: Int!): users

  """fetch data from the table: "user_dashboards" using primary key columns"""
  userDashboard(dashboardId: Int!, userId: Int!): user_dashboards

  """
  fetch data from the table: "user_dashboards"
  """
  userDashboards(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): [user_dashboards!]!

  """
  fetch aggregated fields from the table: "user_dashboards"
  """
  userDashboardsAggregate(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): user_dashboards_aggregate!

  """fetch data from the table: "user_features" using primary key columns"""
  userFeature(featureId: Int!, userId: Int!): user_features

  """
  fetch data from the table: "user_features"
  """
  userFeatures(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): [user_features!]!

  """
  fetch aggregated fields from the table: "user_features"
  """
  userFeaturesAggregate(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): user_features_aggregate!

  """fetch data from the table: "user_prefs" using primary key columns"""
  userPreference(id: Int!): user_prefs

  """
  fetch data from the table: "user_prefs"
  """
  userPreferences(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): [user_prefs!]!

  """
  fetch aggregated fields from the table: "user_prefs"
  """
  userPreferencesAggregate(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): user_prefs_aggregate!

  """fetch data from the table: "user_roles" using primary key columns"""
  userRole(id: Int!): user_roles

  """
  fetch data from the table: "user_roles"
  """
  userRoles(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): [user_roles!]!

  """
  fetch aggregated fields from the table: "user_roles"
  """
  userRolesAggregate(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): user_roles_aggregate!

  """
  fetch data from the table: "user_role_types"
  """
  user_role_types(
    """distinct select on columns"""
    distinct_on: [user_role_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_role_types_order_by!]

    """filter the rows returned"""
    where: user_role_types_bool_exp
  ): [user_role_types!]!

  """
  fetch aggregated fields from the table: "user_role_types"
  """
  user_role_types_aggregate(
    """distinct select on columns"""
    distinct_on: [user_role_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_role_types_order_by!]

    """filter the rows returned"""
    where: user_role_types_bool_exp
  ): user_role_types_aggregate!

  """fetch data from the table: "user_role_types" using primary key columns"""
  user_role_types_by_pk(value: String!): user_role_types

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  usersAggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!
}

"""
columns and relationships of "team_dashboards"
"""
type team_dashboards {
  createdAt: timestamptz
  dashboardId: Int!
  organizationId: Int!
  team_id: Int!
  updatedAt: timestamptz
}

"""
aggregated selection of "team_dashboards"
"""
type team_dashboards_aggregate {
  aggregate: team_dashboards_aggregate_fields
  nodes: [team_dashboards!]!
}

"""
aggregate fields of "team_dashboards"
"""
type team_dashboards_aggregate_fields {
  avg: team_dashboards_avg_fields
  count(columns: [team_dashboards_select_column!], distinct: Boolean): Int
  max: team_dashboards_max_fields
  min: team_dashboards_min_fields
  stddev: team_dashboards_stddev_fields
  stddev_pop: team_dashboards_stddev_pop_fields
  stddev_samp: team_dashboards_stddev_samp_fields
  sum: team_dashboards_sum_fields
  var_pop: team_dashboards_var_pop_fields
  var_samp: team_dashboards_var_samp_fields
  variance: team_dashboards_variance_fields
}

"""
order by aggregate values of table "team_dashboards"
"""
input team_dashboards_aggregate_order_by {
  avg: team_dashboards_avg_order_by
  count: order_by
  max: team_dashboards_max_order_by
  min: team_dashboards_min_order_by
  stddev: team_dashboards_stddev_order_by
  stddev_pop: team_dashboards_stddev_pop_order_by
  stddev_samp: team_dashboards_stddev_samp_order_by
  sum: team_dashboards_sum_order_by
  var_pop: team_dashboards_var_pop_order_by
  var_samp: team_dashboards_var_samp_order_by
  variance: team_dashboards_variance_order_by
}

"""
input type for inserting array relation for remote table "team_dashboards"
"""
input team_dashboards_arr_rel_insert_input {
  data: [team_dashboards_insert_input!]!
  on_conflict: team_dashboards_on_conflict
}

"""aggregate avg on columns"""
type team_dashboards_avg_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by avg() on columns of table "team_dashboards"
"""
input team_dashboards_avg_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""
Boolean expression to filter rows from the table "team_dashboards". All fields are combined with a logical 'AND'.
"""
input team_dashboards_bool_exp {
  _and: [team_dashboards_bool_exp]
  _not: team_dashboards_bool_exp
  _or: [team_dashboards_bool_exp]
  createdAt: timestamptz_comparison_exp
  dashboardId: Int_comparison_exp
  organizationId: Int_comparison_exp
  team_id: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "team_dashboards"
"""
enum team_dashboards_constraint {
  """unique or primary key constraint"""
  team_dashboards_pkey
}

"""
input type for incrementing integer column in table "team_dashboards"
"""
input team_dashboards_inc_input {
  dashboardId: Int
  organizationId: Int
  team_id: Int
}

"""
input type for inserting data into table "team_dashboards"
"""
input team_dashboards_insert_input {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  team_id: Int
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type team_dashboards_max_fields {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  team_id: Int
  updatedAt: timestamptz
}

"""
order by max() on columns of table "team_dashboards"
"""
input team_dashboards_max_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type team_dashboards_min_fields {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  team_id: Int
  updatedAt: timestamptz
}

"""
order by min() on columns of table "team_dashboards"
"""
input team_dashboards_min_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "team_dashboards"
"""
type team_dashboards_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [team_dashboards!]!
}

"""
input type for inserting object relation for remote table "team_dashboards"
"""
input team_dashboards_obj_rel_insert_input {
  data: team_dashboards_insert_input!
  on_conflict: team_dashboards_on_conflict
}

"""
on conflict condition type for table "team_dashboards"
"""
input team_dashboards_on_conflict {
  constraint: team_dashboards_constraint!
  update_columns: [team_dashboards_update_column!]!
  where: team_dashboards_bool_exp
}

"""
ordering options when selecting data from "team_dashboards"
"""
input team_dashboards_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "team_dashboards"
"""
input team_dashboards_pk_columns_input {
  dashboardId: Int!
  team_id: Int!
}

"""
select columns of table "team_dashboards"
"""
enum team_dashboards_select_column {
  """column name"""
  createdAt

  """column name"""
  dashboardId

  """column name"""
  organizationId

  """column name"""
  team_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "team_dashboards"
"""
input team_dashboards_set_input {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  team_id: Int
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type team_dashboards_stddev_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by stddev() on columns of table "team_dashboards"
"""
input team_dashboards_stddev_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""aggregate stddev_pop on columns"""
type team_dashboards_stddev_pop_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by stddev_pop() on columns of table "team_dashboards"
"""
input team_dashboards_stddev_pop_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""aggregate stddev_samp on columns"""
type team_dashboards_stddev_samp_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by stddev_samp() on columns of table "team_dashboards"
"""
input team_dashboards_stddev_samp_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""aggregate sum on columns"""
type team_dashboards_sum_fields {
  dashboardId: Int
  organizationId: Int
  team_id: Int
}

"""
order by sum() on columns of table "team_dashboards"
"""
input team_dashboards_sum_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""
update columns of table "team_dashboards"
"""
enum team_dashboards_update_column {
  """column name"""
  createdAt

  """column name"""
  dashboardId

  """column name"""
  organizationId

  """column name"""
  team_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type team_dashboards_var_pop_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by var_pop() on columns of table "team_dashboards"
"""
input team_dashboards_var_pop_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""aggregate var_samp on columns"""
type team_dashboards_var_samp_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by var_samp() on columns of table "team_dashboards"
"""
input team_dashboards_var_samp_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""aggregate variance on columns"""
type team_dashboards_variance_fields {
  dashboardId: Float
  organizationId: Float
  team_id: Float
}

"""
order by variance() on columns of table "team_dashboards"
"""
input team_dashboards_variance_order_by {
  dashboardId: order_by
  organizationId: order_by
  team_id: order_by
}

"""
Users belonging to a Team


columns and relationships of "team_members"

"""
type team_members {
  id: Int!

  """Indicates if a Team Member is an Admin for the Team"""
  isTeamAdmin: Boolean!

  """Indicates when the User was added to the Team"""
  joinedAt: timestamptz
  joined_ts: Int

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  team: teams!
  teamId: Int!

  """An object relationship"""
  user: users!
  user_id: Int!
}

"""
aggregated selection of "team_members"
"""
type team_members_aggregate {
  aggregate: team_members_aggregate_fields
  nodes: [team_members!]!
}

"""
aggregate fields of "team_members"
"""
type team_members_aggregate_fields {
  avg: team_members_avg_fields
  count(columns: [team_members_select_column!], distinct: Boolean): Int
  max: team_members_max_fields
  min: team_members_min_fields
  stddev: team_members_stddev_fields
  stddev_pop: team_members_stddev_pop_fields
  stddev_samp: team_members_stddev_samp_fields
  sum: team_members_sum_fields
  var_pop: team_members_var_pop_fields
  var_samp: team_members_var_samp_fields
  variance: team_members_variance_fields
}

"""
order by aggregate values of table "team_members"
"""
input team_members_aggregate_order_by {
  avg: team_members_avg_order_by
  count: order_by
  max: team_members_max_order_by
  min: team_members_min_order_by
  stddev: team_members_stddev_order_by
  stddev_pop: team_members_stddev_pop_order_by
  stddev_samp: team_members_stddev_samp_order_by
  sum: team_members_sum_order_by
  var_pop: team_members_var_pop_order_by
  var_samp: team_members_var_samp_order_by
  variance: team_members_variance_order_by
}

"""
input type for inserting array relation for remote table "team_members"
"""
input team_members_arr_rel_insert_input {
  data: [team_members_insert_input!]!
  on_conflict: team_members_on_conflict
}

"""aggregate avg on columns"""
type team_members_avg_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by avg() on columns of table "team_members"
"""
input team_members_avg_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "team_members". All fields are combined with a logical 'AND'.
"""
input team_members_bool_exp {
  _and: [team_members_bool_exp]
  _not: team_members_bool_exp
  _or: [team_members_bool_exp]
  id: Int_comparison_exp
  isTeamAdmin: Boolean_comparison_exp
  joinedAt: timestamptz_comparison_exp
  joined_ts: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  team: teams_bool_exp
  teamId: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "team_members"
"""
enum team_members_constraint {
  """unique or primary key constraint"""
  team_members_pkey
}

"""
input type for incrementing integer column in table "team_members"
"""
input team_members_inc_input {
  id: Int
  joined_ts: Int
  organizationId: Int
  teamId: Int
  user_id: Int
}

"""
input type for inserting data into table "team_members"
"""
input team_members_insert_input {
  id: Int
  isTeamAdmin: Boolean
  joinedAt: timestamptz
  joined_ts: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  team: teams_obj_rel_insert_input
  teamId: Int
  user: users_obj_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type team_members_max_fields {
  id: Int
  joinedAt: timestamptz
  joined_ts: Int
  organizationId: Int
  teamId: Int
  user_id: Int
}

"""
order by max() on columns of table "team_members"
"""
input team_members_max_order_by {
  id: order_by
  joinedAt: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type team_members_min_fields {
  id: Int
  joinedAt: timestamptz
  joined_ts: Int
  organizationId: Int
  teamId: Int
  user_id: Int
}

"""
order by min() on columns of table "team_members"
"""
input team_members_min_order_by {
  id: order_by
  joinedAt: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""
response of any mutation on the table "team_members"
"""
type team_members_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [team_members!]!
}

"""
input type for inserting object relation for remote table "team_members"
"""
input team_members_obj_rel_insert_input {
  data: team_members_insert_input!
  on_conflict: team_members_on_conflict
}

"""
on conflict condition type for table "team_members"
"""
input team_members_on_conflict {
  constraint: team_members_constraint!
  update_columns: [team_members_update_column!]!
  where: team_members_bool_exp
}

"""
ordering options when selecting data from "team_members"
"""
input team_members_order_by {
  id: order_by
  isTeamAdmin: order_by
  joinedAt: order_by
  joined_ts: order_by
  organization: organizations_order_by
  organizationId: order_by
  team: teams_order_by
  teamId: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "team_members"
"""
input team_members_pk_columns_input {
  id: Int!
}

"""
select columns of table "team_members"
"""
enum team_members_select_column {
  """column name"""
  id

  """column name"""
  isTeamAdmin

  """column name"""
  joinedAt

  """column name"""
  joined_ts

  """column name"""
  organizationId

  """column name"""
  teamId

  """column name"""
  user_id
}

"""
input type for updating data in table "team_members"
"""
input team_members_set_input {
  id: Int
  isTeamAdmin: Boolean
  joinedAt: timestamptz
  joined_ts: Int
  organizationId: Int
  teamId: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type team_members_stddev_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by stddev() on columns of table "team_members"
"""
input team_members_stddev_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type team_members_stddev_pop_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "team_members"
"""
input team_members_stddev_pop_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type team_members_stddev_samp_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "team_members"
"""
input team_members_stddev_samp_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type team_members_sum_fields {
  id: Int
  joined_ts: Int
  organizationId: Int
  teamId: Int
  user_id: Int
}

"""
order by sum() on columns of table "team_members"
"""
input team_members_sum_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""
update columns of table "team_members"
"""
enum team_members_update_column {
  """column name"""
  id

  """column name"""
  isTeamAdmin

  """column name"""
  joinedAt

  """column name"""
  joined_ts

  """column name"""
  organizationId

  """column name"""
  teamId

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type team_members_var_pop_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "team_members"
"""
input team_members_var_pop_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type team_members_var_samp_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "team_members"
"""
input team_members_var_samp_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type team_members_variance_fields {
  id: Float
  joined_ts: Float
  organizationId: Float
  teamId: Float
  user_id: Float
}

"""
order by variance() on columns of table "team_members"
"""
input team_members_variance_order_by {
  id: order_by
  joined_ts: order_by
  organizationId: order_by
  teamId: order_by
  user_id: order_by
}

"""
columns and relationships of "team_page_theme_colors"
"""
type team_page_theme_colors {
  comment: String!
  value: String!
}

"""
aggregated selection of "team_page_theme_colors"
"""
type team_page_theme_colors_aggregate {
  aggregate: team_page_theme_colors_aggregate_fields
  nodes: [team_page_theme_colors!]!
}

"""
aggregate fields of "team_page_theme_colors"
"""
type team_page_theme_colors_aggregate_fields {
  count(columns: [team_page_theme_colors_select_column!], distinct: Boolean): Int
  max: team_page_theme_colors_max_fields
  min: team_page_theme_colors_min_fields
}

"""
order by aggregate values of table "team_page_theme_colors"
"""
input team_page_theme_colors_aggregate_order_by {
  count: order_by
  max: team_page_theme_colors_max_order_by
  min: team_page_theme_colors_min_order_by
}

"""
input type for inserting array relation for remote table "team_page_theme_colors"
"""
input team_page_theme_colors_arr_rel_insert_input {
  data: [team_page_theme_colors_insert_input!]!
  on_conflict: team_page_theme_colors_on_conflict
}

"""
Boolean expression to filter rows from the table "team_page_theme_colors". All fields are combined with a logical 'AND'.
"""
input team_page_theme_colors_bool_exp {
  _and: [team_page_theme_colors_bool_exp]
  _not: team_page_theme_colors_bool_exp
  _or: [team_page_theme_colors_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "team_page_theme_colors"
"""
enum team_page_theme_colors_constraint {
  """unique or primary key constraint"""
  team_page_theme_colors_pkey
}

"""
input type for inserting data into table "team_page_theme_colors"
"""
input team_page_theme_colors_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type team_page_theme_colors_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "team_page_theme_colors"
"""
input team_page_theme_colors_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type team_page_theme_colors_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "team_page_theme_colors"
"""
input team_page_theme_colors_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "team_page_theme_colors"
"""
type team_page_theme_colors_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [team_page_theme_colors!]!
}

"""
input type for inserting object relation for remote table "team_page_theme_colors"
"""
input team_page_theme_colors_obj_rel_insert_input {
  data: team_page_theme_colors_insert_input!
  on_conflict: team_page_theme_colors_on_conflict
}

"""
on conflict condition type for table "team_page_theme_colors"
"""
input team_page_theme_colors_on_conflict {
  constraint: team_page_theme_colors_constraint!
  update_columns: [team_page_theme_colors_update_column!]!
  where: team_page_theme_colors_bool_exp
}

"""
ordering options when selecting data from "team_page_theme_colors"
"""
input team_page_theme_colors_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "team_page_theme_colors"
"""
input team_page_theme_colors_pk_columns_input {
  value: String!
}

"""
select columns of table "team_page_theme_colors"
"""
enum team_page_theme_colors_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "team_page_theme_colors"
"""
input team_page_theme_colors_set_input {
  comment: String
  value: String
}

"""
update columns of table "team_page_theme_colors"
"""
enum team_page_theme_colors_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
columns and relationships of "team_views"
"""
type team_views {
  created_at: timestamptz!
  id: Int!
  organization_id: Int!
  team_id: Int!
  user_id: Int!
}

"""
aggregated selection of "team_views"
"""
type team_views_aggregate {
  aggregate: team_views_aggregate_fields
  nodes: [team_views!]!
}

"""
aggregate fields of "team_views"
"""
type team_views_aggregate_fields {
  avg: team_views_avg_fields
  count(columns: [team_views_select_column!], distinct: Boolean): Int
  max: team_views_max_fields
  min: team_views_min_fields
  stddev: team_views_stddev_fields
  stddev_pop: team_views_stddev_pop_fields
  stddev_samp: team_views_stddev_samp_fields
  sum: team_views_sum_fields
  var_pop: team_views_var_pop_fields
  var_samp: team_views_var_samp_fields
  variance: team_views_variance_fields
}

"""
order by aggregate values of table "team_views"
"""
input team_views_aggregate_order_by {
  avg: team_views_avg_order_by
  count: order_by
  max: team_views_max_order_by
  min: team_views_min_order_by
  stddev: team_views_stddev_order_by
  stddev_pop: team_views_stddev_pop_order_by
  stddev_samp: team_views_stddev_samp_order_by
  sum: team_views_sum_order_by
  var_pop: team_views_var_pop_order_by
  var_samp: team_views_var_samp_order_by
  variance: team_views_variance_order_by
}

"""
input type for inserting array relation for remote table "team_views"
"""
input team_views_arr_rel_insert_input {
  data: [team_views_insert_input!]!
  on_conflict: team_views_on_conflict
}

"""aggregate avg on columns"""
type team_views_avg_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by avg() on columns of table "team_views"
"""
input team_views_avg_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "team_views". All fields are combined with a logical 'AND'.
"""
input team_views_bool_exp {
  _and: [team_views_bool_exp]
  _not: team_views_bool_exp
  _or: [team_views_bool_exp]
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  organization_id: Int_comparison_exp
  team_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "team_views"
"""
enum team_views_constraint {
  """unique or primary key constraint"""
  team_views_pkey
}

"""
input type for incrementing integer column in table "team_views"
"""
input team_views_inc_input {
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""
input type for inserting data into table "team_views"
"""
input team_views_insert_input {
  created_at: timestamptz
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""aggregate max on columns"""
type team_views_max_fields {
  created_at: timestamptz
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""
order by max() on columns of table "team_views"
"""
input team_views_max_order_by {
  created_at: order_by
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type team_views_min_fields {
  created_at: timestamptz
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""
order by min() on columns of table "team_views"
"""
input team_views_min_order_by {
  created_at: order_by
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "team_views"
"""
type team_views_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [team_views!]!
}

"""
input type for inserting object relation for remote table "team_views"
"""
input team_views_obj_rel_insert_input {
  data: team_views_insert_input!
  on_conflict: team_views_on_conflict
}

"""
on conflict condition type for table "team_views"
"""
input team_views_on_conflict {
  constraint: team_views_constraint!
  update_columns: [team_views_update_column!]!
  where: team_views_bool_exp
}

"""
ordering options when selecting data from "team_views"
"""
input team_views_order_by {
  created_at: order_by
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: "team_views"
"""
input team_views_pk_columns_input {
  id: Int!
}

"""
select columns of table "team_views"
"""
enum team_views_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  organization_id

  """column name"""
  team_id

  """column name"""
  user_id
}

"""
input type for updating data in table "team_views"
"""
input team_views_set_input {
  created_at: timestamptz
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type team_views_stddev_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "team_views"
"""
input team_views_stddev_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type team_views_stddev_pop_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "team_views"
"""
input team_views_stddev_pop_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type team_views_stddev_samp_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "team_views"
"""
input team_views_stddev_samp_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type team_views_sum_fields {
  id: Int
  organization_id: Int
  team_id: Int
  user_id: Int
}

"""
order by sum() on columns of table "team_views"
"""
input team_views_sum_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""
update columns of table "team_views"
"""
enum team_views_update_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  organization_id

  """column name"""
  team_id

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type team_views_var_pop_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "team_views"
"""
input team_views_var_pop_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type team_views_var_samp_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "team_views"
"""
input team_views_var_samp_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type team_views_variance_fields {
  id: Float
  organization_id: Float
  team_id: Float
  user_id: Float
}

"""
order by variance() on columns of table "team_views"
"""
input team_views_variance_order_by {
  id: order_by
  organization_id: order_by
  team_id: order_by
  user_id: order_by
}

"""
Teams are groups of Users within an Organization


columns and relationships of "teams"

"""
type teams {
  """Timestamp indicating when the Team was created"""
  createdAt: timestamptz

  """An object relationship"""
  createdBy: users
  created_by: Int
  created_ts: Int

  """An array relationship"""
  dashboards(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): [team_dashboards!]!

  """An aggregated array relationship"""
  dashboards_aggregate(
    """distinct select on columns"""
    distinct_on: [team_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_dashboards_order_by!]

    """filter the rows returned"""
    where: team_dashboards_bool_exp
  ): team_dashboards_aggregate!
  deactivated: Int

  """A soft delete mechanism for removing a Team"""
  deactivatedAt: timestamptz

  """An object relationship"""
  featuredMetricCollection: metric_collections
  featuredMetricCollectionId: Int

  """A unique identifier for a Team"""
  id: Int!

  """An array relationship"""
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): [metric_collections!]!

  """An aggregated array relationship"""
  metricCollections_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): metric_collections_aggregate!

  """An array relationship"""
  metricTeamOwners(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): [metric_team_owners!]!

  """An aggregated array relationship"""
  metricTeamOwners_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_team_owners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_team_owners_order_by!]

    """filter the rows returned"""
    where: metric_team_owners_bool_exp
  ): metric_team_owners_aggregate!

  """The name of the Team"""
  name: String!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  primaryDashboard: dashboards
  primaryDashboardId: Int

  """An array relationship"""
  questionsDirectedTo(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """An aggregated array relationship"""
  questionsDirectedTo_aggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """An array relationship"""
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): [saved_queries!]!

  """An aggregated array relationship"""
  savedQueries_aggregate(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): saved_queries_aggregate!

  """The slug is a URL-friendly string used to identify a team in the App"""
  slug: String

  """An array relationship"""
  teamMembers(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): [team_members!]!

  """An aggregated array relationship"""
  teamMembers_aggregate(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): team_members_aggregate!

  """An array relationship"""
  teamViews(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): [team_views!]!

  """An aggregated array relationship"""
  teamViews_aggregate(
    """distinct select on columns"""
    distinct_on: [team_views_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_views_order_by!]

    """filter the rows returned"""
    where: team_views_bool_exp
  ): team_views_aggregate!
  theme: String

  """An object relationship"""
  theme_color: team_page_theme_colors

  """Timestamp indicating when the Team was last updated"""
  updatedAt: timestamptz

  """
  A computed field, executes function "user_is_team_admin"
  """
  userIsTeamAdmin: Boolean
}

"""
aggregated selection of "teams"
"""
type teams_aggregate {
  aggregate: teams_aggregate_fields
  nodes: [teams!]!
}

"""
aggregate fields of "teams"
"""
type teams_aggregate_fields {
  avg: teams_avg_fields
  count(columns: [teams_select_column!], distinct: Boolean): Int
  max: teams_max_fields
  min: teams_min_fields
  stddev: teams_stddev_fields
  stddev_pop: teams_stddev_pop_fields
  stddev_samp: teams_stddev_samp_fields
  sum: teams_sum_fields
  var_pop: teams_var_pop_fields
  var_samp: teams_var_samp_fields
  variance: teams_variance_fields
}

"""
order by aggregate values of table "teams"
"""
input teams_aggregate_order_by {
  avg: teams_avg_order_by
  count: order_by
  max: teams_max_order_by
  min: teams_min_order_by
  stddev: teams_stddev_order_by
  stddev_pop: teams_stddev_pop_order_by
  stddev_samp: teams_stddev_samp_order_by
  sum: teams_sum_order_by
  var_pop: teams_var_pop_order_by
  var_samp: teams_var_samp_order_by
  variance: teams_variance_order_by
}

"""
input type for inserting array relation for remote table "teams"
"""
input teams_arr_rel_insert_input {
  data: [teams_insert_input!]!
  on_conflict: teams_on_conflict
}

"""aggregate avg on columns"""
type teams_avg_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by avg() on columns of table "teams"
"""
input teams_avg_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""
Boolean expression to filter rows from the table "teams". All fields are combined with a logical 'AND'.
"""
input teams_bool_exp {
  _and: [teams_bool_exp]
  _not: teams_bool_exp
  _or: [teams_bool_exp]
  createdAt: timestamptz_comparison_exp
  createdBy: users_bool_exp
  created_by: Int_comparison_exp
  created_ts: Int_comparison_exp
  dashboards: team_dashboards_bool_exp
  deactivated: Int_comparison_exp
  deactivatedAt: timestamptz_comparison_exp
  featuredMetricCollection: metric_collections_bool_exp
  featuredMetricCollectionId: Int_comparison_exp
  id: Int_comparison_exp
  metricCollections: metric_collections_bool_exp
  metricTeamOwners: metric_team_owners_bool_exp
  name: String_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  primaryDashboard: dashboards_bool_exp
  primaryDashboardId: Int_comparison_exp
  questionsDirectedTo: question_directed_to_bool_exp
  savedQueries: saved_queries_bool_exp
  slug: String_comparison_exp
  teamMembers: team_members_bool_exp
  teamViews: team_views_bool_exp
  theme: String_comparison_exp
  theme_color: team_page_theme_colors_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "teams"
"""
enum teams_constraint {
  """unique or primary key constraint"""
  teams_name_organization_id_key

  """unique or primary key constraint"""
  teams_pkey
}

"""
input type for incrementing integer column in table "teams"
"""
input teams_inc_input {
  created_by: Int
  created_ts: Int
  deactivated: Int
  featuredMetricCollectionId: Int
  id: Int
  organizationId: Int
  primaryDashboardId: Int
}

"""
input type for inserting data into table "teams"
"""
input teams_insert_input {
  createdAt: timestamptz
  createdBy: users_obj_rel_insert_input
  created_by: Int
  created_ts: Int
  dashboards: team_dashboards_arr_rel_insert_input
  deactivated: Int
  deactivatedAt: timestamptz
  featuredMetricCollection: metric_collections_obj_rel_insert_input
  featuredMetricCollectionId: Int
  id: Int
  metricCollections: metric_collections_arr_rel_insert_input
  metricTeamOwners: metric_team_owners_arr_rel_insert_input
  name: String
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  primaryDashboard: dashboards_obj_rel_insert_input
  primaryDashboardId: Int
  questionsDirectedTo: question_directed_to_arr_rel_insert_input
  savedQueries: saved_queries_arr_rel_insert_input
  slug: String
  teamMembers: team_members_arr_rel_insert_input
  teamViews: team_views_arr_rel_insert_input
  theme: String
  theme_color: team_page_theme_colors_obj_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type teams_max_fields {
  createdAt: timestamptz
  created_by: Int
  created_ts: Int
  deactivated: Int
  deactivatedAt: timestamptz
  featuredMetricCollectionId: Int
  id: Int
  name: String
  organizationId: Int
  primaryDashboardId: Int
  slug: String
  theme: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "teams"
"""
input teams_max_order_by {
  createdAt: order_by
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  deactivatedAt: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  primaryDashboardId: order_by
  slug: order_by
  theme: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type teams_min_fields {
  createdAt: timestamptz
  created_by: Int
  created_ts: Int
  deactivated: Int
  deactivatedAt: timestamptz
  featuredMetricCollectionId: Int
  id: Int
  name: String
  organizationId: Int
  primaryDashboardId: Int
  slug: String
  theme: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "teams"
"""
input teams_min_order_by {
  createdAt: order_by
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  deactivatedAt: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  name: order_by
  organizationId: order_by
  primaryDashboardId: order_by
  slug: order_by
  theme: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "teams"
"""
type teams_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [teams!]!
}

"""
input type for inserting object relation for remote table "teams"
"""
input teams_obj_rel_insert_input {
  data: teams_insert_input!
  on_conflict: teams_on_conflict
}

"""
on conflict condition type for table "teams"
"""
input teams_on_conflict {
  constraint: teams_constraint!
  update_columns: [teams_update_column!]!
  where: teams_bool_exp
}

"""
ordering options when selecting data from "teams"
"""
input teams_order_by {
  createdAt: order_by
  createdBy: users_order_by
  created_by: order_by
  created_ts: order_by
  dashboards_aggregate: team_dashboards_aggregate_order_by
  deactivated: order_by
  deactivatedAt: order_by
  featuredMetricCollection: metric_collections_order_by
  featuredMetricCollectionId: order_by
  id: order_by
  metricCollections_aggregate: metric_collections_aggregate_order_by
  metricTeamOwners_aggregate: metric_team_owners_aggregate_order_by
  name: order_by
  organization: organizations_order_by
  organizationId: order_by
  primaryDashboard: dashboards_order_by
  primaryDashboardId: order_by
  questionsDirectedTo_aggregate: question_directed_to_aggregate_order_by
  savedQueries_aggregate: saved_queries_aggregate_order_by
  slug: order_by
  teamMembers_aggregate: team_members_aggregate_order_by
  teamViews_aggregate: team_views_aggregate_order_by
  theme: order_by
  theme_color: team_page_theme_colors_order_by
  updatedAt: order_by
}

"""
primary key columns input for table: "teams"
"""
input teams_pk_columns_input {
  """A unique identifier for a Team"""
  id: Int!
}

"""
select columns of table "teams"
"""
enum teams_select_column {
  """column name"""
  createdAt

  """column name"""
  created_by

  """column name"""
  created_ts

  """column name"""
  deactivated

  """column name"""
  deactivatedAt

  """column name"""
  featuredMetricCollectionId

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  primaryDashboardId

  """column name"""
  slug

  """column name"""
  theme

  """column name"""
  updatedAt
}

"""
input type for updating data in table "teams"
"""
input teams_set_input {
  createdAt: timestamptz
  created_by: Int
  created_ts: Int
  deactivated: Int
  deactivatedAt: timestamptz
  featuredMetricCollectionId: Int
  id: Int
  name: String
  organizationId: Int
  primaryDashboardId: Int
  slug: String
  theme: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type teams_stddev_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev() on columns of table "teams"
"""
input teams_stddev_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_pop on columns"""
type teams_stddev_pop_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev_pop() on columns of table "teams"
"""
input teams_stddev_pop_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_samp on columns"""
type teams_stddev_samp_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev_samp() on columns of table "teams"
"""
input teams_stddev_samp_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate sum on columns"""
type teams_sum_fields {
  created_by: Int
  created_ts: Int
  deactivated: Int
  featuredMetricCollectionId: Int
  id: Int
  organizationId: Int
  primaryDashboardId: Int
}

"""
order by sum() on columns of table "teams"
"""
input teams_sum_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""
update columns of table "teams"
"""
enum teams_update_column {
  """column name"""
  createdAt

  """column name"""
  created_by

  """column name"""
  created_ts

  """column name"""
  deactivated

  """column name"""
  deactivatedAt

  """column name"""
  featuredMetricCollectionId

  """column name"""
  id

  """column name"""
  name

  """column name"""
  organizationId

  """column name"""
  primaryDashboardId

  """column name"""
  slug

  """column name"""
  theme

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type teams_var_pop_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by var_pop() on columns of table "teams"
"""
input teams_var_pop_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate var_samp on columns"""
type teams_var_samp_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by var_samp() on columns of table "teams"
"""
input teams_var_samp_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate variance on columns"""
type teams_variance_fields {
  created_by: Float
  created_ts: Float
  deactivated: Float
  featuredMetricCollectionId: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by variance() on columns of table "teams"
"""
input teams_variance_order_by {
  created_by: order_by
  created_ts: order_by
  deactivated: order_by
  featuredMetricCollectionId: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
Tracks which users have unsubscribed from which transactional emails.


columns and relationships of "unsubscribes"

"""
type unsubscribes {
  email_type: String!
  id: Int!

  """An object relationship"""
  user: users!
  user_id: Int!
}

"""
aggregated selection of "unsubscribes"
"""
type unsubscribes_aggregate {
  aggregate: unsubscribes_aggregate_fields
  nodes: [unsubscribes!]!
}

"""
aggregate fields of "unsubscribes"
"""
type unsubscribes_aggregate_fields {
  avg: unsubscribes_avg_fields
  count(columns: [unsubscribes_select_column!], distinct: Boolean): Int
  max: unsubscribes_max_fields
  min: unsubscribes_min_fields
  stddev: unsubscribes_stddev_fields
  stddev_pop: unsubscribes_stddev_pop_fields
  stddev_samp: unsubscribes_stddev_samp_fields
  sum: unsubscribes_sum_fields
  var_pop: unsubscribes_var_pop_fields
  var_samp: unsubscribes_var_samp_fields
  variance: unsubscribes_variance_fields
}

"""
order by aggregate values of table "unsubscribes"
"""
input unsubscribes_aggregate_order_by {
  avg: unsubscribes_avg_order_by
  count: order_by
  max: unsubscribes_max_order_by
  min: unsubscribes_min_order_by
  stddev: unsubscribes_stddev_order_by
  stddev_pop: unsubscribes_stddev_pop_order_by
  stddev_samp: unsubscribes_stddev_samp_order_by
  sum: unsubscribes_sum_order_by
  var_pop: unsubscribes_var_pop_order_by
  var_samp: unsubscribes_var_samp_order_by
  variance: unsubscribes_variance_order_by
}

"""
input type for inserting array relation for remote table "unsubscribes"
"""
input unsubscribes_arr_rel_insert_input {
  data: [unsubscribes_insert_input!]!
  on_conflict: unsubscribes_on_conflict
}

"""aggregate avg on columns"""
type unsubscribes_avg_fields {
  id: Float
  user_id: Float
}

"""
order by avg() on columns of table "unsubscribes"
"""
input unsubscribes_avg_order_by {
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "unsubscribes". All fields are combined with a logical 'AND'.
"""
input unsubscribes_bool_exp {
  _and: [unsubscribes_bool_exp]
  _not: unsubscribes_bool_exp
  _or: [unsubscribes_bool_exp]
  email_type: String_comparison_exp
  id: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "unsubscribes"
"""
enum unsubscribes_constraint {
  """unique or primary key constraint"""
  unsubscribes_email_type_user_id_key

  """unique or primary key constraint"""
  unsubscribes_pkey
}

"""
input type for incrementing integer column in table "unsubscribes"
"""
input unsubscribes_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "unsubscribes"
"""
input unsubscribes_insert_input {
  email_type: String
  id: Int
  user: users_obj_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type unsubscribes_max_fields {
  email_type: String
  id: Int
  user_id: Int
}

"""
order by max() on columns of table "unsubscribes"
"""
input unsubscribes_max_order_by {
  email_type: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type unsubscribes_min_fields {
  email_type: String
  id: Int
  user_id: Int
}

"""
order by min() on columns of table "unsubscribes"
"""
input unsubscribes_min_order_by {
  email_type: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "unsubscribes"
"""
type unsubscribes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [unsubscribes!]!
}

"""
input type for inserting object relation for remote table "unsubscribes"
"""
input unsubscribes_obj_rel_insert_input {
  data: unsubscribes_insert_input!
  on_conflict: unsubscribes_on_conflict
}

"""
on conflict condition type for table "unsubscribes"
"""
input unsubscribes_on_conflict {
  constraint: unsubscribes_constraint!
  update_columns: [unsubscribes_update_column!]!
  where: unsubscribes_bool_exp
}

"""
ordering options when selecting data from "unsubscribes"
"""
input unsubscribes_order_by {
  email_type: order_by
  id: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "unsubscribes"
"""
input unsubscribes_pk_columns_input {
  id: Int!
}

"""
select columns of table "unsubscribes"
"""
enum unsubscribes_select_column {
  """column name"""
  email_type

  """column name"""
  id

  """column name"""
  user_id
}

"""
input type for updating data in table "unsubscribes"
"""
input unsubscribes_set_input {
  email_type: String
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type unsubscribes_stddev_fields {
  id: Float
  user_id: Float
}

"""
order by stddev() on columns of table "unsubscribes"
"""
input unsubscribes_stddev_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type unsubscribes_stddev_pop_fields {
  id: Float
  user_id: Float
}

"""
order by stddev_pop() on columns of table "unsubscribes"
"""
input unsubscribes_stddev_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type unsubscribes_stddev_samp_fields {
  id: Float
  user_id: Float
}

"""
order by stddev_samp() on columns of table "unsubscribes"
"""
input unsubscribes_stddev_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate sum on columns"""
type unsubscribes_sum_fields {
  id: Int
  user_id: Int
}

"""
order by sum() on columns of table "unsubscribes"
"""
input unsubscribes_sum_order_by {
  id: order_by
  user_id: order_by
}

"""
update columns of table "unsubscribes"
"""
enum unsubscribes_update_column {
  """column name"""
  email_type

  """column name"""
  id

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type unsubscribes_var_pop_fields {
  id: Float
  user_id: Float
}

"""
order by var_pop() on columns of table "unsubscribes"
"""
input unsubscribes_var_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type unsubscribes_var_samp_fields {
  id: Float
  user_id: Float
}

"""
order by var_samp() on columns of table "unsubscribes"
"""
input unsubscribes_var_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type unsubscribes_variance_fields {
  id: Float
  user_id: Float
}

"""
order by variance() on columns of table "unsubscribes"
"""
input unsubscribes_variance_order_by {
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "user_dashboards"
"""
type user_dashboards {
  createdAt: timestamptz
  dashboardId: Int!
  organizationId: Int!
  updatedAt: timestamptz
  userId: Int!
}

"""
aggregated selection of "user_dashboards"
"""
type user_dashboards_aggregate {
  aggregate: user_dashboards_aggregate_fields
  nodes: [user_dashboards!]!
}

"""
aggregate fields of "user_dashboards"
"""
type user_dashboards_aggregate_fields {
  avg: user_dashboards_avg_fields
  count(columns: [user_dashboards_select_column!], distinct: Boolean): Int
  max: user_dashboards_max_fields
  min: user_dashboards_min_fields
  stddev: user_dashboards_stddev_fields
  stddev_pop: user_dashboards_stddev_pop_fields
  stddev_samp: user_dashboards_stddev_samp_fields
  sum: user_dashboards_sum_fields
  var_pop: user_dashboards_var_pop_fields
  var_samp: user_dashboards_var_samp_fields
  variance: user_dashboards_variance_fields
}

"""
order by aggregate values of table "user_dashboards"
"""
input user_dashboards_aggregate_order_by {
  avg: user_dashboards_avg_order_by
  count: order_by
  max: user_dashboards_max_order_by
  min: user_dashboards_min_order_by
  stddev: user_dashboards_stddev_order_by
  stddev_pop: user_dashboards_stddev_pop_order_by
  stddev_samp: user_dashboards_stddev_samp_order_by
  sum: user_dashboards_sum_order_by
  var_pop: user_dashboards_var_pop_order_by
  var_samp: user_dashboards_var_samp_order_by
  variance: user_dashboards_variance_order_by
}

"""
input type for inserting array relation for remote table "user_dashboards"
"""
input user_dashboards_arr_rel_insert_input {
  data: [user_dashboards_insert_input!]!
  on_conflict: user_dashboards_on_conflict
}

"""aggregate avg on columns"""
type user_dashboards_avg_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by avg() on columns of table "user_dashboards"
"""
input user_dashboards_avg_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "user_dashboards". All fields are combined with a logical 'AND'.
"""
input user_dashboards_bool_exp {
  _and: [user_dashboards_bool_exp]
  _not: user_dashboards_bool_exp
  _or: [user_dashboards_bool_exp]
  createdAt: timestamptz_comparison_exp
  dashboardId: Int_comparison_exp
  organizationId: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "user_dashboards"
"""
enum user_dashboards_constraint {
  """unique or primary key constraint"""
  user_dashboards_pkey
}

"""
input type for incrementing integer column in table "user_dashboards"
"""
input user_dashboards_inc_input {
  dashboardId: Int
  organizationId: Int
  userId: Int
}

"""
input type for inserting data into table "user_dashboards"
"""
input user_dashboards_insert_input {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  updatedAt: timestamptz
  userId: Int
}

"""aggregate max on columns"""
type user_dashboards_max_fields {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  updatedAt: timestamptz
  userId: Int
}

"""
order by max() on columns of table "user_dashboards"
"""
input user_dashboards_max_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  updatedAt: order_by
  userId: order_by
}

"""aggregate min on columns"""
type user_dashboards_min_fields {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  updatedAt: timestamptz
  userId: Int
}

"""
order by min() on columns of table "user_dashboards"
"""
input user_dashboards_min_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  updatedAt: order_by
  userId: order_by
}

"""
response of any mutation on the table "user_dashboards"
"""
type user_dashboards_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_dashboards!]!
}

"""
input type for inserting object relation for remote table "user_dashboards"
"""
input user_dashboards_obj_rel_insert_input {
  data: user_dashboards_insert_input!
  on_conflict: user_dashboards_on_conflict
}

"""
on conflict condition type for table "user_dashboards"
"""
input user_dashboards_on_conflict {
  constraint: user_dashboards_constraint!
  update_columns: [user_dashboards_update_column!]!
  where: user_dashboards_bool_exp
}

"""
ordering options when selecting data from "user_dashboards"
"""
input user_dashboards_order_by {
  createdAt: order_by
  dashboardId: order_by
  organizationId: order_by
  updatedAt: order_by
  userId: order_by
}

"""
primary key columns input for table: "user_dashboards"
"""
input user_dashboards_pk_columns_input {
  dashboardId: Int!
  userId: Int!
}

"""
select columns of table "user_dashboards"
"""
enum user_dashboards_select_column {
  """column name"""
  createdAt

  """column name"""
  dashboardId

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""
input type for updating data in table "user_dashboards"
"""
input user_dashboards_set_input {
  createdAt: timestamptz
  dashboardId: Int
  organizationId: Int
  updatedAt: timestamptz
  userId: Int
}

"""aggregate stddev on columns"""
type user_dashboards_stddev_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev() on columns of table "user_dashboards"
"""
input user_dashboards_stddev_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type user_dashboards_stddev_pop_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "user_dashboards"
"""
input user_dashboards_stddev_pop_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type user_dashboards_stddev_samp_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "user_dashboards"
"""
input user_dashboards_stddev_samp_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type user_dashboards_sum_fields {
  dashboardId: Int
  organizationId: Int
  userId: Int
}

"""
order by sum() on columns of table "user_dashboards"
"""
input user_dashboards_sum_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""
update columns of table "user_dashboards"
"""
enum user_dashboards_update_column {
  """column name"""
  createdAt

  """column name"""
  dashboardId

  """column name"""
  organizationId

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type user_dashboards_var_pop_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "user_dashboards"
"""
input user_dashboards_var_pop_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type user_dashboards_var_samp_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "user_dashboards"
"""
input user_dashboards_var_samp_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type user_dashboards_variance_fields {
  dashboardId: Float
  organizationId: Float
  userId: Float
}

"""
order by variance() on columns of table "user_dashboards"
"""
input user_dashboards_variance_order_by {
  dashboardId: order_by
  organizationId: order_by
  userId: order_by
}

"""
columns and relationships of "user_features"
"""
type user_features {
  """An object relationship"""
  feature: features!
  featureId: Int!

  """An object relationship"""
  user: users!
  userId: Int!
}

"""
aggregated selection of "user_features"
"""
type user_features_aggregate {
  aggregate: user_features_aggregate_fields
  nodes: [user_features!]!
}

"""
aggregate fields of "user_features"
"""
type user_features_aggregate_fields {
  avg: user_features_avg_fields
  count(columns: [user_features_select_column!], distinct: Boolean): Int
  max: user_features_max_fields
  min: user_features_min_fields
  stddev: user_features_stddev_fields
  stddev_pop: user_features_stddev_pop_fields
  stddev_samp: user_features_stddev_samp_fields
  sum: user_features_sum_fields
  var_pop: user_features_var_pop_fields
  var_samp: user_features_var_samp_fields
  variance: user_features_variance_fields
}

"""
order by aggregate values of table "user_features"
"""
input user_features_aggregate_order_by {
  avg: user_features_avg_order_by
  count: order_by
  max: user_features_max_order_by
  min: user_features_min_order_by
  stddev: user_features_stddev_order_by
  stddev_pop: user_features_stddev_pop_order_by
  stddev_samp: user_features_stddev_samp_order_by
  sum: user_features_sum_order_by
  var_pop: user_features_var_pop_order_by
  var_samp: user_features_var_samp_order_by
  variance: user_features_variance_order_by
}

"""
input type for inserting array relation for remote table "user_features"
"""
input user_features_arr_rel_insert_input {
  data: [user_features_insert_input!]!
  on_conflict: user_features_on_conflict
}

"""aggregate avg on columns"""
type user_features_avg_fields {
  featureId: Float
  userId: Float
}

"""
order by avg() on columns of table "user_features"
"""
input user_features_avg_order_by {
  featureId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "user_features". All fields are combined with a logical 'AND'.
"""
input user_features_bool_exp {
  _and: [user_features_bool_exp]
  _not: user_features_bool_exp
  _or: [user_features_bool_exp]
  feature: features_bool_exp
  featureId: Int_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "user_features"
"""
enum user_features_constraint {
  """unique or primary key constraint"""
  user_features_pkey
}

"""
input type for incrementing integer column in table "user_features"
"""
input user_features_inc_input {
  featureId: Int
  userId: Int
}

"""
input type for inserting data into table "user_features"
"""
input user_features_insert_input {
  feature: features_obj_rel_insert_input
  featureId: Int
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type user_features_max_fields {
  featureId: Int
  userId: Int
}

"""
order by max() on columns of table "user_features"
"""
input user_features_max_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type user_features_min_fields {
  featureId: Int
  userId: Int
}

"""
order by min() on columns of table "user_features"
"""
input user_features_min_order_by {
  featureId: order_by
  userId: order_by
}

"""
response of any mutation on the table "user_features"
"""
type user_features_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_features!]!
}

"""
input type for inserting object relation for remote table "user_features"
"""
input user_features_obj_rel_insert_input {
  data: user_features_insert_input!
  on_conflict: user_features_on_conflict
}

"""
on conflict condition type for table "user_features"
"""
input user_features_on_conflict {
  constraint: user_features_constraint!
  update_columns: [user_features_update_column!]!
  where: user_features_bool_exp
}

"""
ordering options when selecting data from "user_features"
"""
input user_features_order_by {
  feature: features_order_by
  featureId: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "user_features"
"""
input user_features_pk_columns_input {
  featureId: Int!
  userId: Int!
}

"""
select columns of table "user_features"
"""
enum user_features_select_column {
  """column name"""
  featureId

  """column name"""
  userId
}

"""
input type for updating data in table "user_features"
"""
input user_features_set_input {
  featureId: Int
  userId: Int
}

"""aggregate stddev on columns"""
type user_features_stddev_fields {
  featureId: Float
  userId: Float
}

"""
order by stddev() on columns of table "user_features"
"""
input user_features_stddev_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type user_features_stddev_pop_fields {
  featureId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "user_features"
"""
input user_features_stddev_pop_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type user_features_stddev_samp_fields {
  featureId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "user_features"
"""
input user_features_stddev_samp_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type user_features_sum_fields {
  featureId: Int
  userId: Int
}

"""
order by sum() on columns of table "user_features"
"""
input user_features_sum_order_by {
  featureId: order_by
  userId: order_by
}

"""
update columns of table "user_features"
"""
enum user_features_update_column {
  """column name"""
  featureId

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type user_features_var_pop_fields {
  featureId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "user_features"
"""
input user_features_var_pop_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type user_features_var_samp_fields {
  featureId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "user_features"
"""
input user_features_var_samp_order_by {
  featureId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type user_features_variance_fields {
  featureId: Float
  userId: Float
}

"""
order by variance() on columns of table "user_features"
"""
input user_features_variance_order_by {
  featureId: order_by
  userId: order_by
}

"""
A list of User Preferences organized by Key


columns and relationships of "user_prefs"

"""
type user_prefs {
  """Timestamp indicating when the User Preference was created"""
  createdAt: timestamptz
  date_create: Int
  id: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """A key used to specify which User Preference is being set"""
  prefKey: String!

  """The Value to be set (the type varies based on the Key!)"""
  prefValue: String!

  """Timestamp indicating when the User Preference was last updated"""
  updatedAt: timestamptz

  """An object relationship"""
  user: users!
  userId: Int!
}

"""
aggregated selection of "user_prefs"
"""
type user_prefs_aggregate {
  aggregate: user_prefs_aggregate_fields
  nodes: [user_prefs!]!
}

"""
aggregate fields of "user_prefs"
"""
type user_prefs_aggregate_fields {
  avg: user_prefs_avg_fields
  count(columns: [user_prefs_select_column!], distinct: Boolean): Int
  max: user_prefs_max_fields
  min: user_prefs_min_fields
  stddev: user_prefs_stddev_fields
  stddev_pop: user_prefs_stddev_pop_fields
  stddev_samp: user_prefs_stddev_samp_fields
  sum: user_prefs_sum_fields
  var_pop: user_prefs_var_pop_fields
  var_samp: user_prefs_var_samp_fields
  variance: user_prefs_variance_fields
}

"""
order by aggregate values of table "user_prefs"
"""
input user_prefs_aggregate_order_by {
  avg: user_prefs_avg_order_by
  count: order_by
  max: user_prefs_max_order_by
  min: user_prefs_min_order_by
  stddev: user_prefs_stddev_order_by
  stddev_pop: user_prefs_stddev_pop_order_by
  stddev_samp: user_prefs_stddev_samp_order_by
  sum: user_prefs_sum_order_by
  var_pop: user_prefs_var_pop_order_by
  var_samp: user_prefs_var_samp_order_by
  variance: user_prefs_variance_order_by
}

"""
input type for inserting array relation for remote table "user_prefs"
"""
input user_prefs_arr_rel_insert_input {
  data: [user_prefs_insert_input!]!
  on_conflict: user_prefs_on_conflict
}

"""aggregate avg on columns"""
type user_prefs_avg_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by avg() on columns of table "user_prefs"
"""
input user_prefs_avg_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "user_prefs". All fields are combined with a logical 'AND'.
"""
input user_prefs_bool_exp {
  _and: [user_prefs_bool_exp]
  _not: user_prefs_bool_exp
  _or: [user_prefs_bool_exp]
  createdAt: timestamptz_comparison_exp
  date_create: Int_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  prefKey: String_comparison_exp
  prefValue: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "user_prefs"
"""
enum user_prefs_constraint {
  """unique or primary key constraint"""
  user_prefs_pkey

  """unique or primary key constraint"""
  user_prefs_user_id_pref_key_key
}

"""
input type for incrementing integer column in table "user_prefs"
"""
input user_prefs_inc_input {
  date_create: Int
  id: Int
  organizationId: Int
  userId: Int
}

"""
input type for inserting data into table "user_prefs"
"""
input user_prefs_insert_input {
  createdAt: timestamptz
  date_create: Int
  id: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  prefKey: String
  prefValue: String
  updatedAt: timestamptz
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type user_prefs_max_fields {
  createdAt: timestamptz
  date_create: Int
  id: Int
  organizationId: Int
  prefKey: String
  prefValue: String
  updatedAt: timestamptz
  userId: Int
}

"""
order by max() on columns of table "user_prefs"
"""
input user_prefs_max_order_by {
  createdAt: order_by
  date_create: order_by
  id: order_by
  organizationId: order_by
  prefKey: order_by
  prefValue: order_by
  updatedAt: order_by
  userId: order_by
}

"""aggregate min on columns"""
type user_prefs_min_fields {
  createdAt: timestamptz
  date_create: Int
  id: Int
  organizationId: Int
  prefKey: String
  prefValue: String
  updatedAt: timestamptz
  userId: Int
}

"""
order by min() on columns of table "user_prefs"
"""
input user_prefs_min_order_by {
  createdAt: order_by
  date_create: order_by
  id: order_by
  organizationId: order_by
  prefKey: order_by
  prefValue: order_by
  updatedAt: order_by
  userId: order_by
}

"""
response of any mutation on the table "user_prefs"
"""
type user_prefs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_prefs!]!
}

"""
input type for inserting object relation for remote table "user_prefs"
"""
input user_prefs_obj_rel_insert_input {
  data: user_prefs_insert_input!
  on_conflict: user_prefs_on_conflict
}

"""
on conflict condition type for table "user_prefs"
"""
input user_prefs_on_conflict {
  constraint: user_prefs_constraint!
  update_columns: [user_prefs_update_column!]!
  where: user_prefs_bool_exp
}

"""
ordering options when selecting data from "user_prefs"
"""
input user_prefs_order_by {
  createdAt: order_by
  date_create: order_by
  id: order_by
  organization: organizations_order_by
  organizationId: order_by
  prefKey: order_by
  prefValue: order_by
  updatedAt: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "user_prefs"
"""
input user_prefs_pk_columns_input {
  id: Int!
}

"""
select columns of table "user_prefs"
"""
enum user_prefs_select_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  prefKey

  """column name"""
  prefValue

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""
input type for updating data in table "user_prefs"
"""
input user_prefs_set_input {
  createdAt: timestamptz
  date_create: Int
  id: Int
  organizationId: Int
  prefKey: String
  prefValue: String
  updatedAt: timestamptz
  userId: Int
}

"""aggregate stddev on columns"""
type user_prefs_stddev_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev() on columns of table "user_prefs"
"""
input user_prefs_stddev_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type user_prefs_stddev_pop_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "user_prefs"
"""
input user_prefs_stddev_pop_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type user_prefs_stddev_samp_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "user_prefs"
"""
input user_prefs_stddev_samp_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type user_prefs_sum_fields {
  date_create: Int
  id: Int
  organizationId: Int
  userId: Int
}

"""
order by sum() on columns of table "user_prefs"
"""
input user_prefs_sum_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
update columns of table "user_prefs"
"""
enum user_prefs_update_column {
  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  prefKey

  """column name"""
  prefValue

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type user_prefs_var_pop_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "user_prefs"
"""
input user_prefs_var_pop_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type user_prefs_var_samp_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "user_prefs"
"""
input user_prefs_var_samp_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type user_prefs_variance_fields {
  date_create: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by variance() on columns of table "user_prefs"
"""
input user_prefs_variance_order_by {
  date_create: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
Enum for our User Roles


columns and relationships of "user_role_types"

"""
type user_role_types {
  comment: String!
  value: String!
}

"""
aggregated selection of "user_role_types"
"""
type user_role_types_aggregate {
  aggregate: user_role_types_aggregate_fields
  nodes: [user_role_types!]!
}

"""
aggregate fields of "user_role_types"
"""
type user_role_types_aggregate_fields {
  count(columns: [user_role_types_select_column!], distinct: Boolean): Int
  max: user_role_types_max_fields
  min: user_role_types_min_fields
}

"""
order by aggregate values of table "user_role_types"
"""
input user_role_types_aggregate_order_by {
  count: order_by
  max: user_role_types_max_order_by
  min: user_role_types_min_order_by
}

"""
input type for inserting array relation for remote table "user_role_types"
"""
input user_role_types_arr_rel_insert_input {
  data: [user_role_types_insert_input!]!
  on_conflict: user_role_types_on_conflict
}

"""
Boolean expression to filter rows from the table "user_role_types". All fields are combined with a logical 'AND'.
"""
input user_role_types_bool_exp {
  _and: [user_role_types_bool_exp]
  _not: user_role_types_bool_exp
  _or: [user_role_types_bool_exp]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "user_role_types"
"""
enum user_role_types_constraint {
  """unique or primary key constraint"""
  user_role_types_pkey
}

enum user_role_types_enum {
  """	Full administrator access."""
  admin

  """Org Admins have extends permissions within their Organization"""
  org_admin

  """
  A Service User is set up for each Organization as a user account to manage machine changes, such as processing model changes.
  """
  service_user

  """
  Transform Employees have limited visibility across Organizations to help manage and facilitate deployment
  """
  transform_employee
}

"""
expression to compare columns of type user_role_types_enum. All fields are combined with logical 'AND'.
"""
input user_role_types_enum_comparison_exp {
  _eq: user_role_types_enum
  _in: [user_role_types_enum!]
  _is_null: Boolean
  _neq: user_role_types_enum
  _nin: [user_role_types_enum!]
}

"""
input type for inserting data into table "user_role_types"
"""
input user_role_types_insert_input {
  comment: String
  value: String
}

"""aggregate max on columns"""
type user_role_types_max_fields {
  comment: String
  value: String
}

"""
order by max() on columns of table "user_role_types"
"""
input user_role_types_max_order_by {
  comment: order_by
  value: order_by
}

"""aggregate min on columns"""
type user_role_types_min_fields {
  comment: String
  value: String
}

"""
order by min() on columns of table "user_role_types"
"""
input user_role_types_min_order_by {
  comment: order_by
  value: order_by
}

"""
response of any mutation on the table "user_role_types"
"""
type user_role_types_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_role_types!]!
}

"""
input type for inserting object relation for remote table "user_role_types"
"""
input user_role_types_obj_rel_insert_input {
  data: user_role_types_insert_input!
  on_conflict: user_role_types_on_conflict
}

"""
on conflict condition type for table "user_role_types"
"""
input user_role_types_on_conflict {
  constraint: user_role_types_constraint!
  update_columns: [user_role_types_update_column!]!
  where: user_role_types_bool_exp
}

"""
ordering options when selecting data from "user_role_types"
"""
input user_role_types_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: "user_role_types"
"""
input user_role_types_pk_columns_input {
  value: String!
}

"""
select columns of table "user_role_types"
"""
enum user_role_types_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
input type for updating data in table "user_role_types"
"""
input user_role_types_set_input {
  comment: String
  value: String
}

"""
update columns of table "user_role_types"
"""
enum user_role_types_update_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
columns and relationships of "user_roles"
"""
type user_roles {
  """Timestamp indicating when a user role was added"""
  createdAt: timestamptz
  date_added: Int
  date_removed: Int
  id: Int!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """
  Soft delete mechanism for a User Role. Rows with non-null values are omitted from list results.
  """
  removedAt: timestamptz
  role: user_role_types_enum!

  """Timestamp indicating the last time a user role was updated"""
  updatedAt: timestamptz

  """An object relationship"""
  user: users!
  userId: Int!
}

"""
aggregated selection of "user_roles"
"""
type user_roles_aggregate {
  aggregate: user_roles_aggregate_fields
  nodes: [user_roles!]!
}

"""
aggregate fields of "user_roles"
"""
type user_roles_aggregate_fields {
  avg: user_roles_avg_fields
  count(columns: [user_roles_select_column!], distinct: Boolean): Int
  max: user_roles_max_fields
  min: user_roles_min_fields
  stddev: user_roles_stddev_fields
  stddev_pop: user_roles_stddev_pop_fields
  stddev_samp: user_roles_stddev_samp_fields
  sum: user_roles_sum_fields
  var_pop: user_roles_var_pop_fields
  var_samp: user_roles_var_samp_fields
  variance: user_roles_variance_fields
}

"""
order by aggregate values of table "user_roles"
"""
input user_roles_aggregate_order_by {
  avg: user_roles_avg_order_by
  count: order_by
  max: user_roles_max_order_by
  min: user_roles_min_order_by
  stddev: user_roles_stddev_order_by
  stddev_pop: user_roles_stddev_pop_order_by
  stddev_samp: user_roles_stddev_samp_order_by
  sum: user_roles_sum_order_by
  var_pop: user_roles_var_pop_order_by
  var_samp: user_roles_var_samp_order_by
  variance: user_roles_variance_order_by
}

"""
input type for inserting array relation for remote table "user_roles"
"""
input user_roles_arr_rel_insert_input {
  data: [user_roles_insert_input!]!
  on_conflict: user_roles_on_conflict
}

"""aggregate avg on columns"""
type user_roles_avg_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by avg() on columns of table "user_roles"
"""
input user_roles_avg_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "user_roles". All fields are combined with a logical 'AND'.
"""
input user_roles_bool_exp {
  _and: [user_roles_bool_exp]
  _not: user_roles_bool_exp
  _or: [user_roles_bool_exp]
  createdAt: timestamptz_comparison_exp
  date_added: Int_comparison_exp
  date_removed: Int_comparison_exp
  id: Int_comparison_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  removedAt: timestamptz_comparison_exp
  role: user_role_types_enum_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user: users_bool_exp
  userId: Int_comparison_exp
}

"""
unique or primary key constraints on table "user_roles"
"""
enum user_roles_constraint {
  """unique or primary key constraint"""
  user_roles_pkey

  """unique or primary key constraint"""
  user_roles_user_id_role_key
}

"""
input type for incrementing integer column in table "user_roles"
"""
input user_roles_inc_input {
  date_added: Int
  date_removed: Int
  id: Int
  organizationId: Int
  userId: Int
}

"""
input type for inserting data into table "user_roles"
"""
input user_roles_insert_input {
  createdAt: timestamptz
  date_added: Int
  date_removed: Int
  id: Int
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  removedAt: timestamptz
  role: user_role_types_enum
  updatedAt: timestamptz
  user: users_obj_rel_insert_input
  userId: Int
}

"""aggregate max on columns"""
type user_roles_max_fields {
  createdAt: timestamptz
  date_added: Int
  date_removed: Int
  id: Int
  organizationId: Int
  removedAt: timestamptz
  updatedAt: timestamptz
  userId: Int
}

"""
order by max() on columns of table "user_roles"
"""
input user_roles_max_order_by {
  createdAt: order_by
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  removedAt: order_by
  updatedAt: order_by
  userId: order_by
}

"""aggregate min on columns"""
type user_roles_min_fields {
  createdAt: timestamptz
  date_added: Int
  date_removed: Int
  id: Int
  organizationId: Int
  removedAt: timestamptz
  updatedAt: timestamptz
  userId: Int
}

"""
order by min() on columns of table "user_roles"
"""
input user_roles_min_order_by {
  createdAt: order_by
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  removedAt: order_by
  updatedAt: order_by
  userId: order_by
}

"""
response of any mutation on the table "user_roles"
"""
type user_roles_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_roles!]!
}

"""
input type for inserting object relation for remote table "user_roles"
"""
input user_roles_obj_rel_insert_input {
  data: user_roles_insert_input!
  on_conflict: user_roles_on_conflict
}

"""
on conflict condition type for table "user_roles"
"""
input user_roles_on_conflict {
  constraint: user_roles_constraint!
  update_columns: [user_roles_update_column!]!
  where: user_roles_bool_exp
}

"""
ordering options when selecting data from "user_roles"
"""
input user_roles_order_by {
  createdAt: order_by
  date_added: order_by
  date_removed: order_by
  id: order_by
  organization: organizations_order_by
  organizationId: order_by
  removedAt: order_by
  role: order_by
  updatedAt: order_by
  user: users_order_by
  userId: order_by
}

"""
primary key columns input for table: "user_roles"
"""
input user_roles_pk_columns_input {
  id: Int!
}

"""
select columns of table "user_roles"
"""
enum user_roles_select_column {
  """column name"""
  createdAt

  """column name"""
  date_added

  """column name"""
  date_removed

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  removedAt

  """column name"""
  role

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""
input type for updating data in table "user_roles"
"""
input user_roles_set_input {
  createdAt: timestamptz
  date_added: Int
  date_removed: Int
  id: Int
  organizationId: Int
  removedAt: timestamptz
  role: user_role_types_enum
  updatedAt: timestamptz
  userId: Int
}

"""aggregate stddev on columns"""
type user_roles_stddev_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev() on columns of table "user_roles"
"""
input user_roles_stddev_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_pop on columns"""
type user_roles_stddev_pop_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_pop() on columns of table "user_roles"
"""
input user_roles_stddev_pop_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate stddev_samp on columns"""
type user_roles_stddev_samp_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by stddev_samp() on columns of table "user_roles"
"""
input user_roles_stddev_samp_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate sum on columns"""
type user_roles_sum_fields {
  date_added: Int
  date_removed: Int
  id: Int
  organizationId: Int
  userId: Int
}

"""
order by sum() on columns of table "user_roles"
"""
input user_roles_sum_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
update columns of table "user_roles"
"""
enum user_roles_update_column {
  """column name"""
  createdAt

  """column name"""
  date_added

  """column name"""
  date_removed

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  removedAt

  """column name"""
  role

  """column name"""
  updatedAt

  """column name"""
  userId
}

"""aggregate var_pop on columns"""
type user_roles_var_pop_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by var_pop() on columns of table "user_roles"
"""
input user_roles_var_pop_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate var_samp on columns"""
type user_roles_var_samp_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by var_samp() on columns of table "user_roles"
"""
input user_roles_var_samp_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""aggregate variance on columns"""
type user_roles_variance_fields {
  date_added: Float
  date_removed: Float
  id: Float
  organizationId: Float
  userId: Float
}

"""
order by variance() on columns of table "user_roles"
"""
input user_roles_variance_order_by {
  date_added: order_by
  date_removed: order_by
  id: order_by
  organizationId: order_by
  userId: order_by
}

"""
Users are Transform end users. They belong to Organizations and Teams within Organizations.


columns and relationships of "users"

"""
type users {
  """An array relationship"""
  annotations(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): [annotations!]!

  """An aggregated array relationship"""
  annotations_aggregate(
    """distinct select on columns"""
    distinct_on: [annotations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [annotations_order_by!]

    """filter the rows returned"""
    where: annotations_bool_exp
  ): annotations_aggregate!

  """An array relationship"""
  apiKeys(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): [api_keys!]!

  """An array relationship"""
  apiKeysByRevokerId(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): [api_keys!]!

  """An aggregated array relationship"""
  apiKeysByRevokerId_aggregate(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): api_keys_aggregate!

  """An aggregated array relationship"""
  apiKeys_aggregate(
    """distinct select on columns"""
    distinct_on: [api_keys_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [api_keys_order_by!]

    """filter the rows returned"""
    where: api_keys_bool_exp
  ): api_keys_aggregate!
  auth0Id: String

  """Remote relationship field"""
  auth0Profile: Auth0Profile
  avatarUrl: String

  """Timestamp indicating when the user was created"""
  createdAt: timestamptz

  """An array relationship"""
  dashboards(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): [user_dashboards!]!

  """An aggregated array relationship"""
  dashboards_aggregate(
    """distinct select on columns"""
    distinct_on: [user_dashboards_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_dashboards_order_by!]

    """filter the rows returned"""
    where: user_dashboards_bool_exp
  ): user_dashboards_aggregate!
  date_create: Int
  date_deactivate: Int

  """
  Soft delete mechanism for a User. Rows with non-null values are omitted from list results.
  """
  deactivatedAt: timestamptz

  """The `User`'s email address"""
  email: String!

  """An array relationship"""
  features(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): [user_features!]!

  """An aggregated array relationship"""
  features_aggregate(
    """distinct select on columns"""
    distinct_on: [user_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_features_order_by!]

    """filter the rows returned"""
    where: user_features_bool_exp
  ): user_features_aggregate!
  id: Int!

  """
  A computed field, executes function "user_is_admin"
  """
  isAdmin: Boolean

  """An array relationship"""
  metricCollections(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): [metric_collections!]!

  """An aggregated array relationship"""
  metricCollections_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_collections_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_collections_order_by!]

    """filter the rows returned"""
    where: metric_collections_bool_exp
  ): metric_collections_aggregate!

  """An array relationship"""
  metric_approvals(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): [metric_approvals!]!

  """An aggregated array relationship"""
  metric_approvals_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_approvals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_approvals_order_by!]

    """filter the rows returned"""
    where: metric_approvals_bool_exp
  ): metric_approvals_aggregate!

  """An array relationship"""
  metric_views(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): [metric_view!]!

  """An aggregated array relationship"""
  metric_views_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_view_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_view_order_by!]

    """filter the rows returned"""
    where: metric_view_bool_exp
  ): metric_view_aggregate!

  """An array relationship"""
  modelsUploaded(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): [models!]!

  """An aggregated array relationship"""
  modelsUploaded_aggregate(
    """distinct select on columns"""
    distinct_on: [models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [models_order_by!]

    """filter the rows returned"""
    where: models_bool_exp
  ): models_aggregate!

  """An object relationship"""
  organization: organizations!
  organizationId: Int!

  """An object relationship"""
  primaryDashboard: dashboards
  primaryDashboardId: Int

  """An array relationship"""
  question_likes(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): [question_likes!]!

  """An aggregated array relationship"""
  question_likes_aggregate(
    """distinct select on columns"""
    distinct_on: [question_likes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_likes_order_by!]

    """filter the rows returned"""
    where: question_likes_bool_exp
  ): question_likes_aggregate!

  """An array relationship"""
  question_replies(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): [question_replies!]!

  """An aggregated array relationship"""
  question_replies_aggregate(
    """distinct select on columns"""
    distinct_on: [question_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_replies_order_by!]

    """filter the rows returned"""
    where: question_replies_bool_exp
  ): question_replies_aggregate!

  """An array relationship"""
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """An array relationship"""
  questionsByResolvedBy(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """An aggregated array relationship"""
  questionsByResolvedBy_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """An array relationship"""
  questionsDirectedTo(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): [question_directed_to!]!

  """An aggregated array relationship"""
  questionsDirectedTo_aggregate(
    """distinct select on columns"""
    distinct_on: [question_directed_to_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [question_directed_to_order_by!]

    """filter the rows returned"""
    where: question_directed_to_bool_exp
  ): question_directed_to_aggregate!

  """An aggregated array relationship"""
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """An array relationship"""
  savedQueries(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): [saved_queries!]!

  """An aggregated array relationship"""
  savedQueries_aggregate(
    """distinct select on columns"""
    distinct_on: [saved_queries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [saved_queries_order_by!]

    """filter the rows returned"""
    where: saved_queries_bool_exp
  ): saved_queries_aggregate!

  """An array relationship"""
  team_members(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): [team_members!]!

  """An aggregated array relationship"""
  team_members_aggregate(
    """distinct select on columns"""
    distinct_on: [team_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [team_members_order_by!]

    """filter the rows returned"""
    where: team_members_bool_exp
  ): team_members_aggregate!

  """An array relationship"""
  teamsCreated(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): [teams!]!

  """An aggregated array relationship"""
  teamsCreated_aggregate(
    """distinct select on columns"""
    distinct_on: [teams_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teams_order_by!]

    """filter the rows returned"""
    where: teams_bool_exp
  ): teams_aggregate!

  """Timestamp indicating the last time the user was updated"""
  updatedAt: timestamptz

  """The `User`'s full name"""
  userName: String!

  """An array relationship"""
  userRoles(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): [user_roles!]!

  """An aggregated array relationship"""
  userRoles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_roles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_roles_order_by!]

    """filter the rows returned"""
    where: user_roles_bool_exp
  ): user_roles_aggregate!

  """An array relationship"""
  user_prefs(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): [user_prefs!]!

  """An aggregated array relationship"""
  user_prefs_aggregate(
    """distinct select on columns"""
    distinct_on: [user_prefs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_prefs_order_by!]

    """filter the rows returned"""
    where: user_prefs_bool_exp
  ): user_prefs_aggregate!
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  aggregate: users_aggregate_fields
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  avg: users_avg_fields
  count(columns: [users_select_column!], distinct: Boolean): Int
  max: users_max_fields
  min: users_min_fields
  stddev: users_stddev_fields
  stddev_pop: users_stddev_pop_fields
  stddev_samp: users_stddev_samp_fields
  sum: users_sum_fields
  var_pop: users_var_pop_fields
  var_samp: users_var_samp_fields
  variance: users_variance_fields
}

"""
order by aggregate values of table "users"
"""
input users_aggregate_order_by {
  avg: users_avg_order_by
  count: order_by
  max: users_max_order_by
  min: users_min_order_by
  stddev: users_stddev_order_by
  stddev_pop: users_stddev_pop_order_by
  stddev_samp: users_stddev_samp_order_by
  sum: users_sum_order_by
  var_pop: users_var_pop_order_by
  var_samp: users_var_samp_order_by
  variance: users_variance_order_by
}

"""
input type for inserting array relation for remote table "users"
"""
input users_arr_rel_insert_input {
  data: [users_insert_input!]!
  on_conflict: users_on_conflict
}

"""aggregate avg on columns"""
type users_avg_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by avg() on columns of table "users"
"""
input users_avg_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp]
  _not: users_bool_exp
  _or: [users_bool_exp]
  annotations: annotations_bool_exp
  apiKeys: api_keys_bool_exp
  apiKeysByRevokerId: api_keys_bool_exp
  auth0Id: String_comparison_exp
  avatarUrl: String_comparison_exp
  createdAt: timestamptz_comparison_exp
  dashboards: user_dashboards_bool_exp
  date_create: Int_comparison_exp
  date_deactivate: Int_comparison_exp
  deactivatedAt: timestamptz_comparison_exp
  email: String_comparison_exp
  features: user_features_bool_exp
  id: Int_comparison_exp
  metricCollections: metric_collections_bool_exp
  metric_approvals: metric_approvals_bool_exp
  metric_views: metric_view_bool_exp
  modelsUploaded: models_bool_exp
  organization: organizations_bool_exp
  organizationId: Int_comparison_exp
  primaryDashboard: dashboards_bool_exp
  primaryDashboardId: Int_comparison_exp
  question_likes: question_likes_bool_exp
  question_replies: question_replies_bool_exp
  questions: questions_bool_exp
  questionsByResolvedBy: questions_bool_exp
  questionsDirectedTo: question_directed_to_bool_exp
  savedQueries: saved_queries_bool_exp
  team_members: team_members_bool_exp
  teamsCreated: teams_bool_exp
  updatedAt: timestamptz_comparison_exp
  userName: String_comparison_exp
  userRoles: user_roles_bool_exp
  user_prefs: user_prefs_bool_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """unique or primary key constraint"""
  users_auth0_id_key

  """unique or primary key constraint"""
  users_email_key

  """unique or primary key constraint"""
  users_pkey
}

"""
input type for incrementing integer column in table "users"
"""
input users_inc_input {
  date_create: Int
  date_deactivate: Int
  id: Int
  organizationId: Int
  primaryDashboardId: Int
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  annotations: annotations_arr_rel_insert_input
  apiKeys: api_keys_arr_rel_insert_input
  apiKeysByRevokerId: api_keys_arr_rel_insert_input
  auth0Id: String
  avatarUrl: String
  createdAt: timestamptz
  dashboards: user_dashboards_arr_rel_insert_input
  date_create: Int
  date_deactivate: Int
  deactivatedAt: timestamptz
  email: String
  features: user_features_arr_rel_insert_input
  id: Int
  metricCollections: metric_collections_arr_rel_insert_input
  metric_approvals: metric_approvals_arr_rel_insert_input
  metric_views: metric_view_arr_rel_insert_input
  modelsUploaded: models_arr_rel_insert_input
  organization: organizations_obj_rel_insert_input
  organizationId: Int
  primaryDashboard: dashboards_obj_rel_insert_input
  primaryDashboardId: Int
  question_likes: question_likes_arr_rel_insert_input
  question_replies: question_replies_arr_rel_insert_input
  questions: questions_arr_rel_insert_input
  questionsByResolvedBy: questions_arr_rel_insert_input
  questionsDirectedTo: question_directed_to_arr_rel_insert_input
  savedQueries: saved_queries_arr_rel_insert_input
  team_members: team_members_arr_rel_insert_input
  teamsCreated: teams_arr_rel_insert_input
  updatedAt: timestamptz
  userName: String
  userRoles: user_roles_arr_rel_insert_input
  user_prefs: user_prefs_arr_rel_insert_input
}

"""aggregate max on columns"""
type users_max_fields {
  auth0Id: String
  avatarUrl: String
  createdAt: timestamptz
  date_create: Int
  date_deactivate: Int
  deactivatedAt: timestamptz
  email: String
  id: Int
  organizationId: Int
  primaryDashboardId: Int
  updatedAt: timestamptz
  userName: String
}

"""
order by max() on columns of table "users"
"""
input users_max_order_by {
  auth0Id: order_by
  avatarUrl: order_by
  createdAt: order_by
  date_create: order_by
  date_deactivate: order_by
  deactivatedAt: order_by
  email: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
  updatedAt: order_by
  userName: order_by
}

"""aggregate min on columns"""
type users_min_fields {
  auth0Id: String
  avatarUrl: String
  createdAt: timestamptz
  date_create: Int
  date_deactivate: Int
  deactivatedAt: timestamptz
  email: String
  id: Int
  organizationId: Int
  primaryDashboardId: Int
  updatedAt: timestamptz
  userName: String
}

"""
order by min() on columns of table "users"
"""
input users_min_order_by {
  auth0Id: order_by
  avatarUrl: order_by
  createdAt: order_by
  date_create: order_by
  date_deactivate: order_by
  deactivatedAt: order_by
  email: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
  updatedAt: order_by
  userName: order_by
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [users!]!
}

"""
input type for inserting object relation for remote table "users"
"""
input users_obj_rel_insert_input {
  data: users_insert_input!
  on_conflict: users_on_conflict
}

"""
on conflict condition type for table "users"
"""
input users_on_conflict {
  constraint: users_constraint!
  update_columns: [users_update_column!]!
  where: users_bool_exp
}

"""
ordering options when selecting data from "users"
"""
input users_order_by {
  annotations_aggregate: annotations_aggregate_order_by
  apiKeysByRevokerId_aggregate: api_keys_aggregate_order_by
  apiKeys_aggregate: api_keys_aggregate_order_by
  auth0Id: order_by
  avatarUrl: order_by
  createdAt: order_by
  dashboards_aggregate: user_dashboards_aggregate_order_by
  date_create: order_by
  date_deactivate: order_by
  deactivatedAt: order_by
  email: order_by
  features_aggregate: user_features_aggregate_order_by
  id: order_by
  metricCollections_aggregate: metric_collections_aggregate_order_by
  metric_approvals_aggregate: metric_approvals_aggregate_order_by
  metric_views_aggregate: metric_view_aggregate_order_by
  modelsUploaded_aggregate: models_aggregate_order_by
  organization: organizations_order_by
  organizationId: order_by
  primaryDashboard: dashboards_order_by
  primaryDashboardId: order_by
  question_likes_aggregate: question_likes_aggregate_order_by
  question_replies_aggregate: question_replies_aggregate_order_by
  questionsByResolvedBy_aggregate: questions_aggregate_order_by
  questionsDirectedTo_aggregate: question_directed_to_aggregate_order_by
  questions_aggregate: questions_aggregate_order_by
  savedQueries_aggregate: saved_queries_aggregate_order_by
  team_members_aggregate: team_members_aggregate_order_by
  teamsCreated_aggregate: teams_aggregate_order_by
  updatedAt: order_by
  userName: order_by
  userRoles_aggregate: user_roles_aggregate_order_by
  user_prefs_aggregate: user_prefs_aggregate_order_by
}

"""
primary key columns input for table: "users"
"""
input users_pk_columns_input {
  id: Int!
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  auth0Id

  """column name"""
  avatarUrl

  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_deactivate

  """column name"""
  deactivatedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  primaryDashboardId

  """column name"""
  updatedAt

  """column name"""
  userName
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  auth0Id: String
  avatarUrl: String
  createdAt: timestamptz
  date_create: Int
  date_deactivate: Int
  deactivatedAt: timestamptz
  email: String
  id: Int
  organizationId: Int
  primaryDashboardId: Int
  updatedAt: timestamptz
  userName: String
}

"""aggregate stddev on columns"""
type users_stddev_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev() on columns of table "users"
"""
input users_stddev_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_pop on columns"""
type users_stddev_pop_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev_pop() on columns of table "users"
"""
input users_stddev_pop_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate stddev_samp on columns"""
type users_stddev_samp_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by stddev_samp() on columns of table "users"
"""
input users_stddev_samp_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate sum on columns"""
type users_sum_fields {
  date_create: Int
  date_deactivate: Int
  id: Int
  organizationId: Int
  primaryDashboardId: Int
}

"""
order by sum() on columns of table "users"
"""
input users_sum_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
  auth0Id

  """column name"""
  avatarUrl

  """column name"""
  createdAt

  """column name"""
  date_create

  """column name"""
  date_deactivate

  """column name"""
  deactivatedAt

  """column name"""
  email

  """column name"""
  id

  """column name"""
  organizationId

  """column name"""
  primaryDashboardId

  """column name"""
  updatedAt

  """column name"""
  userName
}

"""aggregate var_pop on columns"""
type users_var_pop_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by var_pop() on columns of table "users"
"""
input users_var_pop_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate var_samp on columns"""
type users_var_samp_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by var_samp() on columns of table "users"
"""
input users_var_samp_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

"""aggregate variance on columns"""
type users_variance_fields {
  date_create: Float
  date_deactivate: Float
  id: Float
  organizationId: Float
  primaryDashboardId: Float
}

"""
order by variance() on columns of table "users"
"""
input users_variance_order_by {
  date_create: order_by
  date_deactivate: order_by
  id: order_by
  organizationId: order_by
  primaryDashboardId: order_by
}

scalar uuid
